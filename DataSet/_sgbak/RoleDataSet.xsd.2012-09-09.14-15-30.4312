<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="RoleDataSet" targetNamespace="http://tempuri.org/RoleDataSet.xsd" xmlns:mstns="http://tempuri.org/RoleDataSet.xsd" xmlns="http://tempuri.org/RoleDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="MCAPConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MCAPConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MCAP.My.MySettings.GlobalReference.Default.MCAPConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ScreenRolesTableAdapter" GeneratorDataComponentClassName="ScreenRolesTableAdapter" Name="ScreenRoles" UserDataComponentName="ScreenRolesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.ScreenRoles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ScreenRoles] WHERE (([ScreenId] = @Original_ScreenId) AND ([RoleId] = @Original_RoleId))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ScreenId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ScreenRoles] ([ScreenId], [RoleId]) VALUES (@ScreenId, @RoleId);
SELECT ScreenId, RoleId FROM ScreenRoles WHERE (RoleId = @RoleId) AND (ScreenId = @ScreenId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ScreenId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ScreenId, RoleId FROM dbo.ScreenRoles</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ScreenRoles] SET [ScreenId] = @ScreenId, [RoleId] = @RoleId WHERE (([ScreenId] = @Original_ScreenId) AND ([RoleId] = @Original_RoleId));
SELECT ScreenId, RoleId FROM ScreenRoles WHERE (RoleId = @RoleId) AND (ScreenId = @ScreenId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ScreenId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ScreenId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ScreenId" DataSetColumn="ScreenId" />
              <Mapping SourceColumn="RoleId" DataSetColumn="RoleId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.ScreenRoles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByRoleId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByRoleId" GeneratorSourceName="FillByRoleId" GetMethodModifier="Public" GetMethodName="GetDataByRoleId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByRoleId" UserSourceName="FillByRoleId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ScreenId, RoleId FROM dbo.ScreenRoles WHERE RoleId = @RoleID</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleID" ColumnName="RoleId" DataSourceName="MCAP.dbo.ScreenRoles" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.ScreenRoles" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByRoleName" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByRoleName" GeneratorSourceName="FillByRoleName" GetMethodModifier="Public" GetMethodName="GetDataByRoleName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByRoleName" UserSourceName="FillByRoleName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT ScreenId, ScreenRoles.RoleId 
FROM dbo.ScreenRoles
INNER JOIN dbo.Role
ON ScreenRoles.RoleId = Role.RoleId
WHERE Role.Descrip = @Descrip</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Descrip" ColumnName="Descrip" DataSourceName="MCAP.dbo.Role" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@Descrip" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Descrip" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ScreenTableAdapter" GeneratorDataComponentClassName="ScreenTableAdapter" Name="Screen" UserDataComponentName="ScreenTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.Screen" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Screen] WHERE (([ScreenId] = @Original_ScreenId) AND ((@IsNull_FormName = 1 AND [FormName] IS NULL) OR ([FormName] = @Original_FormName)) AND ((@IsNull_Functionality = 1 AND [Functionality] IS NULL) OR ([Functionality] = @Original_Functionality)) AND ((@IsNull_ObjectName = 1 AND [ObjectName] IS NULL) OR ([ObjectName] = @Original_ObjectName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ScreenId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_FormName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FormName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FormName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FormName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Functionality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Functionality" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Functionality" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Functionality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ObjectName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ObjectName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ObjectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ObjectName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Screen] ([FormName], [Functionality], [ObjectName]) VALUES (@FormName, @Functionality, @ObjectName);
SELECT ScreenId, FormName, Functionality, ObjectName FROM Screen WHERE (ScreenId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FormName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FormName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Functionality" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Functionality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ObjectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ObjectName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ScreenId, FormName, Functionality, ObjectName FROM dbo.Screen</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Screen] SET [FormName] = @FormName, [Functionality] = @Functionality, [ObjectName] = @ObjectName WHERE (([ScreenId] = @Original_ScreenId) AND ((@IsNull_FormName = 1 AND [FormName] IS NULL) OR ([FormName] = @Original_FormName)) AND ((@IsNull_Functionality = 1 AND [Functionality] IS NULL) OR ([Functionality] = @Original_Functionality)) AND ((@IsNull_ObjectName = 1 AND [ObjectName] IS NULL) OR ([ObjectName] = @Original_ObjectName)));
SELECT ScreenId, FormName, Functionality, ObjectName FROM Screen WHERE (ScreenId = @ScreenId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@FormName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FormName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Functionality" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Functionality" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ObjectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ObjectName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ScreenId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ScreenId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_FormName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FormName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FormName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FormName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Functionality" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Functionality" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Functionality" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Functionality" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ObjectName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ObjectName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ObjectName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ObjectName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ScreenId" ColumnName="ScreenId" DataSourceName="MCAP.dbo.Screen" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ScreenId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ScreenId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ScreenId" DataSetColumn="ScreenId" />
              <Mapping SourceColumn="FormName" DataSetColumn="FormName" />
              <Mapping SourceColumn="Functionality" DataSetColumn="Functionality" />
              <Mapping SourceColumn="ObjectName" DataSetColumn="ObjectName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.Screen" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByRoleId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByRoleId" GeneratorSourceName="FillByRoleId" GetMethodModifier="Public" GetMethodName="GetDataByRoleId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByRoleId" UserSourceName="FillByRoleId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     Screen.ScreenId, Screen.FormName, Screen.Functionality, Screen.ObjectName
FROM         Screen INNER JOIN
                      ScreenRoles ON Screen.ScreenId = ScreenRoles.ScreenId INNER JOIN
                      Role ON ScreenRoles.RoleId = Role.RoleId
WHERE     (Role.RoleId = @RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleId" ColumnName="RoleId" DataSourceName="MCAP.dbo.Role" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.Screen" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByRoleName" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByRoleName" GeneratorSourceName="FillByRoleName" GetMethodModifier="Public" GetMethodName="GetDataByRoleName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByRoleName" UserSourceName="FillByRoleName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     Screen.ScreenId, Screen.FormName, Screen.Functionality, Screen.ObjectName
FROM         Screen INNER JOIN
                      ScreenRoles ON Screen.ScreenId = ScreenRoles.ScreenId INNER JOIN
                      Role ON ScreenRoles.RoleId = Role.RoleId
WHERE     (Role.Descrip = @Descrip)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Descrip" ColumnName="Descrip" DataSourceName="MCAP.dbo.Role" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@Descrip" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Descrip" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.Screen" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillForRoles" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataForRoles" GeneratorSourceName="FillForRoles" GetMethodModifier="Public" GetMethodName="GetDataForRoles" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataForRoles" UserSourceName="FillForRoles">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     ScreenId, FormName, FormName + CASE WHEN Functionality IS NULL THEN '' ELSE ' (' + Functionality + ')' END AS FormFunctionality, 
                      ObjectName
FROM         Screen</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RoleTableAdapter" GeneratorDataComponentClassName="RoleTableAdapter" Name="Role" UserDataComponentName="RoleTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.Role" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM Role
WHERE     (RoleId = @Original_RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_RoleId" ColumnName="RoleId" DataSourceName="MCAP.dbo.Role" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [Role] ([Descrip]) VALUES (@Descrip);
SELECT RoleId, Descrip FROM Role WHERE (RoleId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Descrip" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Descrip" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     RoleId, Descrip
FROM         Role</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE    Role
SET              Descrip = @Descrip
WHERE     (RoleId = @Original_RoleId); 
SELECT RoleId, Descrip FROM Role WHERE (RoleId = @RoleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Descrip" ColumnName="Descrip" DataSourceName="MCAP.dbo.Role" DataTypeServer="varchar(50)" DbType="AnsiString" Direction="Input" ParameterName="@Descrip" Precision="0" ProviderType="VarChar" Scale="0" Size="50" SourceColumn="Descrip" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_RoleId" ColumnName="RoleId" DataSourceName="MCAP.dbo.Role" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_RoleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RoleId" ColumnName="RoleId" DataSourceName="MCAP.dbo.Role" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RoleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="RoleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RoleId" DataSetColumn="RoleId" />
              <Mapping SourceColumn="Descrip" DataSetColumn="Descrip" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="RoleDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="RoleDataSet" msprop:Generator_DataSetName="RoleDataSet" msprop:EnableTableAdapterManager="True">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="ScreenRoles" msprop:Generator_UserTableName="ScreenRoles" msprop:Generator_RowDeletedName="ScreenRolesRowDeleted" msprop:Generator_RowChangedName="ScreenRolesRowChanged" msprop:Generator_RowClassName="ScreenRolesRow" msprop:Generator_RowChangingName="ScreenRolesRowChanging" msprop:Generator_RowEvArgName="ScreenRolesRowChangeEvent" msprop:Generator_RowEvHandlerName="ScreenRolesRowChangeEventHandler" msprop:Generator_TableClassName="ScreenRolesDataTable" msprop:Generator_TableVarName="tableScreenRoles" msprop:Generator_RowDeletingName="ScreenRolesRowDeleting" msprop:Generator_TablePropName="ScreenRoles">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ScreenId" msprop:Generator_UserColumnName="ScreenId" msprop:Generator_ColumnVarNameInTable="columnScreenId" msprop:Generator_ColumnPropNameInRow="ScreenId" msprop:Generator_ColumnPropNameInTable="ScreenIdColumn" type="xs:int" />
              <xs:element name="RoleId" msprop:Generator_UserColumnName="RoleId" msprop:Generator_ColumnVarNameInTable="columnRoleId" msprop:Generator_ColumnPropNameInRow="RoleId" msprop:Generator_ColumnPropNameInTable="RoleIdColumn" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Screen" msprop:Generator_UserTableName="Screen" msprop:Generator_RowDeletedName="ScreenRowDeleted" msprop:Generator_RowChangedName="ScreenRowChanged" msprop:Generator_RowClassName="ScreenRow" msprop:Generator_RowChangingName="ScreenRowChanging" msprop:Generator_RowEvArgName="ScreenRowChangeEvent" msprop:Generator_RowEvHandlerName="ScreenRowChangeEventHandler" msprop:Generator_TableClassName="ScreenDataTable" msprop:Generator_TableVarName="tableScreen" msprop:Generator_RowDeletingName="ScreenRowDeleting" msprop:Generator_TablePropName="Screen">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ScreenId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="ScreenId" msprop:Generator_ColumnVarNameInTable="columnScreenId" msprop:Generator_ColumnPropNameInRow="ScreenId" msprop:Generator_ColumnPropNameInTable="ScreenIdColumn" type="xs:int" />
              <xs:element name="FormName" msprop:Generator_UserColumnName="FormName" msprop:Generator_ColumnVarNameInTable="columnFormName" msprop:Generator_ColumnPropNameInRow="FormName" msprop:Generator_ColumnPropNameInTable="FormNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Functionality" msprop:Generator_UserColumnName="Functionality" msprop:Generator_ColumnVarNameInTable="columnFunctionality" msprop:Generator_ColumnPropNameInRow="Functionality" msprop:Generator_ColumnPropNameInTable="FunctionalityColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ObjectName" msprop:Generator_UserColumnName="ObjectName" msprop:Generator_ColumnVarNameInTable="columnObjectName" msprop:Generator_ColumnPropNameInRow="ObjectName" msprop:Generator_ColumnPropNameInTable="ObjectNameColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="200" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Role" msprop:Generator_UserTableName="Role" msprop:Generator_RowDeletedName="RoleRowDeleted" msprop:Generator_RowChangedName="RoleRowChanged" msprop:Generator_RowClassName="RoleRow" msprop:Generator_RowChangingName="RoleRowChanging" msprop:Generator_RowEvArgName="RoleRowChangeEvent" msprop:Generator_RowEvHandlerName="RoleRowChangeEventHandler" msprop:Generator_TableClassName="RoleDataTable" msprop:Generator_TableVarName="tableRole" msprop:Generator_RowDeletingName="RoleRowDeleting" msprop:Generator_TablePropName="Role">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RoleId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="RoleId" msprop:Generator_ColumnPropNameInRow="RoleId" msprop:Generator_ColumnVarNameInTable="columnRoleId" msprop:Generator_ColumnPropNameInTable="RoleIdColumn" type="xs:int" />
              <xs:element name="Descrip" msprop:Generator_UserColumnName="Descrip" msprop:Generator_ColumnPropNameInRow="Descrip" msprop:Generator_ColumnVarNameInTable="columnDescrip" msprop:Generator_ColumnPropNameInTable="DescripColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ScreenRoles" />
      <xs:field xpath="mstns:ScreenId" />
      <xs:field xpath="mstns:RoleId" />
    </xs:unique>
    <xs:unique name="Screen_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Screen" />
      <xs:field xpath="mstns:ScreenId" />
    </xs:unique>
    <xs:unique name="Role_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Role" />
      <xs:field xpath="mstns:RoleId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_ScreenRoles_Screen" msdata:parent="Screen" msdata:child="ScreenRoles" msdata:parentkey="ScreenId" msdata:childkey="ScreenId" msprop:Generator_UserRelationName="FK_ScreenRoles_Screen" msprop:Generator_RelationVarName="relationFK_ScreenRoles_Screen" msprop:Generator_UserChildTable="ScreenRoles" msprop:Generator_UserParentTable="Screen" msprop:Generator_ParentPropName="ScreenRow" msprop:Generator_ChildPropName="GetScreenRolesRows" />
      <msdata:Relationship name="FK_Role_ScreenRoles" msdata:parent="Role" msdata:child="ScreenRoles" msdata:parentkey="RoleId" msdata:childkey="RoleId" msprop:Generator_UserRelationName="FK_Role_ScreenRoles" msprop:Generator_RelationVarName="relationFK_Role_ScreenRoles" msprop:Generator_UserChildTable="ScreenRoles" msprop:Generator_UserParentTable="Role" msprop:Generator_ParentPropName="RoleRow" msprop:Generator_ChildPropName="GetScreenRolesRows" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>