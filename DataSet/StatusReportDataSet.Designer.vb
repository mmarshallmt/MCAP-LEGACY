'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("StatusReportDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class StatusReportDataSet
    Inherits Global.System.Data.DataSet
    
    Private tablevwEnvelopeStatusReport As vwEnvelopeStatusReportDataTable

    Private tablePage As PageDataTable

    Private tablevwVehicleStatusReport As vwVehicleStatusReportDataTable

    Private tableSender As SenderDataTable

    Private tablePageCrop As PageCropDataTable

    Private relationFK_Page_PageCrop As Global.System.Data.DataRelation

    Private relationvwEnvelopeStatusReport_vwVehicleStatusReport As Global.System.Data.DataRelation

    Private relationvwVehicleStatusReport_Page As Global.System.Data.DataRelation

    Private relationSender_vwEnvelopeStatusReport As Global.System.Data.DataRelation

    Private relationSender_vwVehicleStatusReport As Global.System.Data.DataRelation

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("vwEnvelopeStatusReport")) Is Nothing) Then
                MyBase.Tables.Add(New vwEnvelopeStatusReportDataTable(ds.Tables("vwEnvelopeStatusReport")))
            End If
            If (Not (ds.Tables("Page")) Is Nothing) Then
                MyBase.Tables.Add(New PageDataTable(ds.Tables("Page")))
            End If
            If (Not (ds.Tables("vwVehicleStatusReport")) Is Nothing) Then
                MyBase.Tables.Add(New vwVehicleStatusReportDataTable(ds.Tables("vwVehicleStatusReport")))
            End If
            If (Not (ds.Tables("Sender")) Is Nothing) Then
                MyBase.Tables.Add(New SenderDataTable(ds.Tables("Sender")))
            End If
            If (Not (ds.Tables("PageCrop")) Is Nothing) Then
                MyBase.Tables.Add(New PageCropDataTable(ds.Tables("PageCrop")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property vwEnvelopeStatusReport() As vwEnvelopeStatusReportDataTable
        Get
            Return Me.tablevwEnvelopeStatusReport
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Page() As PageDataTable
        Get
            Return Me.tablePage
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property vwVehicleStatusReport() As vwVehicleStatusReportDataTable
        Get
            Return Me.tablevwVehicleStatusReport
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property Sender() As SenderDataTable
        Get
            Return Me.tableSender
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property PageCrop() As PageCropDataTable
        Get
            Return Me.tablePageCrop
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As StatusReportDataSet = CType(MyBase.Clone, StatusReportDataSet)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("vwEnvelopeStatusReport")) Is Nothing) Then
                MyBase.Tables.Add(New vwEnvelopeStatusReportDataTable(ds.Tables("vwEnvelopeStatusReport")))
            End If
            If (Not (ds.Tables("Page")) Is Nothing) Then
                MyBase.Tables.Add(New PageDataTable(ds.Tables("Page")))
            End If
            If (Not (ds.Tables("vwVehicleStatusReport")) Is Nothing) Then
                MyBase.Tables.Add(New vwVehicleStatusReportDataTable(ds.Tables("vwVehicleStatusReport")))
            End If
            If (Not (ds.Tables("Sender")) Is Nothing) Then
                MyBase.Tables.Add(New SenderDataTable(ds.Tables("Sender")))
            End If
            If (Not (ds.Tables("PageCrop")) Is Nothing) Then
                MyBase.Tables.Add(New PageCropDataTable(ds.Tables("PageCrop")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tablevwEnvelopeStatusReport = CType(MyBase.Tables("vwEnvelopeStatusReport"), vwEnvelopeStatusReportDataTable)
        If (initTable = True) Then
            If (Not (Me.tablevwEnvelopeStatusReport) Is Nothing) Then
                Me.tablevwEnvelopeStatusReport.InitVars()
            End If
        End If
        Me.tablePage = CType(MyBase.Tables("Page"), PageDataTable)
        If (initTable = True) Then
            If (Not (Me.tablePage) Is Nothing) Then
                Me.tablePage.InitVars()
            End If
        End If
        Me.tablevwVehicleStatusReport = CType(MyBase.Tables("vwVehicleStatusReport"), vwVehicleStatusReportDataTable)
        If (initTable = True) Then
            If (Not (Me.tablevwVehicleStatusReport) Is Nothing) Then
                Me.tablevwVehicleStatusReport.InitVars()
            End If
        End If
        Me.tableSender = CType(MyBase.Tables("Sender"), SenderDataTable)
        If (initTable = True) Then
            If (Not (Me.tableSender) Is Nothing) Then
                Me.tableSender.InitVars()
            End If
        End If
        Me.tablePageCrop = CType(MyBase.Tables("PageCrop"), PageCropDataTable)
        If (initTable = True) Then
            If (Not (Me.tablePageCrop) Is Nothing) Then
                Me.tablePageCrop.InitVars()
            End If
        End If
        Me.relationFK_Page_PageCrop = Me.Relations("FK_Page_PageCrop")
        Me.relationvwEnvelopeStatusReport_vwVehicleStatusReport = Me.Relations("vwEnvelopeStatusReport_vwVehicleStatusReport")
        Me.relationvwVehicleStatusReport_Page = Me.Relations("vwVehicleStatusReport_Page")
        Me.relationSender_vwEnvelopeStatusReport = Me.Relations("Sender_vwEnvelopeStatusReport")
        Me.relationSender_vwVehicleStatusReport = Me.Relations("Sender_vwVehicleStatusReport")
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "StatusReportDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/StatusReportDataSet.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tablevwEnvelopeStatusReport = New vwEnvelopeStatusReportDataTable()
        MyBase.Tables.Add(Me.tablevwEnvelopeStatusReport)
        Me.tablePage = New PageDataTable()
        MyBase.Tables.Add(Me.tablePage)
        Me.tablevwVehicleStatusReport = New vwVehicleStatusReportDataTable()
        MyBase.Tables.Add(Me.tablevwVehicleStatusReport)
        Me.tableSender = New SenderDataTable()
        MyBase.Tables.Add(Me.tableSender)
        Me.tablePageCrop = New PageCropDataTable()
        MyBase.Tables.Add(Me.tablePageCrop)
        Dim fkc As Global.System.Data.ForeignKeyConstraint
        fkc = New Global.System.Data.ForeignKeyConstraint("FK_Page_PageCrop", New Global.System.Data.DataColumn() {Me.tablePage.PageIdColumn}, New Global.System.Data.DataColumn() {Me.tablePageCrop.PageIdColumn})
        Me.tablePageCrop.Constraints.Add(fkc)
        fkc.AcceptRejectRule = Global.System.Data.AcceptRejectRule.None
        fkc.DeleteRule = Global.System.Data.Rule.Cascade
        fkc.UpdateRule = Global.System.Data.Rule.Cascade
        Me.relationFK_Page_PageCrop = New Global.System.Data.DataRelation("FK_Page_PageCrop", New Global.System.Data.DataColumn() {Me.tablePage.PageIdColumn}, New Global.System.Data.DataColumn() {Me.tablePageCrop.PageIdColumn}, False)
        Me.Relations.Add(Me.relationFK_Page_PageCrop)
        Me.relationvwEnvelopeStatusReport_vwVehicleStatusReport = New Global.System.Data.DataRelation("vwEnvelopeStatusReport_vwVehicleStatusReport", New Global.System.Data.DataColumn() {Me.tablevwEnvelopeStatusReport.EnvelopeIdColumn}, New Global.System.Data.DataColumn() {Me.tablevwVehicleStatusReport.EnvelopeIdColumn}, False)
        Me.Relations.Add(Me.relationvwEnvelopeStatusReport_vwVehicleStatusReport)
        Me.relationvwVehicleStatusReport_Page = New Global.System.Data.DataRelation("vwVehicleStatusReport_Page", New Global.System.Data.DataColumn() {Me.tablevwVehicleStatusReport.VehicleIdColumn}, New Global.System.Data.DataColumn() {Me.tablePage.VehicleIdColumn}, False)
        Me.Relations.Add(Me.relationvwVehicleStatusReport_Page)
        Me.relationSender_vwEnvelopeStatusReport = New Global.System.Data.DataRelation("Sender_vwEnvelopeStatusReport", New Global.System.Data.DataColumn() {Me.tableSender.SenderIdColumn}, New Global.System.Data.DataColumn() {Me.tablevwEnvelopeStatusReport.SenderIdColumn}, False)
        Me.Relations.Add(Me.relationSender_vwEnvelopeStatusReport)
        Me.relationSender_vwVehicleStatusReport = New Global.System.Data.DataRelation("Sender_vwVehicleStatusReport", New Global.System.Data.DataColumn() {Me.tableSender.SenderIdColumn}, New Global.System.Data.DataColumn() {Me.tablevwVehicleStatusReport.SenderIdColumn}, False)
        Me.Relations.Add(Me.relationSender_vwVehicleStatusReport)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializevwEnvelopeStatusReport() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializePage() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializevwVehicleStatusReport() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeSender() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializePageCrop() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As StatusReportDataSet = New StatusReportDataSet()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub vwEnvelopeStatusReportRowChangeEventHandler(ByVal sender As Object, ByVal e As vwEnvelopeStatusReportRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub PageRowChangeEventHandler(ByVal sender As Object, ByVal e As PageRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub vwVehicleStatusReportRowChangeEventHandler(ByVal sender As Object, ByVal e As vwVehicleStatusReportRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub SenderRowChangeEventHandler(ByVal sender As Object, ByVal e As SenderRowChangeEvent)

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub PageCropRowChangeEventHandler(ByVal sender As Object, ByVal e As PageCropRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class vwEnvelopeStatusReportDataTable
        Inherits Global.System.Data.TypedTableBase(Of vwEnvelopeStatusReportRow)

        Private columnEnvelopeId As Global.System.Data.DataColumn

        Private columnSenderId As Global.System.Data.DataColumn

        Private columnSender As Global.System.Data.DataColumn

        Private columnReceivedDt As Global.System.Data.DataColumn

        Private columnReceivedById As Global.System.Data.DataColumn

        Private columnReceivedBy As Global.System.Data.DataColumn

        Private columnReceivedAt As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "vwEnvelopeStatusReport"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EnvelopeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnvelopeId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SenderIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SenderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSender
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReceivedDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceivedDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReceivedByIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceivedById
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReceivedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceivedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReceivedAtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceivedAt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As vwEnvelopeStatusReportRow
            Get
                Return CType(Me.Rows(index), vwEnvelopeStatusReportRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vwEnvelopeStatusReportRowChanging As vwEnvelopeStatusReportRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vwEnvelopeStatusReportRowChanged As vwEnvelopeStatusReportRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vwEnvelopeStatusReportRowDeleting As vwEnvelopeStatusReportRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vwEnvelopeStatusReportRowDeleted As vwEnvelopeStatusReportRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddvwEnvelopeStatusReportRow(ByVal row As vwEnvelopeStatusReportRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddvwEnvelopeStatusReportRow(ByVal EnvelopeId As Integer, ByVal parentSenderRowBySender_vwEnvelopeStatusReport As SenderRow, ByVal Sender As String, ByVal ReceivedDt As Date, ByVal ReceivedById As Integer, ByVal ReceivedBy As String, ByVal ReceivedAt As String) As vwEnvelopeStatusReportRow
            Dim rowvwEnvelopeStatusReportRow As vwEnvelopeStatusReportRow = CType(Me.NewRow, vwEnvelopeStatusReportRow)
            Dim columnValuesArray() As Object = New Object() {EnvelopeId, Nothing, Sender, ReceivedDt, ReceivedById, ReceivedBy, ReceivedAt}
            If (Not (parentSenderRowBySender_vwEnvelopeStatusReport) Is Nothing) Then
                columnValuesArray(1) = parentSenderRowBySender_vwEnvelopeStatusReport(0)
            End If
            rowvwEnvelopeStatusReportRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvwEnvelopeStatusReportRow)
            Return rowvwEnvelopeStatusReportRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByEnvelopeId(ByVal EnvelopeId As Integer) As vwEnvelopeStatusReportRow
            Return CType(Me.Rows.Find(New Object() {EnvelopeId}), vwEnvelopeStatusReportRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vwEnvelopeStatusReportDataTable = CType(MyBase.Clone, vwEnvelopeStatusReportDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vwEnvelopeStatusReportDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnEnvelopeId = MyBase.Columns("EnvelopeId")
            Me.columnSenderId = MyBase.Columns("SenderId")
            Me.columnSender = MyBase.Columns("Sender")
            Me.columnReceivedDt = MyBase.Columns("ReceivedDt")
            Me.columnReceivedById = MyBase.Columns("ReceivedById")
            Me.columnReceivedBy = MyBase.Columns("ReceivedBy")
            Me.columnReceivedAt = MyBase.Columns("ReceivedAt")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnEnvelopeId = New Global.System.Data.DataColumn("EnvelopeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnvelopeId)
            Me.columnSenderId = New Global.System.Data.DataColumn("SenderId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderId)
            Me.columnSender = New Global.System.Data.DataColumn("Sender", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSender)
            Me.columnReceivedDt = New Global.System.Data.DataColumn("ReceivedDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceivedDt)
            Me.columnReceivedById = New Global.System.Data.DataColumn("ReceivedById", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceivedById)
            Me.columnReceivedBy = New Global.System.Data.DataColumn("ReceivedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceivedBy)
            Me.columnReceivedAt = New Global.System.Data.DataColumn("ReceivedAt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceivedAt)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnEnvelopeId}, True))
            Me.columnEnvelopeId.AllowDBNull = False
            Me.columnEnvelopeId.Unique = True
            Me.columnSender.MaxLength = 50
            Me.columnReceivedBy.ReadOnly = True
            Me.columnReceivedBy.MaxLength = 101
            Me.columnReceivedAt.MaxLength = 50
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewvwEnvelopeStatusReportRow() As vwEnvelopeStatusReportRow
            Return CType(Me.NewRow, vwEnvelopeStatusReportRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vwEnvelopeStatusReportRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vwEnvelopeStatusReportRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vwEnvelopeStatusReportRowChangedEvent) Is Nothing) Then
                RaiseEvent vwEnvelopeStatusReportRowChanged(Me, New vwEnvelopeStatusReportRowChangeEvent(CType(e.Row, vwEnvelopeStatusReportRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vwEnvelopeStatusReportRowChangingEvent) Is Nothing) Then
                RaiseEvent vwEnvelopeStatusReportRowChanging(Me, New vwEnvelopeStatusReportRowChangeEvent(CType(e.Row, vwEnvelopeStatusReportRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vwEnvelopeStatusReportRowDeletedEvent) Is Nothing) Then
                RaiseEvent vwEnvelopeStatusReportRowDeleted(Me, New vwEnvelopeStatusReportRowChangeEvent(CType(e.Row, vwEnvelopeStatusReportRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vwEnvelopeStatusReportRowDeletingEvent) Is Nothing) Then
                RaiseEvent vwEnvelopeStatusReportRowDeleting(Me, New vwEnvelopeStatusReportRowChangeEvent(CType(e.Row, vwEnvelopeStatusReportRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovevwEnvelopeStatusReportRow(ByVal row As vwEnvelopeStatusReportRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As StatusReportDataSet = New StatusReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vwEnvelopeStatusReportDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class PageDataTable
        Inherits Global.System.Data.TypedTableBase(Of PageRow)

        Private columnVehicleId As Global.System.Data.DataColumn

        Private columnPageId As Global.System.Data.DataColumn

        Private columnImageName As Global.System.Data.DataColumn

        Private columnPageTypeId As Global.System.Data.DataColumn

        Private columnReceivedOrder As Global.System.Data.DataColumn

        Private columnPageName As Global.System.Data.DataColumn

        Private columnPixelHieght As Global.System.Data.DataColumn

        Private columnPixelWidth As Global.System.Data.DataColumn

        Private columnSizeID As Global.System.Data.DataColumn

        Private columnSizeText As Global.System.Data.DataColumn

        Private columnCroppedPages As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Page"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VehicleIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicleId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PageIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPageId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImageNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImageName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PageTypeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPageTypeId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReceivedOrderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceivedOrder
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PageNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPageName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PixelHieghtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPixelHieght
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PixelWidthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPixelWidth
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SizeIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSizeID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SizeTextColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSizeText
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CroppedPagesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCroppedPages
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As PageRow
            Get
                Return CType(Me.Rows(index), PageRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PageRowChanging As PageRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PageRowChanged As PageRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PageRowDeleting As PageRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PageRowDeleted As PageRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddPageRow(ByVal row As PageRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddPageRow(ByVal parentvwVehicleStatusReportRowByvwVehicleStatusReport_Page As vwVehicleStatusReportRow, ByVal ImageName As String, ByVal PageTypeId As String, ByVal ReceivedOrder As Integer, ByVal PageName As String, ByVal PixelHieght As Integer, ByVal PixelWidth As Integer, ByVal SizeID As Integer, ByVal SizeText As String, ByVal CroppedPages As Integer) As PageRow
            Dim rowPageRow As PageRow = CType(Me.NewRow, PageRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, ImageName, PageTypeId, ReceivedOrder, PageName, PixelHieght, PixelWidth, SizeID, SizeText, CroppedPages}
            If (Not (parentvwVehicleStatusReportRowByvwVehicleStatusReport_Page) Is Nothing) Then
                columnValuesArray(0) = parentvwVehicleStatusReportRowByvwVehicleStatusReport_Page(2)
            End If
            rowPageRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPageRow)
            Return rowPageRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByPageId(ByVal PageId As Integer) As PageRow
            Return CType(Me.Rows.Find(New Object() {PageId}), PageRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PageDataTable = CType(MyBase.Clone, PageDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PageDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnVehicleId = MyBase.Columns("VehicleId")
            Me.columnPageId = MyBase.Columns("PageId")
            Me.columnImageName = MyBase.Columns("ImageName")
            Me.columnPageTypeId = MyBase.Columns("PageTypeId")
            Me.columnReceivedOrder = MyBase.Columns("ReceivedOrder")
            Me.columnPageName = MyBase.Columns("PageName")
            Me.columnPixelHieght = MyBase.Columns("PixelHieght")
            Me.columnPixelWidth = MyBase.Columns("PixelWidth")
            Me.columnSizeID = MyBase.Columns("SizeID")
            Me.columnSizeText = MyBase.Columns("SizeText")
            Me.columnCroppedPages = MyBase.Columns("CroppedPages")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnVehicleId = New Global.System.Data.DataColumn("VehicleId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicleId)
            Me.columnPageId = New Global.System.Data.DataColumn("PageId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPageId)
            Me.columnImageName = New Global.System.Data.DataColumn("ImageName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImageName)
            Me.columnPageTypeId = New Global.System.Data.DataColumn("PageTypeId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPageTypeId)
            Me.columnReceivedOrder = New Global.System.Data.DataColumn("ReceivedOrder", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceivedOrder)
            Me.columnPageName = New Global.System.Data.DataColumn("PageName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPageName)
            Me.columnPixelHieght = New Global.System.Data.DataColumn("PixelHieght", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPixelHieght)
            Me.columnPixelWidth = New Global.System.Data.DataColumn("PixelWidth", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPixelWidth)
            Me.columnSizeID = New Global.System.Data.DataColumn("SizeID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSizeID)
            Me.columnSizeText = New Global.System.Data.DataColumn("SizeText", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSizeText)
            Me.columnCroppedPages = New Global.System.Data.DataColumn("CroppedPages", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCroppedPages)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPageId}, True))
            Me.columnPageId.AutoIncrement = True
            Me.columnPageId.AutoIncrementSeed = -1
            Me.columnPageId.AutoIncrementStep = -1
            Me.columnPageId.AllowDBNull = False
            Me.columnPageId.ReadOnly = True
            Me.columnPageId.Unique = True
            Me.columnImageName.MaxLength = 50
            Me.columnPageTypeId.MaxLength = 1
            Me.columnPageName.MaxLength = 50
            Me.columnSizeText.ReadOnly = True
            Me.columnSizeText.MaxLength = 15
            Me.columnCroppedPages.ReadOnly = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewPageRow() As PageRow
            Return CType(Me.NewRow, PageRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PageRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PageRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PageRowChangedEvent) Is Nothing) Then
                RaiseEvent PageRowChanged(Me, New PageRowChangeEvent(CType(e.Row, PageRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PageRowChangingEvent) Is Nothing) Then
                RaiseEvent PageRowChanging(Me, New PageRowChangeEvent(CType(e.Row, PageRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PageRowDeletedEvent) Is Nothing) Then
                RaiseEvent PageRowDeleted(Me, New PageRowChangeEvent(CType(e.Row, PageRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PageRowDeletingEvent) Is Nothing) Then
                RaiseEvent PageRowDeleting(Me, New PageRowChangeEvent(CType(e.Row, PageRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovePageRow(ByVal row As PageRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As StatusReportDataSet = New StatusReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PageDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class vwVehicleStatusReportDataTable
        Inherits Global.System.Data.TypedTableBase(Of vwVehicleStatusReportRow)

        Private columnEnvelopeId As Global.System.Data.DataColumn

        Private columnSenderId As Global.System.Data.DataColumn

        Private columnVehicleId As Global.System.Data.DataColumn

        Private columnRetId As Global.System.Data.DataColumn

        Private columnRetailer As Global.System.Data.DataColumn

        Private columnTradeclass As Global.System.Data.DataColumn

        Private columnMktId As Global.System.Data.DataColumn

        Private columnMarket As Global.System.Data.DataColumn

        Private columnMediaId As Global.System.Data.DataColumn

        Private columnMedia As Global.System.Data.DataColumn

        Private columnPublicationId As Global.System.Data.DataColumn

        Private columnPublication As Global.System.Data.DataColumn

        Private columnLanguageId As Global.System.Data.DataColumn

        Private columnLanguage As Global.System.Data.DataColumn

        Private columnEventId As Global.System.Data.DataColumn

        Private columnEvent As Global.System.Data.DataColumn

        Private columnThemeId As Global.System.Data.DataColumn

        Private columnTheme As Global.System.Data.DataColumn

        Private columnPriority As Global.System.Data.DataColumn

        Private columnBreakDt As Global.System.Data.DataColumn

        Private columnStartDt As Global.System.Data.DataColumn

        Private columnEndDt As Global.System.Data.DataColumn

        Private columnCoupon As Global.System.Data.DataColumn

        Private columnFlash As Global.System.Data.DataColumn

        Private columnCreateDt As Global.System.Data.DataColumn

        Private columnCreatedById As Global.System.Data.DataColumn

        Private columnCreatedBy As Global.System.Data.DataColumn

        Private columnIndexDt As Global.System.Data.DataColumn

        Private columnIndexedById As Global.System.Data.DataColumn

        Private columnIndexedBy As Global.System.Data.DataColumn

        Private columnScanDt As Global.System.Data.DataColumn

        Private columnScannedById As Global.System.Data.DataColumn

        Private columnScannedBy As Global.System.Data.DataColumn

        Private columnQCDt As Global.System.Data.DataColumn

        Private columnQCedById As Global.System.Data.DataColumn

        Private columnQCedBy As Global.System.Data.DataColumn

        Private columnCreateSizedDt As Global.System.Data.DataColumn

        Private columnStatusID As Global.System.Data.DataColumn

        Private columnStatus As Global.System.Data.DataColumn

        Private columnFTPDt As Global.System.Data.DataColumn

        Private columnFTPStatusId As Global.System.Data.DataColumn

        Private columnFTPStatus As Global.System.Data.DataColumn

        Private columnSPReviewStatusId As Global.System.Data.DataColumn

        Private columnSPReviewStatus As Global.System.Data.DataColumn

        Private columnSubject As Global.System.Data.DataColumn

        Private columnSentBy As Global.System.Data.DataColumn

        Private columnSentFrom As Global.System.Data.DataColumn

        Private _columnftpDt As Global.System.Data.DataColumn

        Private _columnftpStatusId As Global.System.Data.DataColumn

        Private columnCompareVehicleId As Global.System.Data.DataColumn

        Private columnFlyerId As Global.System.Data.DataColumn

        Private columnStatusChangeBy As Global.System.Data.DataColumn

        Private columnCircularID As Global.System.Data.DataColumn

        Private columnVersionNumber As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "vwVehicleStatusReport"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EnvelopeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnvelopeId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SenderIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VehicleIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVehicleId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RetIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRetId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RetailerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRetailer
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TradeclassColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTradeclass
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MktIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMktId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MarketColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMarket
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MediaIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMediaId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MediaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedia
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PublicationIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPublicationId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PublicationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPublication
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LanguageIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLanguageId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property LanguageColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLanguage
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EventIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEventId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EventColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEvent
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ThemeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnThemeId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ThemeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTheme
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PriorityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPriority
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property BreakDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBreakDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property StartDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStartDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EndDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEndDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CouponColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoupon
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FlashColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlash
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CreateDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreateDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CreatedByIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreatedById
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CreatedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreatedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndexDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndexDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndexedByIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndexedById
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndexedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndexedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ScanDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScanDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ScannedByIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScannedById
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ScannedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnScannedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QCDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QCedByIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCedById
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property QCedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnQCedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CreateSizedDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreateSizedDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property StatusIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FTPDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTPDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FTPStatusIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTPStatusId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FTPStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFTPStatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPReviewStatusIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPReviewStatusId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SPReviewStatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPReviewStatus
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubjectColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubject
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SentByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSentBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SentFromColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSentFrom
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property _ftpDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnftpDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property _ftpStatusIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me._columnftpStatusId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CompareVehicleIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompareVehicleId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FlyerIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlyerId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property StatusChangeByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatusChangeBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CircularIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCircularID
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VersionNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVersionNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As vwVehicleStatusReportRow
            Get
                Return CType(Me.Rows(index), vwVehicleStatusReportRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vwVehicleStatusReportRowChanging As vwVehicleStatusReportRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vwVehicleStatusReportRowChanged As vwVehicleStatusReportRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vwVehicleStatusReportRowDeleting As vwVehicleStatusReportRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event vwVehicleStatusReportRowDeleted As vwVehicleStatusReportRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddvwVehicleStatusReportRow(ByVal row As vwVehicleStatusReportRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddvwVehicleStatusReportRow( _
                    ByVal parentvwEnvelopeStatusReportRowByvwEnvelopeStatusReport_vwVehicleStatusReport As vwEnvelopeStatusReportRow, _
                    ByVal parentSenderRowBySender_vwVehicleStatusReport As SenderRow, _
                    ByVal VehicleId As Integer, _
                    ByVal RetId As Integer, _
                    ByVal Retailer As String, _
                    ByVal Tradeclass As String, _
                    ByVal MktId As Integer, _
                    ByVal Market As String, _
                    ByVal MediaId As Integer, _
                    ByVal Media As String, _
                    ByVal PublicationId As Integer, _
                    ByVal Publication As String, _
                    ByVal LanguageId As Integer, _
                    ByVal Language As String, _
                    ByVal EventId As Integer, _
                    ByVal _Event As String, _
                    ByVal ThemeId As Integer, _
                    ByVal Theme As String, _
                    ByVal Priority As Integer, _
                    ByVal BreakDt As Date, _
                    ByVal StartDt As Date, _
                    ByVal EndDt As Date, _
                    ByVal Coupon As String, _
                    ByVal Flash As String, _
                    ByVal CreateDt As Date, _
                    ByVal CreatedById As Integer, _
                    ByVal CreatedBy As String, _
                    ByVal IndexDt As Date, _
                    ByVal IndexedById As Integer, _
                    ByVal IndexedBy As String, _
                    ByVal ScanDt As Date, _
                    ByVal ScannedById As Integer, _
                    ByVal ScannedBy As String, _
                    ByVal QCDt As Date, _
                    ByVal QCedById As Integer, _
                    ByVal QCedBy As String, _
                    ByVal CreateSizedDt As Date, _
                    ByVal StatusID As Integer, _
                    ByVal Status As String, _
                    ByVal FTPDt As Date, _
                    ByVal FTPStatusId As Integer, _
                    ByVal FTPStatus As String, _
                    ByVal SPReviewStatusId As Integer, _
                    ByVal SPReviewStatus As String, _
                    ByVal Subject As String, _
                    ByVal SentBy As String, _
                    ByVal SentFrom As String, _
                    ByVal _ftpDt As Date, _
                    ByVal _ftpStatusId As Integer, _
                    ByVal CompareVehicleId As Integer, _
                    ByVal FlyerId As String, _
                    ByVal StatusChangeBy As String, _
                    ByVal CircularID As Integer, _
                    ByVal VersionNumber As Integer) As vwVehicleStatusReportRow
            Dim rowvwVehicleStatusReportRow As vwVehicleStatusReportRow = CType(Me.NewRow, vwVehicleStatusReportRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, VehicleId, RetId, Retailer, Tradeclass, MktId, Market, MediaId, Media, PublicationId, Publication, LanguageId, Language, EventId, _Event, ThemeId, Theme, Priority, BreakDt, StartDt, EndDt, Coupon, Flash, CreateDt, CreatedById, CreatedBy, IndexDt, IndexedById, IndexedBy, ScanDt, ScannedById, ScannedBy, QCDt, QCedById, QCedBy, CreateSizedDt, StatusID, Status, FTPDt, FTPStatusId, FTPStatus, SPReviewStatusId, SPReviewStatus, Subject, SentBy, SentFrom, _ftpDt, _ftpStatusId, CompareVehicleId, FlyerId, StatusChangeBy, CircularID, VersionNumber}
            If (Not (parentvwEnvelopeStatusReportRowByvwEnvelopeStatusReport_vwVehicleStatusReport) Is Nothing) Then
                columnValuesArray(0) = parentvwEnvelopeStatusReportRowByvwEnvelopeStatusReport_vwVehicleStatusReport(0)
            End If
            If (Not (parentSenderRowBySender_vwVehicleStatusReport) Is Nothing) Then
                columnValuesArray(1) = parentSenderRowBySender_vwVehicleStatusReport(0)
            End If
            rowvwVehicleStatusReportRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowvwVehicleStatusReportRow)
            Return rowvwVehicleStatusReportRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByVehicleId(ByVal VehicleId As Integer) As vwVehicleStatusReportRow
            Return CType(Me.Rows.Find(New Object() {VehicleId}), vwVehicleStatusReportRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vwVehicleStatusReportDataTable = CType(MyBase.Clone, vwVehicleStatusReportDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vwVehicleStatusReportDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnEnvelopeId = MyBase.Columns("EnvelopeId")
            Me.columnSenderId = MyBase.Columns("SenderId")
            Me.columnVehicleId = MyBase.Columns("VehicleId")
            Me.columnRetId = MyBase.Columns("RetId")
            Me.columnRetailer = MyBase.Columns("Retailer")
            Me.columnTradeclass = MyBase.Columns("Tradeclass")
            Me.columnMktId = MyBase.Columns("MktId")
            Me.columnMarket = MyBase.Columns("Market")
            Me.columnMediaId = MyBase.Columns("MediaId")
            Me.columnMedia = MyBase.Columns("Media")
            Me.columnPublicationId = MyBase.Columns("PublicationId")
            Me.columnPublication = MyBase.Columns("Publication")
            Me.columnLanguageId = MyBase.Columns("LanguageId")
            Me.columnLanguage = MyBase.Columns("Language")
            Me.columnEventId = MyBase.Columns("EventId")
            Me.columnEvent = MyBase.Columns("Event")
            Me.columnThemeId = MyBase.Columns("ThemeId")
            Me.columnTheme = MyBase.Columns("Theme")
            Me.columnPriority = MyBase.Columns("Priority")
            Me.columnBreakDt = MyBase.Columns("BreakDt")
            Me.columnStartDt = MyBase.Columns("StartDt")
            Me.columnEndDt = MyBase.Columns("EndDt")
            Me.columnCoupon = MyBase.Columns("Coupon")
            Me.columnFlash = MyBase.Columns("Flash")
            Me.columnCreateDt = MyBase.Columns("CreateDt")
            Me.columnCreatedById = MyBase.Columns("CreatedById")
            Me.columnCreatedBy = MyBase.Columns("CreatedBy")
            Me.columnIndexDt = MyBase.Columns("IndexDt")
            Me.columnIndexedById = MyBase.Columns("IndexedById")
            Me.columnIndexedBy = MyBase.Columns("IndexedBy")
            Me.columnScanDt = MyBase.Columns("ScanDt")
            Me.columnScannedById = MyBase.Columns("ScannedById")
            Me.columnScannedBy = MyBase.Columns("ScannedBy")
            Me.columnQCDt = MyBase.Columns("QCDt")
            Me.columnQCedById = MyBase.Columns("QCedById")
            Me.columnQCedBy = MyBase.Columns("QCedBy")
            Me.columnCreateSizedDt = MyBase.Columns("CreateSizedDt")
            Me.columnStatusID = MyBase.Columns("StatusID")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnFTPDt = MyBase.Columns("FTPDt")
            Me.columnFTPStatusId = MyBase.Columns("FTPStatusId")
            Me.columnFTPStatus = MyBase.Columns("FTPStatus")
            Me.columnSPReviewStatusId = MyBase.Columns("SPReviewStatusId")
            Me.columnSPReviewStatus = MyBase.Columns("SPReviewStatus")
            Me.columnSubject = MyBase.Columns("Subject")
            Me.columnSentBy = MyBase.Columns("SentBy")
            Me.columnSentFrom = MyBase.Columns("SentFrom")
            Me._columnftpDt = MyBase.Columns("ftpDt")
            Me._columnftpStatusId = MyBase.Columns("ftpStatusId")
            Me.columnCompareVehicleId = MyBase.Columns("CompareVehicleId")
            Me.columnFlyerId = MyBase.Columns("FlyerId")
            Me.columnStatusChangeBy = MyBase.Columns("StatusChangeBy")
            Me.columnCircularID = MyBase.Columns("CircularID")
            Me.columnVersionNumber = MyBase.Columns("VersionNumber")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnEnvelopeId = New Global.System.Data.DataColumn("EnvelopeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnvelopeId)
            Me.columnSenderId = New Global.System.Data.DataColumn("SenderId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderId)
            Me.columnVehicleId = New Global.System.Data.DataColumn("VehicleId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVehicleId)
            Me.columnRetId = New Global.System.Data.DataColumn("RetId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRetId)
            Me.columnRetailer = New Global.System.Data.DataColumn("Retailer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRetailer)
            Me.columnTradeclass = New Global.System.Data.DataColumn("Tradeclass", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTradeclass)
            Me.columnMktId = New Global.System.Data.DataColumn("MktId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMktId)
            Me.columnMarket = New Global.System.Data.DataColumn("Market", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMarket)
            Me.columnMediaId = New Global.System.Data.DataColumn("MediaId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMediaId)
            Me.columnMedia = New Global.System.Data.DataColumn("Media", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedia)
            Me.columnPublicationId = New Global.System.Data.DataColumn("PublicationId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPublicationId)
            Me.columnPublication = New Global.System.Data.DataColumn("Publication", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPublication)
            Me.columnLanguageId = New Global.System.Data.DataColumn("LanguageId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLanguageId)
            Me.columnLanguage = New Global.System.Data.DataColumn("Language", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLanguage)
            Me.columnEventId = New Global.System.Data.DataColumn("EventId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEventId)
            Me.columnEvent = New Global.System.Data.DataColumn("Event", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnEvent.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "EventColumn")
            Me.columnEvent.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnEvent")
            Me.columnEvent.ExtendedProperties.Add("Generator_UserColumnName", "Event")
            MyBase.Columns.Add(Me.columnEvent)
            Me.columnThemeId = New Global.System.Data.DataColumn("ThemeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnThemeId)
            Me.columnTheme = New Global.System.Data.DataColumn("Theme", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTheme)
            Me.columnPriority = New Global.System.Data.DataColumn("Priority", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPriority)
            Me.columnBreakDt = New Global.System.Data.DataColumn("BreakDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBreakDt)
            Me.columnStartDt = New Global.System.Data.DataColumn("StartDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStartDt)
            Me.columnEndDt = New Global.System.Data.DataColumn("EndDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEndDt)
            Me.columnCoupon = New Global.System.Data.DataColumn("Coupon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoupon)
            Me.columnFlash = New Global.System.Data.DataColumn("Flash", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlash)
            Me.columnCreateDt = New Global.System.Data.DataColumn("CreateDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreateDt)
            Me.columnCreatedById = New Global.System.Data.DataColumn("CreatedById", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreatedById)
            Me.columnCreatedBy = New Global.System.Data.DataColumn("CreatedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreatedBy)
            Me.columnIndexDt = New Global.System.Data.DataColumn("IndexDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndexDt)
            Me.columnIndexedById = New Global.System.Data.DataColumn("IndexedById", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndexedById)
            Me.columnIndexedBy = New Global.System.Data.DataColumn("IndexedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndexedBy)
            Me.columnScanDt = New Global.System.Data.DataColumn("ScanDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScanDt)
            Me.columnScannedById = New Global.System.Data.DataColumn("ScannedById", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScannedById)
            Me.columnScannedBy = New Global.System.Data.DataColumn("ScannedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnScannedBy)
            Me.columnQCDt = New Global.System.Data.DataColumn("QCDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCDt)
            Me.columnQCedById = New Global.System.Data.DataColumn("QCedById", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCedById)
            Me.columnQCedBy = New Global.System.Data.DataColumn("QCedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnQCedBy)
            Me.columnCreateSizedDt = New Global.System.Data.DataColumn("CreateSizedDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreateSizedDt)
            Me.columnStatusID = New Global.System.Data.DataColumn("StatusID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusID)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnFTPDt = New Global.System.Data.DataColumn("FTPDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTPDt)
            Me.columnFTPStatusId = New Global.System.Data.DataColumn("FTPStatusId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTPStatusId)
            Me.columnFTPStatus = New Global.System.Data.DataColumn("FTPStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFTPStatus)
            Me.columnSPReviewStatusId = New Global.System.Data.DataColumn("SPReviewStatusId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPReviewStatusId)
            Me.columnSPReviewStatus = New Global.System.Data.DataColumn("SPReviewStatus", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPReviewStatus)
            Me.columnSubject = New Global.System.Data.DataColumn("Subject", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubject)
            Me.columnSentBy = New Global.System.Data.DataColumn("SentBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSentBy)
            Me.columnSentFrom = New Global.System.Data.DataColumn("SentFrom", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSentFrom)
            Me._columnftpDt = New Global.System.Data.DataColumn("ftpDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            Me._columnftpDt.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_ftpDt")
            Me._columnftpDt.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_ftpDtColumn")
            Me._columnftpDt.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnftpDt")
            Me._columnftpDt.ExtendedProperties.Add("Generator_UserColumnName", "ftpDt")
            MyBase.Columns.Add(Me._columnftpDt)
            Me._columnftpStatusId = New Global.System.Data.DataColumn("ftpStatusId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            Me._columnftpStatusId.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "_ftpStatusId")
            Me._columnftpStatusId.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "_ftpStatusIdColumn")
            Me._columnftpStatusId.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "_columnftpStatusId")
            Me._columnftpStatusId.ExtendedProperties.Add("Generator_UserColumnName", "ftpStatusId")
            MyBase.Columns.Add(Me._columnftpStatusId)
            Me.columnCompareVehicleId = New Global.System.Data.DataColumn("CompareVehicleId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompareVehicleId)
            Me.columnFlyerId = New Global.System.Data.DataColumn("FlyerId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlyerId)
            Me.columnStatusChangeBy = New Global.System.Data.DataColumn("StatusChangeBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatusChangeBy)
            Me.columnCircularID = New Global.System.Data.DataColumn("CircularID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCircularID)
            Me.columnVersionNumber = New Global.System.Data.DataColumn("VersionNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVersionNumber)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnVehicleId}, True))
            Me.columnVehicleId.AllowDBNull = False
            Me.columnVehicleId.Unique = True
            Me.columnRetailer.MaxLength = 50
            Me.columnTradeclass.MaxLength = 50
            Me.columnMarket.MaxLength = 50
            Me.columnMedia.MaxLength = 50
            Me.columnPublication.MaxLength = 50
            Me.columnLanguage.MaxLength = 50
            Me.columnEvent.MaxLength = 100
            Me.columnTheme.MaxLength = 100
            Me.columnCoupon.ReadOnly = True
            Me.columnCoupon.MaxLength = 3
            Me.columnFlash.ReadOnly = True
            Me.columnFlash.MaxLength = 8
            Me.columnCreatedBy.ReadOnly = True
            Me.columnCreatedBy.MaxLength = 101
            Me.columnIndexedBy.ReadOnly = True
            Me.columnIndexedBy.MaxLength = 101
            Me.columnScannedBy.ReadOnly = True
            Me.columnScannedBy.MaxLength = 101
            Me.columnQCedBy.ReadOnly = True
            Me.columnQCedBy.MaxLength = 101
            Me.columnStatus.MaxLength = 50
            Me.columnFTPStatus.MaxLength = 50
            Me.columnSPReviewStatus.MaxLength = 50
            Me.columnSubject.MaxLength = 500
            Me.columnSentBy.ReadOnly = True
            Me.columnSentBy.MaxLength = 200
            Me.columnSentFrom.ReadOnly = True
            Me.columnSentFrom.MaxLength = 200
            Me.columnFlyerId.ReadOnly = True
            Me.columnFlyerId.MaxLength = 11
            Me.columnStatusChangeBy.ReadOnly = True
            Me.columnStatusChangeBy.MaxLength = 101
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewvwVehicleStatusReportRow() As vwVehicleStatusReportRow
            Return CType(Me.NewRow, vwVehicleStatusReportRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vwVehicleStatusReportRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vwVehicleStatusReportRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vwVehicleStatusReportRowChangedEvent) Is Nothing) Then
                RaiseEvent vwVehicleStatusReportRowChanged(Me, New vwVehicleStatusReportRowChangeEvent(CType(e.Row, vwVehicleStatusReportRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vwVehicleStatusReportRowChangingEvent) Is Nothing) Then
                RaiseEvent vwVehicleStatusReportRowChanging(Me, New vwVehicleStatusReportRowChangeEvent(CType(e.Row, vwVehicleStatusReportRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vwVehicleStatusReportRowDeletedEvent) Is Nothing) Then
                RaiseEvent vwVehicleStatusReportRowDeleted(Me, New vwVehicleStatusReportRowChangeEvent(CType(e.Row, vwVehicleStatusReportRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vwVehicleStatusReportRowDeletingEvent) Is Nothing) Then
                RaiseEvent vwVehicleStatusReportRowDeleting(Me, New vwVehicleStatusReportRowChangeEvent(CType(e.Row, vwVehicleStatusReportRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovevwVehicleStatusReportRow(ByVal row As vwVehicleStatusReportRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As StatusReportDataSet = New StatusReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vwVehicleStatusReportDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class SenderDataTable
        Inherits Global.System.Data.TypedTableBase(Of SenderRow)

        Private columnSenderId As Global.System.Data.DataColumn

        Private columnName As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "Sender"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SenderIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSenderId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As SenderRow
            Get
                Return CType(Me.Rows(index), SenderRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SenderRowChanging As SenderRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SenderRowChanged As SenderRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SenderRowDeleting As SenderRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event SenderRowDeleted As SenderRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddSenderRow(ByVal row As SenderRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddSenderRow(ByVal Name As String) As SenderRow
            Dim rowSenderRow As SenderRow = CType(Me.NewRow, SenderRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Name}
            rowSenderRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSenderRow)
            Return rowSenderRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindBySenderId(ByVal SenderId As Integer) As SenderRow
            Return CType(Me.Rows.Find(New Object() {SenderId}), SenderRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SenderDataTable = CType(MyBase.Clone, SenderDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SenderDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnSenderId = MyBase.Columns("SenderId")
            Me.columnName = MyBase.Columns("Name")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnSenderId = New Global.System.Data.DataColumn("SenderId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSenderId)
            Me.columnName = New Global.System.Data.DataColumn("Name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnName)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSenderId}, True))
            Me.columnSenderId.AutoIncrement = True
            Me.columnSenderId.AutoIncrementSeed = -1
            Me.columnSenderId.AutoIncrementStep = -1
            Me.columnSenderId.AllowDBNull = False
            Me.columnSenderId.ReadOnly = True
            Me.columnSenderId.Unique = True
            Me.columnName.MaxLength = 250
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewSenderRow() As SenderRow
            Return CType(Me.NewRow, SenderRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SenderRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SenderRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SenderRowChangedEvent) Is Nothing) Then
                RaiseEvent SenderRowChanged(Me, New SenderRowChangeEvent(CType(e.Row, SenderRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SenderRowChangingEvent) Is Nothing) Then
                RaiseEvent SenderRowChanging(Me, New SenderRowChangeEvent(CType(e.Row, SenderRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SenderRowDeletedEvent) Is Nothing) Then
                RaiseEvent SenderRowDeleted(Me, New SenderRowChangeEvent(CType(e.Row, SenderRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SenderRowDeletingEvent) Is Nothing) Then
                RaiseEvent SenderRowDeleting(Me, New SenderRowChangeEvent(CType(e.Row, SenderRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveSenderRow(ByVal row As SenderRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As StatusReportDataSet = New StatusReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SenderDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class PageCropDataTable
        Inherits Global.System.Data.TypedTableBase(Of PageCropRow)

        Private columnPageCropId As Global.System.Data.DataColumn

        Private columnPageId As Global.System.Data.DataColumn

        Private columnReceivedOrder As Global.System.Data.DataColumn

        Private columnRetId As Global.System.Data.DataColumn

        Private columnRetailer As Global.System.Data.DataColumn

        Private columnSizeId As Global.System.Data.DataColumn

        Private columnSize As Global.System.Data.DataColumn

        Private columnImageName As Global.System.Data.DataColumn

        Private columnThemeId As Global.System.Data.DataColumn

        Private columnTheme As Global.System.Data.DataColumn

        Private columnEventId As Global.System.Data.DataColumn

        Private columnEvent As Global.System.Data.DataColumn

        Private columnStartDt As Global.System.Data.DataColumn

        Private columnEndDt As Global.System.Data.DataColumn

        Private columnCouponInd As Global.System.Data.DataColumn

        Private columnCoupon As Global.System.Data.DataColumn

        Private columnIndexDt As Global.System.Data.DataColumn

        Private columnIndexById As Global.System.Data.DataColumn

        Private columnIndexedBy As Global.System.Data.DataColumn

        Private columnCreateSizedDt As Global.System.Data.DataColumn

        Private columnFlyerId As Global.System.Data.DataColumn

        Private columnPageNumber As Global.System.Data.DataColumn

        Private columnCreationMonth As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "PageCrop"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PageCropIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPageCropId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PageIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPageId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ReceivedOrderColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReceivedOrder
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RetIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRetId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RetailerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRetailer
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SizeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSizeId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SizeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSize
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImageNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImageName
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ThemeIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnThemeId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ThemeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTheme
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EventIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEventId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EventColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEvent
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property StartDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStartDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EndDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEndDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CouponIndColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCouponInd
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CouponColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCoupon
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndexDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndexDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndexByIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndexById
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IndexedByColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIndexedBy
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CreateSizedDtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreateSizedDt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FlyerIdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFlyerId
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PageNumberColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPageNumber
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CreationMonthColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreationMonth
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As PageCropRow
            Get
                Return CType(Me.Rows(index), PageCropRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PageCropRowChanging As PageCropRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PageCropRowChanged As PageCropRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PageCropRowDeleting As PageCropRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event PageCropRowDeleted As PageCropRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddPageCropRow(ByVal row As PageCropRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddPageCropRow( _
                    ByVal parentPageRowByFK_Page_PageCrop As PageRow, _
                    ByVal ReceivedOrder As Integer, _
                    ByVal RetId As Integer, _
                    ByVal Retailer As String, _
                    ByVal SizeId As Integer, _
                    ByVal Size As String, _
                    ByVal ImageName As String, _
                    ByVal ThemeId As Integer, _
                    ByVal Theme As String, _
                    ByVal EventId As Integer, _
                    ByVal _Event As String, _
                    ByVal StartDt As Date, _
                    ByVal EndDt As Date, _
                    ByVal CouponInd As Byte, _
                    ByVal Coupon As String, _
                    ByVal IndexDt As Date, _
                    ByVal IndexById As Integer, _
                    ByVal IndexedBy As String, _
                    ByVal CreateSizedDt As Date, _
                    ByVal FlyerId As String, _
                    ByVal PageNumber As Integer, _
                    ByVal CreationMonth As String) As PageCropRow
            Dim rowPageCropRow As PageCropRow = CType(Me.NewRow, PageCropRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, ReceivedOrder, RetId, Retailer, SizeId, Size, ImageName, ThemeId, Theme, EventId, _Event, StartDt, EndDt, CouponInd, Coupon, IndexDt, IndexById, IndexedBy, CreateSizedDt, FlyerId, PageNumber, CreationMonth}
            If (Not (parentPageRowByFK_Page_PageCrop) Is Nothing) Then
                columnValuesArray(1) = parentPageRowByFK_Page_PageCrop(1)
            End If
            rowPageCropRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPageCropRow)
            Return rowPageCropRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByPageCropId(ByVal PageCropId As Integer) As PageCropRow
            Return CType(Me.Rows.Find(New Object() {PageCropId}), PageCropRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PageCropDataTable = CType(MyBase.Clone, PageCropDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PageCropDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnPageCropId = MyBase.Columns("PageCropId")
            Me.columnPageId = MyBase.Columns("PageId")
            Me.columnReceivedOrder = MyBase.Columns("ReceivedOrder")
            Me.columnRetId = MyBase.Columns("RetId")
            Me.columnRetailer = MyBase.Columns("Retailer")
            Me.columnSizeId = MyBase.Columns("SizeId")
            Me.columnSize = MyBase.Columns("Size")
            Me.columnImageName = MyBase.Columns("ImageName")
            Me.columnThemeId = MyBase.Columns("ThemeId")
            Me.columnTheme = MyBase.Columns("Theme")
            Me.columnEventId = MyBase.Columns("EventId")
            Me.columnEvent = MyBase.Columns("Event")
            Me.columnStartDt = MyBase.Columns("StartDt")
            Me.columnEndDt = MyBase.Columns("EndDt")
            Me.columnCouponInd = MyBase.Columns("CouponInd")
            Me.columnCoupon = MyBase.Columns("Coupon")
            Me.columnIndexDt = MyBase.Columns("IndexDt")
            Me.columnIndexById = MyBase.Columns("IndexById")
            Me.columnIndexedBy = MyBase.Columns("IndexedBy")
            Me.columnCreateSizedDt = MyBase.Columns("CreateSizedDt")
            Me.columnFlyerId = MyBase.Columns("FlyerId")
            Me.columnPageNumber = MyBase.Columns("PageNumber")
            Me.columnCreationMonth = MyBase.Columns("CreationMonth")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnPageCropId = New Global.System.Data.DataColumn("PageCropId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPageCropId)
            Me.columnPageId = New Global.System.Data.DataColumn("PageId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPageId)
            Me.columnReceivedOrder = New Global.System.Data.DataColumn("ReceivedOrder", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReceivedOrder)
            Me.columnRetId = New Global.System.Data.DataColumn("RetId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRetId)
            Me.columnRetailer = New Global.System.Data.DataColumn("Retailer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRetailer)
            Me.columnSizeId = New Global.System.Data.DataColumn("SizeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSizeId)
            Me.columnSize = New Global.System.Data.DataColumn("Size", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSize)
            Me.columnImageName = New Global.System.Data.DataColumn("ImageName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImageName)
            Me.columnThemeId = New Global.System.Data.DataColumn("ThemeId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnThemeId)
            Me.columnTheme = New Global.System.Data.DataColumn("Theme", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTheme)
            Me.columnEventId = New Global.System.Data.DataColumn("EventId", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEventId)
            Me.columnEvent = New Global.System.Data.DataColumn("Event", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnEvent.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "EventColumn")
            Me.columnEvent.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnEvent")
            Me.columnEvent.ExtendedProperties.Add("Generator_UserColumnName", "Event")
            MyBase.Columns.Add(Me.columnEvent)
            Me.columnStartDt = New Global.System.Data.DataColumn("StartDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStartDt)
            Me.columnEndDt = New Global.System.Data.DataColumn("EndDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEndDt)
            Me.columnCouponInd = New Global.System.Data.DataColumn("CouponInd", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCouponInd)
            Me.columnCoupon = New Global.System.Data.DataColumn("Coupon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCoupon)
            Me.columnIndexDt = New Global.System.Data.DataColumn("IndexDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndexDt)
            Me.columnIndexById = New Global.System.Data.DataColumn("IndexById", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndexById)
            Me.columnIndexedBy = New Global.System.Data.DataColumn("IndexedBy", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIndexedBy)
            Me.columnCreateSizedDt = New Global.System.Data.DataColumn("CreateSizedDt", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreateSizedDt)
            Me.columnFlyerId = New Global.System.Data.DataColumn("FlyerId", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFlyerId)
            Me.columnPageNumber = New Global.System.Data.DataColumn("PageNumber", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPageNumber)
            Me.columnCreationMonth = New Global.System.Data.DataColumn("CreationMonth", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreationMonth)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPageCropId}, True))
            Me.columnPageCropId.AutoIncrement = True
            Me.columnPageCropId.AutoIncrementSeed = -1
            Me.columnPageCropId.AutoIncrementStep = -1
            Me.columnPageCropId.AllowDBNull = False
            Me.columnPageCropId.ReadOnly = True
            Me.columnPageCropId.Unique = True
            Me.columnRetailer.MaxLength = 50
            Me.columnSize.ReadOnly = True
            Me.columnSize.MaxLength = 15
            Me.columnImageName.MaxLength = 50
            Me.columnTheme.MaxLength = 100
            Me.columnEvent.MaxLength = 100
            Me.columnCoupon.ReadOnly = True
            Me.columnCoupon.MaxLength = 3
            Me.columnIndexedBy.ReadOnly = True
            Me.columnIndexedBy.MaxLength = 101
            Me.columnFlyerId.MaxLength = 11
            Me.columnCreationMonth.MaxLength = 6
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewPageCropRow() As PageCropRow
            Return CType(Me.NewRow, PageCropRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PageCropRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PageCropRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PageCropRowChangedEvent) Is Nothing) Then
                RaiseEvent PageCropRowChanged(Me, New PageCropRowChangeEvent(CType(e.Row, PageCropRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PageCropRowChangingEvent) Is Nothing) Then
                RaiseEvent PageCropRowChanging(Me, New PageCropRowChangeEvent(CType(e.Row, PageCropRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PageCropRowDeletedEvent) Is Nothing) Then
                RaiseEvent PageCropRowDeleted(Me, New PageCropRowChangeEvent(CType(e.Row, PageCropRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PageCropRowDeletingEvent) Is Nothing) Then
                RaiseEvent PageCropRowDeleting(Me, New PageCropRowChangeEvent(CType(e.Row, PageCropRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemovePageCropRow(ByVal row As PageCropRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As StatusReportDataSet = New StatusReportDataSet()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PageCropDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vwEnvelopeStatusReportRow
        Inherits Global.System.Data.DataRow

        Private tablevwEnvelopeStatusReport As vwEnvelopeStatusReportDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevwEnvelopeStatusReport = CType(Me.Table, vwEnvelopeStatusReportDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EnvelopeId() As Integer
            Get
                Return CType(Me(Me.tablevwEnvelopeStatusReport.EnvelopeIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tablevwEnvelopeStatusReport.EnvelopeIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SenderId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwEnvelopeStatusReport.SenderIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SenderId' in table 'vwEnvelopeStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwEnvelopeStatusReport.SenderIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Sender() As String
            Get
                Try
                    Return CType(Me(Me.tablevwEnvelopeStatusReport.SenderColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sender' in table 'vwEnvelopeStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwEnvelopeStatusReport.SenderColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReceivedDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablevwEnvelopeStatusReport.ReceivedDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceivedDt' in table 'vwEnvelopeStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevwEnvelopeStatusReport.ReceivedDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReceivedById() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwEnvelopeStatusReport.ReceivedByIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceivedById' in table 'vwEnvelopeStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwEnvelopeStatusReport.ReceivedByIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReceivedBy() As String
            Get
                Try
                    Return CType(Me(Me.tablevwEnvelopeStatusReport.ReceivedByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceivedBy' in table 'vwEnvelopeStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwEnvelopeStatusReport.ReceivedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReceivedAt() As String
            Get
                Try
                    Return CType(Me(Me.tablevwEnvelopeStatusReport.ReceivedAtColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceivedAt' in table 'vwEnvelopeStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwEnvelopeStatusReport.ReceivedAtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SenderRow() As SenderRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Sender_vwEnvelopeStatusReport")), SenderRow)
            End Get
            Set(value As SenderRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("Sender_vwEnvelopeStatusReport"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSenderIdNull() As Boolean
            Return Me.IsNull(Me.tablevwEnvelopeStatusReport.SenderIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSenderIdNull()
            Me(Me.tablevwEnvelopeStatusReport.SenderIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSenderNull() As Boolean
            Return Me.IsNull(Me.tablevwEnvelopeStatusReport.SenderColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSenderNull()
            Me(Me.tablevwEnvelopeStatusReport.SenderColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReceivedDtNull() As Boolean
            Return Me.IsNull(Me.tablevwEnvelopeStatusReport.ReceivedDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReceivedDtNull()
            Me(Me.tablevwEnvelopeStatusReport.ReceivedDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReceivedByIdNull() As Boolean
            Return Me.IsNull(Me.tablevwEnvelopeStatusReport.ReceivedByIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReceivedByIdNull()
            Me(Me.tablevwEnvelopeStatusReport.ReceivedByIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReceivedByNull() As Boolean
            Return Me.IsNull(Me.tablevwEnvelopeStatusReport.ReceivedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReceivedByNull()
            Me(Me.tablevwEnvelopeStatusReport.ReceivedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReceivedAtNull() As Boolean
            Return Me.IsNull(Me.tablevwEnvelopeStatusReport.ReceivedAtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReceivedAtNull()
            Me(Me.tablevwEnvelopeStatusReport.ReceivedAtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetvwVehicleStatusReportRows() As vwVehicleStatusReportRow()
            If (Me.Table.ChildRelations("vwEnvelopeStatusReport_vwVehicleStatusReport") Is Nothing) Then
                Return New vwVehicleStatusReportRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("vwEnvelopeStatusReport_vwVehicleStatusReport")), vwVehicleStatusReportRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PageRow
        Inherits Global.System.Data.DataRow

        Private tablePage As PageDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePage = CType(Me.Table, PageDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VehicleId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePage.VehicleIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VehicleId' in table 'Page' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePage.VehicleIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PageId() As Integer
            Get
                Return CType(Me(Me.tablePage.PageIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tablePage.PageIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImageName() As String
            Get
                Try
                    Return CType(Me(Me.tablePage.ImageNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImageName' in table 'Page' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePage.ImageNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PageTypeId() As String
            Get
                Try
                    Return CType(Me(Me.tablePage.PageTypeIdColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PageTypeId' in table 'Page' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePage.PageTypeIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReceivedOrder() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePage.ReceivedOrderColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceivedOrder' in table 'Page' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePage.ReceivedOrderColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PageName() As String
            Get
                Try
                    Return CType(Me(Me.tablePage.PageNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PageName' in table 'Page' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePage.PageNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PixelHieght() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePage.PixelHieghtColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PixelHieght' in table 'Page' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePage.PixelHieghtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PixelWidth() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePage.PixelWidthColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PixelWidth' in table 'Page' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePage.PixelWidthColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SizeID() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePage.SizeIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SizeID' in table 'Page' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePage.SizeIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SizeText() As String
            Get
                Try
                    Return CType(Me(Me.tablePage.SizeTextColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SizeText' in table 'Page' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePage.SizeTextColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CroppedPages() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePage.CroppedPagesColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CroppedPages' in table 'Page' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePage.CroppedPagesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property vwVehicleStatusReportRow() As vwVehicleStatusReportRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("vwVehicleStatusReport_Page")), vwVehicleStatusReportRow)
            End Get
            Set(value As vwVehicleStatusReportRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("vwVehicleStatusReport_Page"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVehicleIdNull() As Boolean
            Return Me.IsNull(Me.tablePage.VehicleIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVehicleIdNull()
            Me(Me.tablePage.VehicleIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImageNameNull() As Boolean
            Return Me.IsNull(Me.tablePage.ImageNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImageNameNull()
            Me(Me.tablePage.ImageNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPageTypeIdNull() As Boolean
            Return Me.IsNull(Me.tablePage.PageTypeIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPageTypeIdNull()
            Me(Me.tablePage.PageTypeIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReceivedOrderNull() As Boolean
            Return Me.IsNull(Me.tablePage.ReceivedOrderColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReceivedOrderNull()
            Me(Me.tablePage.ReceivedOrderColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPageNameNull() As Boolean
            Return Me.IsNull(Me.tablePage.PageNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPageNameNull()
            Me(Me.tablePage.PageNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPixelHieghtNull() As Boolean
            Return Me.IsNull(Me.tablePage.PixelHieghtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPixelHieghtNull()
            Me(Me.tablePage.PixelHieghtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPixelWidthNull() As Boolean
            Return Me.IsNull(Me.tablePage.PixelWidthColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPixelWidthNull()
            Me(Me.tablePage.PixelWidthColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSizeIDNull() As Boolean
            Return Me.IsNull(Me.tablePage.SizeIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSizeIDNull()
            Me(Me.tablePage.SizeIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSizeTextNull() As Boolean
            Return Me.IsNull(Me.tablePage.SizeTextColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSizeTextNull()
            Me(Me.tablePage.SizeTextColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCroppedPagesNull() As Boolean
            Return Me.IsNull(Me.tablePage.CroppedPagesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCroppedPagesNull()
            Me(Me.tablePage.CroppedPagesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetPageCropRows() As PageCropRow()
            If (Me.Table.ChildRelations("FK_Page_PageCrop") Is Nothing) Then
                Return New PageCropRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_Page_PageCrop")), PageCropRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class vwVehicleStatusReportRow
        Inherits Global.System.Data.DataRow

        Private tablevwVehicleStatusReport As vwVehicleStatusReportDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevwVehicleStatusReport = CType(Me.Table, vwVehicleStatusReportDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EnvelopeId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.EnvelopeIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EnvelopeId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.EnvelopeIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SenderId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.SenderIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SenderId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.SenderIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VehicleId() As Integer
            Get
                Return CType(Me(Me.tablevwVehicleStatusReport.VehicleIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.VehicleIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RetId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.RetIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RetId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.RetIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Retailer() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.RetailerColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Retailer' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.RetailerColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Tradeclass() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.TradeclassColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tradeclass' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.TradeclassColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MktId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.MktIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MktId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.MktIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Market() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.MarketColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Market' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.MarketColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MediaId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.MediaIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MediaId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.MediaIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Media() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.MediaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Media' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.MediaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PublicationId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.PublicationIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PublicationId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.PublicationIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Publication() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.PublicationColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Publication' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.PublicationColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property LanguageId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.LanguageIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LanguageId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.LanguageIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Language() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.LanguageColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Language' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.LanguageColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EventId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.EventIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EventId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.EventIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Event() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.EventColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Event' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.EventColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ThemeId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.ThemeIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ThemeId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.ThemeIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Theme() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.ThemeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Theme' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.ThemeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Priority() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.PriorityColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Priority' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.PriorityColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BreakDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.BreakDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BreakDt' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevwVehicleStatusReport.BreakDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property StartDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.StartDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StartDt' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevwVehicleStatusReport.StartDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EndDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.EndDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EndDt' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevwVehicleStatusReport.EndDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Coupon() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.CouponColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Coupon' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.CouponColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Flash() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.FlashColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Flash' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.FlashColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CreateDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.CreateDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreateDt' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevwVehicleStatusReport.CreateDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CreatedById() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.CreatedByIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreatedById' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.CreatedByIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CreatedBy() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.CreatedByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreatedBy' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.CreatedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndexDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.IndexDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndexDt' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevwVehicleStatusReport.IndexDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndexedById() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.IndexedByIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndexedById' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.IndexedByIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndexedBy() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.IndexedByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndexedBy' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.IndexedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ScanDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.ScanDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ScanDt' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevwVehicleStatusReport.ScanDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ScannedById() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.ScannedByIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ScannedById' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.ScannedByIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ScannedBy() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.ScannedByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ScannedBy' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.ScannedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property QCDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.QCDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCDt' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevwVehicleStatusReport.QCDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property QCedById() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.QCedByIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCedById' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.QCedByIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property QCedBy() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.QCedByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'QCedBy' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.QCedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CreateSizedDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.CreateSizedDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreateSizedDt' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevwVehicleStatusReport.CreateSizedDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property StatusID() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.StatusIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatusID' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.StatusIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Status() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.StatusColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.StatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTPDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.FTPDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTPDt' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevwVehicleStatusReport.FTPDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTPStatusId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.FTPStatusIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTPStatusId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.FTPStatusIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FTPStatus() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.FTPStatusColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FTPStatus' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.FTPStatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPReviewStatusId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.SPReviewStatusIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPReviewStatusId' in table 'vwVehicleStatusReport' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.SPReviewStatusIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SPReviewStatus() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.SPReviewStatusColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SPReviewStatus' in table 'vwVehicleStatusReport' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.SPReviewStatusColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Subject() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.SubjectColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Subject' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.SubjectColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SentBy() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.SentByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SentBy' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.SentByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SentFrom() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.SentFromColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SentFrom' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.SentFromColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _ftpDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport._ftpDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ftpDt' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablevwVehicleStatusReport._ftpDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _ftpStatusId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport._ftpStatusIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ftpStatusId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport._ftpStatusIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CompareVehicleId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.CompareVehicleIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CompareVehicleId' in table 'vwVehicleStatusReport' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.CompareVehicleIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FlyerId() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.FlyerIdColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FlyerId' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.FlyerIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property StatusChangeBy() As String
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.StatusChangeByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StatusChangeBy' in table 'vwVehicleStatusReport' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablevwVehicleStatusReport.StatusChangeByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CircularID() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.CircularIDColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CircularID' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.CircularIDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property VersionNumber() As Integer
            Get
                Try
                    Return CType(Me(Me.tablevwVehicleStatusReport.VersionNumberColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VersionNumber' in table 'vwVehicleStatusReport' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablevwVehicleStatusReport.VersionNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property vwEnvelopeStatusReportRow() As vwEnvelopeStatusReportRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("vwEnvelopeStatusReport_vwVehicleStatusReport")), vwEnvelopeStatusReportRow)
            End Get
            Set(value As vwEnvelopeStatusReportRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("vwEnvelopeStatusReport_vwVehicleStatusReport"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SenderRow() As SenderRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Sender_vwVehicleStatusReport")), SenderRow)
            End Get
            Set(value As SenderRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("Sender_vwVehicleStatusReport"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEnvelopeIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.EnvelopeIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEnvelopeIdNull()
            Me(Me.tablevwVehicleStatusReport.EnvelopeIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSenderIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.SenderIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSenderIdNull()
            Me(Me.tablevwVehicleStatusReport.SenderIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRetIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.RetIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRetIdNull()
            Me(Me.tablevwVehicleStatusReport.RetIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRetailerNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.RetailerColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRetailerNull()
            Me(Me.tablevwVehicleStatusReport.RetailerColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTradeclassNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.TradeclassColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTradeclassNull()
            Me(Me.tablevwVehicleStatusReport.TradeclassColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMktIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.MktIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMktIdNull()
            Me(Me.tablevwVehicleStatusReport.MktIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMarketNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.MarketColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMarketNull()
            Me(Me.tablevwVehicleStatusReport.MarketColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMediaIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.MediaIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMediaIdNull()
            Me(Me.tablevwVehicleStatusReport.MediaIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMediaNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.MediaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMediaNull()
            Me(Me.tablevwVehicleStatusReport.MediaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPublicationIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.PublicationIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPublicationIdNull()
            Me(Me.tablevwVehicleStatusReport.PublicationIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPublicationNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.PublicationColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPublicationNull()
            Me(Me.tablevwVehicleStatusReport.PublicationColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLanguageIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.LanguageIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLanguageIdNull()
            Me(Me.tablevwVehicleStatusReport.LanguageIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsLanguageNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.LanguageColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetLanguageNull()
            Me(Me.tablevwVehicleStatusReport.LanguageColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEventIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.EventIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEventIdNull()
            Me(Me.tablevwVehicleStatusReport.EventIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_EventNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.EventColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_EventNull()
            Me(Me.tablevwVehicleStatusReport.EventColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsThemeIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.ThemeIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetThemeIdNull()
            Me(Me.tablevwVehicleStatusReport.ThemeIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsThemeNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.ThemeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetThemeNull()
            Me(Me.tablevwVehicleStatusReport.ThemeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPriorityNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.PriorityColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPriorityNull()
            Me(Me.tablevwVehicleStatusReport.PriorityColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsBreakDtNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.BreakDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetBreakDtNull()
            Me(Me.tablevwVehicleStatusReport.BreakDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsStartDtNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.StartDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetStartDtNull()
            Me(Me.tablevwVehicleStatusReport.StartDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEndDtNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.EndDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEndDtNull()
            Me(Me.tablevwVehicleStatusReport.EndDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCouponNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.CouponColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCouponNull()
            Me(Me.tablevwVehicleStatusReport.CouponColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFlashNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.FlashColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFlashNull()
            Me(Me.tablevwVehicleStatusReport.FlashColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCreateDtNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.CreateDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCreateDtNull()
            Me(Me.tablevwVehicleStatusReport.CreateDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCreatedByIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.CreatedByIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCreatedByIdNull()
            Me(Me.tablevwVehicleStatusReport.CreatedByIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCreatedByNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.CreatedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCreatedByNull()
            Me(Me.tablevwVehicleStatusReport.CreatedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIndexDtNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.IndexDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIndexDtNull()
            Me(Me.tablevwVehicleStatusReport.IndexDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIndexedByIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.IndexedByIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIndexedByIdNull()
            Me(Me.tablevwVehicleStatusReport.IndexedByIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIndexedByNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.IndexedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIndexedByNull()
            Me(Me.tablevwVehicleStatusReport.IndexedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsScanDtNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.ScanDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetScanDtNull()
            Me(Me.tablevwVehicleStatusReport.ScanDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsScannedByIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.ScannedByIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetScannedByIdNull()
            Me(Me.tablevwVehicleStatusReport.ScannedByIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsScannedByNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.ScannedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetScannedByNull()
            Me(Me.tablevwVehicleStatusReport.ScannedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQCDtNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.QCDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQCDtNull()
            Me(Me.tablevwVehicleStatusReport.QCDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQCedByIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.QCedByIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQCedByIdNull()
            Me(Me.tablevwVehicleStatusReport.QCedByIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsQCedByNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.QCedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetQCedByNull()
            Me(Me.tablevwVehicleStatusReport.QCedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCreateSizedDtNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.CreateSizedDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCreateSizedDtNull()
            Me(Me.tablevwVehicleStatusReport.CreateSizedDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsStatusIDNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.StatusIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetStatusIDNull()
            Me(Me.tablevwVehicleStatusReport.StatusIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.StatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetStatusNull()
            Me(Me.tablevwVehicleStatusReport.StatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTPDtNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.FTPDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTPDtNull()
            Me(Me.tablevwVehicleStatusReport.FTPDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTPStatusIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.FTPStatusIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTPStatusIdNull()
            Me(Me.tablevwVehicleStatusReport.FTPStatusIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFTPStatusNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.FTPStatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFTPStatusNull()
            Me(Me.tablevwVehicleStatusReport.FTPStatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPReviewStatusIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.SPReviewStatusIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPReviewStatusIdNull()
            Me(Me.tablevwVehicleStatusReport.SPReviewStatusIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSPReviewStatusNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.SPReviewStatusColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSPReviewStatusNull()
            Me(Me.tablevwVehicleStatusReport.SPReviewStatusColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSubjectNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.SubjectColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSubjectNull()
            Me(Me.tablevwVehicleStatusReport.SubjectColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSentByNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.SentByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSentByNull()
            Me(Me.tablevwVehicleStatusReport.SentByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSentFromNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.SentFromColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSentFromNull()
            Me(Me.tablevwVehicleStatusReport.SentFromColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_ftpDtNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport._ftpDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_ftpDtNull()
            Me(Me.tablevwVehicleStatusReport._ftpDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_ftpStatusIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport._ftpStatusIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_ftpStatusIdNull()
            Me(Me.tablevwVehicleStatusReport._ftpStatusIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCompareVehicleIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.CompareVehicleIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCompareVehicleIdNull()
            Me(Me.tablevwVehicleStatusReport.CompareVehicleIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFlyerIdNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.FlyerIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFlyerIdNull()
            Me(Me.tablevwVehicleStatusReport.FlyerIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsStatusChangeByNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.StatusChangeByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetStatusChangeByNull()
            Me(Me.tablevwVehicleStatusReport.StatusChangeByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCircularIDNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.CircularIDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCircularIDNull()
            Me(Me.tablevwVehicleStatusReport.CircularIDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVersionNumberNull() As Boolean
            Return Me.IsNull(Me.tablevwVehicleStatusReport.VersionNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVersionNumberNull()
            Me(Me.tablevwVehicleStatusReport.VersionNumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetPageRows() As PageRow()
            If (Me.Table.ChildRelations("vwVehicleStatusReport_Page") Is Nothing) Then
                Return New PageRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("vwVehicleStatusReport_Page")), PageRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SenderRow
        Inherits Global.System.Data.DataRow

        Private tableSender As SenderDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSender = CType(Me.Table, SenderDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SenderId() As Integer
            Get
                Return CType(Me(Me.tableSender.SenderIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableSender.SenderIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Name() As String
            Get
                Try
                    Return CType(Me(Me.tableSender.NameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Name' in table 'Sender' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableSender.NameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNameNull() As Boolean
            Return Me.IsNull(Me.tableSender.NameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNameNull()
            Me(Me.tableSender.NameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetvwEnvelopeStatusReportRows() As vwEnvelopeStatusReportRow()
            If (Me.Table.ChildRelations("Sender_vwEnvelopeStatusReport") Is Nothing) Then
                Return New vwEnvelopeStatusReportRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Sender_vwEnvelopeStatusReport")), vwEnvelopeStatusReportRow())
            End If
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function GetvwVehicleStatusReportRows() As vwVehicleStatusReportRow()
            If (Me.Table.ChildRelations("Sender_vwVehicleStatusReport") Is Nothing) Then
                Return New vwVehicleStatusReportRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Sender_vwVehicleStatusReport")), vwVehicleStatusReportRow())
            End If
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PageCropRow
        Inherits Global.System.Data.DataRow

        Private tablePageCrop As PageCropDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePageCrop = CType(Me.Table, PageCropDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PageCropId() As Integer
            Get
                Return CType(Me(Me.tablePageCrop.PageCropIdColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tablePageCrop.PageCropIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PageId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.PageIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PageId' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePageCrop.PageIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ReceivedOrder() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.ReceivedOrderColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReceivedOrder' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePageCrop.ReceivedOrderColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property RetId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.RetIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RetId' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePageCrop.RetIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Retailer() As String
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.RetailerColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Retailer' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePageCrop.RetailerColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SizeId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.SizeIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SizeId' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePageCrop.SizeIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Size() As String
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.SizeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Size' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePageCrop.SizeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImageName() As String
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.ImageNameColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ImageName' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePageCrop.ImageNameColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ThemeId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.ThemeIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ThemeId' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePageCrop.ThemeIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Theme() As String
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.ThemeColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Theme' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePageCrop.ThemeColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EventId() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.EventIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EventId' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePageCrop.EventIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Event() As String
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.EventColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Event' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePageCrop.EventColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property StartDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.StartDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StartDt' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablePageCrop.StartDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property EndDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.EndDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EndDt' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablePageCrop.EndDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CouponInd() As Byte
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.CouponIndColumn), Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CouponInd' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Byte)
                Me(Me.tablePageCrop.CouponIndColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Coupon() As String
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.CouponColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Coupon' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePageCrop.CouponColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndexDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.IndexDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndexDt' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablePageCrop.IndexDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndexById() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.IndexByIdColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndexById' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePageCrop.IndexByIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IndexedBy() As String
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.IndexedByColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IndexedBy' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePageCrop.IndexedByColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CreateSizedDt() As Date
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.CreateSizedDtColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreateSizedDt' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tablePageCrop.CreateSizedDtColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FlyerId() As String
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.FlyerIdColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FlyerId' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePageCrop.FlyerIdColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PageNumber() As Integer
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.PageNumberColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PageNumber' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tablePageCrop.PageNumberColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CreationMonth() As String
            Get
                Try
                    Return CType(Me(Me.tablePageCrop.CreationMonthColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreationMonth' in table 'PageCrop' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tablePageCrop.CreationMonthColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PageRow() As PageRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_Page_PageCrop")), PageRow)
            End Get
            Set(value As PageRow)
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_Page_PageCrop"))
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPageIdNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.PageIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPageIdNull()
            Me(Me.tablePageCrop.PageIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsReceivedOrderNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.ReceivedOrderColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetReceivedOrderNull()
            Me(Me.tablePageCrop.ReceivedOrderColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRetIdNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.RetIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRetIdNull()
            Me(Me.tablePageCrop.RetIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRetailerNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.RetailerColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRetailerNull()
            Me(Me.tablePageCrop.RetailerColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSizeIdNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.SizeIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSizeIdNull()
            Me(Me.tablePageCrop.SizeIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSizeNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.SizeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSizeNull()
            Me(Me.tablePageCrop.SizeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImageNameNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.ImageNameColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImageNameNull()
            Me(Me.tablePageCrop.ImageNameColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsThemeIdNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.ThemeIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetThemeIdNull()
            Me(Me.tablePageCrop.ThemeIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsThemeNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.ThemeColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetThemeNull()
            Me(Me.tablePageCrop.ThemeColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEventIdNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.EventIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEventIdNull()
            Me(Me.tablePageCrop.EventIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_EventNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.EventColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_EventNull()
            Me(Me.tablePageCrop.EventColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsStartDtNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.StartDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetStartDtNull()
            Me(Me.tablePageCrop.StartDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEndDtNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.EndDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEndDtNull()
            Me(Me.tablePageCrop.EndDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCouponIndNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.CouponIndColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCouponIndNull()
            Me(Me.tablePageCrop.CouponIndColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCouponNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.CouponColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCouponNull()
            Me(Me.tablePageCrop.CouponColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIndexDtNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.IndexDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIndexDtNull()
            Me(Me.tablePageCrop.IndexDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIndexByIdNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.IndexByIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIndexByIdNull()
            Me(Me.tablePageCrop.IndexByIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIndexedByNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.IndexedByColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIndexedByNull()
            Me(Me.tablePageCrop.IndexedByColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCreateSizedDtNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.CreateSizedDtColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCreateSizedDtNull()
            Me(Me.tablePageCrop.CreateSizedDtColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFlyerIdNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.FlyerIdColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFlyerIdNull()
            Me(Me.tablePageCrop.FlyerIdColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPageNumberNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.PageNumberColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPageNumberNull()
            Me(Me.tablePageCrop.PageNumberColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCreationMonthNull() As Boolean
            Return Me.IsNull(Me.tablePageCrop.CreationMonthColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCreationMonthNull()
            Me(Me.tablePageCrop.CreationMonthColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class vwEnvelopeStatusReportRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As vwEnvelopeStatusReportRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As vwEnvelopeStatusReportRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As vwEnvelopeStatusReportRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class PageRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As PageRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As PageRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As PageRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class vwVehicleStatusReportRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As vwVehicleStatusReportRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As vwVehicleStatusReportRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As vwVehicleStatusReportRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class SenderRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As SenderRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As SenderRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As SenderRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class PageCropRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As PageCropRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As PageCropRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As PageCropRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace StatusReportDataSetTableAdapters

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class vwEnvelopeStatusReportTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vwEnvelopeStatusReport"
            tableMapping.ColumnMappings.Add("EnvelopeId", "EnvelopeId")
            tableMapping.ColumnMappings.Add("SenderId", "SenderId")
            tableMapping.ColumnMappings.Add("Sender", "Sender")
            tableMapping.ColumnMappings.Add("ReceivedDt", "ReceivedDt")
            tableMapping.ColumnMappings.Add("ReceivedById", "ReceivedById")
            tableMapping.ColumnMappings.Add("ReceivedBy", "ReceivedBy")
            tableMapping.ColumnMappings.Add("ReceivedAt", "ReceivedAt")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.MCAP.My.MySettings.Default.MCAPConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT EnvelopeId, SenderId, Sender, ReceivedDt, ReceivedById, ReceivedBy, Receiv" & _
                "edAt FROM dbo.vwEnvelopeStatusReport WHERE EnvelopeId=@EnvelopeId"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EnvelopeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "EnvelopeId", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As StatusReportDataSet.vwEnvelopeStatusReportDataTable, ByVal EnvelopeId As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(EnvelopeId, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class PageTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Page"
            tableMapping.ColumnMappings.Add("VehicleId", "VehicleId")
            tableMapping.ColumnMappings.Add("PageId", "PageId")
            tableMapping.ColumnMappings.Add("ImageName", "ImageName")
            tableMapping.ColumnMappings.Add("PageTypeId", "PageTypeId")
            tableMapping.ColumnMappings.Add("ReceivedOrder", "ReceivedOrder")
            tableMapping.ColumnMappings.Add("PageName", "PageName")
            tableMapping.ColumnMappings.Add("PixelHieght", "PixelHieght")
            tableMapping.ColumnMappings.Add("PixelWidth", "PixelWidth")
            tableMapping.ColumnMappings.Add("SizeID", "SizeID")
            tableMapping.ColumnMappings.Add("SizeText", "SizeText")
            tableMapping.ColumnMappings.Add("CroppedPages", "CroppedPages")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.MCAP.My.MySettings.Default.MCAPConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT P.VehicleId, P.PageId, ISNULL(P.ImageName, REPLICATE('0', 3 - LEN(CAST(P.R" & _
                "eceivedOrder AS VARCHAR(3)))) + CAST(P.ReceivedOrder AS VARCHAR(3))) ImageName" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "" & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & ", P.PageTypeId, P.ReceivedOrder, P.PageName, P.PixelHieght, P.PixelWidth, P.Si" & _
                "zeID, dbo.GetSizeText(P.SizeId) [SizeText]" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & ", (SELECT COUNT(PageCropId) FROM [" & _
                "PageCrop] WHERE PageId=P.PageId) CroppedPages" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM Page P" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE VehicleId=@Veh" & _
                "icleId" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY P.ReceivedOrder" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VehicleId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "VehicleId", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As StatusReportDataSet.PageDataTable, ByVal VehicleId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (VehicleId.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(VehicleId.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class vwVehicleStatusReportTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vwVehicleStatusReport"
            tableMapping.ColumnMappings.Add("EnvelopeId", "EnvelopeId")
            tableMapping.ColumnMappings.Add("SenderId", "SenderId")
            tableMapping.ColumnMappings.Add("VehicleId", "VehicleId")
            tableMapping.ColumnMappings.Add("RetId", "RetId")
            tableMapping.ColumnMappings.Add("Retailer", "Retailer")
            tableMapping.ColumnMappings.Add("Tradeclass", "Tradeclass")
            tableMapping.ColumnMappings.Add("MktId", "MktId")
            tableMapping.ColumnMappings.Add("Market", "Market")
            tableMapping.ColumnMappings.Add("MediaId", "MediaId")
            tableMapping.ColumnMappings.Add("Media", "Media")
            tableMapping.ColumnMappings.Add("PublicationId", "PublicationId")
            tableMapping.ColumnMappings.Add("Publication", "Publication")
            tableMapping.ColumnMappings.Add("LanguageId", "LanguageId")
            tableMapping.ColumnMappings.Add("Language", "Language")
            tableMapping.ColumnMappings.Add("EventId", "EventId")
            tableMapping.ColumnMappings.Add("Event", "Event")
            tableMapping.ColumnMappings.Add("ThemeId", "ThemeId")
            tableMapping.ColumnMappings.Add("Theme", "Theme")
            tableMapping.ColumnMappings.Add("Priority", "Priority")
            tableMapping.ColumnMappings.Add("BreakDt", "BreakDt")
            tableMapping.ColumnMappings.Add("StartDt", "StartDt")
            tableMapping.ColumnMappings.Add("EndDt", "EndDt")
            tableMapping.ColumnMappings.Add("Coupon", "Coupon")
            tableMapping.ColumnMappings.Add("Flash", "Flash")
            tableMapping.ColumnMappings.Add("CreateDt", "CreateDt")
            tableMapping.ColumnMappings.Add("CreatedById", "CreatedById")
            tableMapping.ColumnMappings.Add("CreatedBy", "CreatedBy")
            tableMapping.ColumnMappings.Add("IndexDt", "IndexDt")
            tableMapping.ColumnMappings.Add("IndexedById", "IndexedById")
            tableMapping.ColumnMappings.Add("IndexedBy", "IndexedBy")
            tableMapping.ColumnMappings.Add("ScanDt", "ScanDt")
            tableMapping.ColumnMappings.Add("ScannedById", "ScannedById")
            tableMapping.ColumnMappings.Add("ScannedBy", "ScannedBy")
            tableMapping.ColumnMappings.Add("QCDt", "QCDt")
            tableMapping.ColumnMappings.Add("QCedById", "QCedById")
            tableMapping.ColumnMappings.Add("QCedBy", "QCedBy")
            tableMapping.ColumnMappings.Add("CreateSizedDt", "CreateSizedDt")
            tableMapping.ColumnMappings.Add("StatusID", "StatusID")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("FTPDt", "FTPDt")
            tableMapping.ColumnMappings.Add("FTPStatusId", "FTPStatusId")
            tableMapping.ColumnMappings.Add("FTPStatus", "FTPStatus")
            tableMapping.ColumnMappings.Add("SPReviewStatusId", "SPReviewStatusId")
            tableMapping.ColumnMappings.Add("SPReviewStatus", "SPReviewStatus")
            tableMapping.ColumnMappings.Add("Subject", "Subject")
            tableMapping.ColumnMappings.Add("ftpDt", "ftpDt")
            tableMapping.ColumnMappings.Add("ftpStatusId", "ftpStatusId")
            tableMapping.ColumnMappings.Add("CompareVehicleId", "CompareVehicleId")
            tableMapping.ColumnMappings.Add("FlyerId", "FlyerId")
            tableMapping.ColumnMappings.Add("StatusChangeBy", "StatusChangeBy")
            tableMapping.ColumnMappings.Add("SentFrom", "SentFrom")
            tableMapping.ColumnMappings.Add("SentBy", "SentBy")
            tableMapping.ColumnMappings.Add("CircularID", "CircularID")
            tableMapping.ColumnMappings.Add("VersionNumber", "VersionNumber")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.MCAP.My.MySettings.Default.MCAPConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        EnvelopeId," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELECT        MIN(FlyerI" & _
                "d) AS FlyerId" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            VehiclePages" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "    " & _
                "                           WHERE        (VehicleId = vwVehicleStatusReport.Vehic" & _
                "leId)) AS FlyerId, SenderId, VehicleId, RetId, Retailer, Tradeclass, MktId, Mark" & _
                "et, MediaId, Media, PublicationId, Publication, LanguageId, Language, EventId, E" & _
                "vent, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         ThemeId, Theme, Priority, BreakDt, StartDt, End" & _
                "Dt, Coupon, Flash, CreateDt, CreatedById, CreatedBy, IndexDt, IndexedById, Index" & _
                "edBy, ScanDt, ScannedById, ScannedBy, QCDt, QCedById, QCedBy, CreateSizedDt, Sta" & _
                "tusID, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         Status, ftpDt, ftpStatusId, FTPStatus, SPRevie" & _
                "wStatusId, SPReviewStatus, CompareVehicleId, Subject, CircularID, StatusChangeBy" & _
                ", SentFrom, SentBy, VersionNumber" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            vwVehicleStatusReport" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE " & _
                "       (EnvelopeId = @EnvelopeId)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY VehicleId"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EnvelopeId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "EnvelopeId", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT BreakDt, CompareVehicleId, Coupon, CreateDt, CreateSizedDt, CreatedBy, Cre" & _
                "atedById, EndDt, EnvelopeId, Event, EventId, FTPStatus, Flash, (SELECT MIN(Flyer" & _
                "Id) AS FlyerId FROM VehiclePages WHERE (VehicleId = vwVehicleStatusReport.Vehicl" & _
                "eId)) AS FlyerId, IndexDt, IndexedBy, IndexedById, Language, LanguageId, Market," & _
                " Media, MediaId, MktId, Priority, Publication, PublicationId, QCDt, QCedBy, QCed" & _
                "ById, RetId, Retailer, SPReviewStatus, SPReviewStatusId, ScanDt, ScannedBy, Scan" & _
                "nedById, SenderId, SentBy, SentFrom, StartDt, Status, StatusChangeBy, StatusID, " & _
                "Subject, CircularID, Theme, ThemeId, Tradeclass, VehicleId, ftpDt, ftpStatusId, " & _
                "versionNumber FROM vwVehicleStatusReport WHERE (VehicleId = @VehicleId)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VehicleId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "VehicleId", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT TOP (1) c.Descrip FROM RetMktCoverage AS rmc INNER JOIN Code AS c ON rmc.c" & _
                "overageid = c.CodeId WHERE (rmc.mktid = @mktId) AND (rmc.retid = @RetID)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@mktId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "mktid", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RetID", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "retid", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT MIN(FlyerId) FlyerId " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM Vehicle V " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "INNER JOIN VehiclePages VP ON V.V" & _
                "ehicleId=VP.VehicleId AND V.VehicleId=@VehicleId"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VehicleId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "VehicleId", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT MIN(V.VehicleId) VehicleId " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM Vehicle V " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "INNER JOIN VehiclePages VP " & _
                "ON V.VehicleId=VP.VehicleId AND VP.FlyerId=@FlyerId"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FlyerId", Global.System.Data.SqlDbType.VarChar, 11, Global.System.Data.ParameterDirection.Input, 0, 0, "FlyerId", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As StatusReportDataSet.vwVehicleStatusReportDataTable, ByVal EnvelopeId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (EnvelopeId.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(EnvelopeId.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByVehicleId(ByVal dataTable As StatusReportDataSet.vwVehicleStatusReportDataTable, ByVal VehicleId As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(VehicleId, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function GetCoverage(ByVal mktId As Integer, ByVal RetID As Integer) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            command.Parameters(0).Value = CType(mktId, Integer)
            command.Parameters(1).Value = CType(RetID, Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open()
            End If
            Dim returnValue As Object
            Try
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close()
                End If
            End Try
            If ((returnValue Is Nothing) _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue, String)
            End If
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function GetFlyerId(ByVal VehicleId As Integer) As String
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            command.Parameters(0).Value = CType(VehicleId, Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open()
            End If
            Dim returnValue As Object
            Try
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close()
                End If
            End Try
            If ((returnValue Is Nothing) _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue, String)
            End If
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
        Public Overridable Overloads Function GetVehicleId(ByVal FlyerId As String) As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (FlyerId Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(FlyerId, String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open) _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open()
            End If
            Dim returnValue As Object
            Try
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close()
                End If
            End Try
            If ((returnValue Is Nothing) _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue, Integer))
            End If
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class SenderTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Sender"
            tableMapping.ColumnMappings.Add("SenderId", "SenderId")
            tableMapping.ColumnMappings.Add("Name", "Name")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.MCAP.My.MySettings.Default.MCAPConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     SenderId, Name" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM         Sender" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE      (SenderId=@SenderId)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SenderId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "SenderId", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT     SenderId, Name" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM         Sender" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE enddt is null order by name" & _
                " asc"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT s.Name, s.SenderId FROM Sender AS s INNER JOIN Envelope AS e ON s.SenderId" & _
                " = e.SenderId WHERE (e.EnvelopeId = @envelopeid)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@envelopeid", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "EnvelopeId", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As StatusReportDataSet.SenderDataTable, ByVal SenderId As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SenderId, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByAll(ByVal dataTable As StatusReportDataSet.SenderDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillByEnvelopeId(ByVal dataTable As StatusReportDataSet.SenderDataTable, ByVal envelopeid As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(envelopeid, Integer)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class PageCropTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PageCrop"
            tableMapping.ColumnMappings.Add("PageCropId", "PageCropId")
            tableMapping.ColumnMappings.Add("PageId", "PageId")
            tableMapping.ColumnMappings.Add("ReceivedOrder", "ReceivedOrder")
            tableMapping.ColumnMappings.Add("RetId", "RetId")
            tableMapping.ColumnMappings.Add("Retailer", "Retailer")
            tableMapping.ColumnMappings.Add("SizeId", "SizeId")
            tableMapping.ColumnMappings.Add("Size", "Size")
            tableMapping.ColumnMappings.Add("ImageName", "ImageName")
            tableMapping.ColumnMappings.Add("ThemeId", "ThemeId")
            tableMapping.ColumnMappings.Add("Theme", "Theme")
            tableMapping.ColumnMappings.Add("EventId", "EventId")
            tableMapping.ColumnMappings.Add("Event", "Event")
            tableMapping.ColumnMappings.Add("StartDt", "StartDt")
            tableMapping.ColumnMappings.Add("EndDt", "EndDt")
            tableMapping.ColumnMappings.Add("CouponInd", "CouponInd")
            tableMapping.ColumnMappings.Add("Coupon", "Coupon")
            tableMapping.ColumnMappings.Add("IndexDt", "IndexDt")
            tableMapping.ColumnMappings.Add("IndexById", "IndexById")
            tableMapping.ColumnMappings.Add("IndexedBy", "IndexedBy")
            tableMapping.ColumnMappings.Add("CreateSizedDt", "CreateSizedDt")
            tableMapping.ColumnMappings.Add("FlyerId", "FlyerId")
            tableMapping.ColumnMappings.Add("PageNumber", "PageNumber")
            tableMapping.ColumnMappings.Add("CreationMonth", "CreationMonth")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.MCAP.My.MySettings.Default.MCAPConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PC.PageCropId, PC.PageId, P.ReceivedOrder, PC.RetId, R.Descrip Retailer" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & _
                "" & Global.Microsoft.VisualBasic.ChrW(9) & ", PC.SizeId, dbo.GetSizeText(PC.SizeId) [Size], PC.CropImageName [ImageName]" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & _
                "" & Global.Microsoft.VisualBasic.ChrW(9) & ", PC.ThemeId, T.Descrip Theme, PC.EventId, E.Descrip [Event], PC.StartDt" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & ", P" & _
                "C.EndDt, CouponInd, CASE WHEN CouponInd=0 THEN 'No' ELSE 'Yes' END Coupon" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & ", I" & _
                "ndexDt, IndexById, I.FName + ' ' + I.LName [IndexedBy], CreateSizedDt" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & Global.Microsoft.VisualBasic.ChrW(9) & ", VP.Fl" & _
                "yerId, VP.PageNumber, VP.CreationMonth" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM PageCrop PC" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "INNER JOIN Page P ON " & _
                "PC.PageId = P.PageId AND P.VehicleId=@VehicleId" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "INNER JOIN Ret R ON PC.RetId =" & _
                " R.RetId" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "INNER JOIN [Event] E ON PC.EventId = E.EventId" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "INNER JOIN Theme T O" & _
                "N PC.ThemeId = T.ThemeId" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "INNER JOIN [User] I ON PC.IndexById = I.UserId" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "INNE" & _
                "R JOIN [Size] S ON PC.SizeId = S.SizeId" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & Global.Microsoft.VisualBasic.ChrW(9) & "LEFT JOIN VehiclePages VP ON PC.PageCr" & _
                "opId=VP.PageCropId"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VehicleId", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "VehicleId", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As StatusReportDataSet.PageCropDataTable, ByVal VehicleId As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (VehicleId.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(VehicleId.Value, Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class

    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" & _
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")> _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component

        Private _updateOrder As UpdateOrderOption

        Private _backupDataSetBeforeUpdate As Boolean

        Private _connection As Global.System.Data.IDbConnection

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set(value As UpdateOrderOption)
                Me._updateOrder = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set(value As Boolean)
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set(value As Global.System.Data.IDbConnection)
                Me._connection = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property

        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateUpdatedRows(ByVal dataSet As StatusReportDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateInsertedRows(ByVal dataSet As StatusReportDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateDeletedRows(ByVal dataSet As StatusReportDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing) _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing) _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = False) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function

        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function UpdateAll(ByVal dataSet As StatusReportDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = False) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" & _
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = False
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken) _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close()
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open()
                workConnOpened = True
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" & _
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit()
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback()
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear()
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges()
                            row.SetAdded()
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close()
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = True
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return True
            End If
            If ((Me.Connection Is Nothing) _
                        OrElse (inputConnection Is Nothing)) Then
                Return True
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return True
            End If
            Return False
        End Function

        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Enum UpdateOrderOption

            InsertUpdateDelete = 0

            UpdateInsertDelete = 1
        End Enum

        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)

            Private _relation As Global.System.Data.DataRelation

            Private _childFirst As Integer

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New()
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing) _
                            AndAlso (traversedRows.ContainsKey(parent) = False))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear()
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing) _
                                AndAlso (traversedRows.ContainsKey(parent) = False))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing) _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
