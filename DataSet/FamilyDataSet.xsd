<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="FamilyDataSet" targetNamespace="http://tempuri.org/FamilyDataSet.xsd" xmlns:mstns="http://tempuri.org/FamilyDataSet.xsd" xmlns="http://tempuri.org/FamilyDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="MCAPConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MCAPConnectionString (MySettings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MCAP.My.MySettings.GlobalReference.Default.MCAPConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="FamilyTableAdapter" GeneratorDataComponentClassName="FamilyTableAdapter" Name="Family" UserDataComponentName="FamilyTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.Family" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [Family] WHERE (([FamilyId] = @Original_FamilyId) AND ((@IsNull_CreateDt = 1 AND [CreateDt] IS NULL) OR ([CreateDt] = @Original_CreateDt)) AND ((@IsNull_ReviewDt = 1 AND [ReviewDt] IS NULL) OR ([ReviewDt] = @Original_ReviewDt)) AND ((@IsNull_ReviewedByID = 1 AND [ReviewedByID] IS NULL) OR ([ReviewedByID] = @Original_ReviewedByID)) AND ((@IsNull_FormName = 1 AND [FormName] IS NULL) OR ([FormName] = @Original_FormName)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_FamilyId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FamilyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_CreateDt" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreateDt" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_CreateDt" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="CreateDt" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ReviewDt" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReviewDt" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_ReviewDt" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ReviewDt" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_ReviewedByID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReviewedByID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReviewedByID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReviewedByID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_FormName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FormName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_FormName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="FormName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [Family] ([CreateDt], [ReviewDt], [ReviewedByID], [FormName]) VALUES (GETDATE(), @ReviewDt, @ReviewedByID, @FormName);
SELECT FamilyId, CreateDt, ReviewDt, ReviewedByID, FormName FROM Family WHERE (FamilyId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="ReviewDt" ColumnName="ReviewDt" DataSourceName="MCAP.dbo.Family" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@ReviewDt" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="ReviewDt" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="ReviewedByID" ColumnName="ReviewedByID" DataSourceName="MCAP.dbo.Family" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ReviewedByID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ReviewedByID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="FormName" ColumnName="FormName" DataSourceName="MCAP.dbo.Family" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@FormName" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="FormName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT     FamilyId, CreateDt, ReviewDt, ReviewedByID, FormName
FROM         Family</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE [Family] SET /*[CreateDt] = @CreateDt, */[ReviewDt] = @ReviewDt, [ReviewedByID] = @ReviewedByID, [FormName] = @FormName WHERE (([FamilyId] = @Original_FamilyId) AND ((@IsNull_CreateDt = 1 AND [CreateDt] IS NULL) OR ([CreateDt] = @Original_CreateDt)) AND ((@IsNull_ReviewDt = 1 AND [ReviewDt] IS NULL) OR ([ReviewDt] = @Original_ReviewDt)) AND ((@IsNull_ReviewedByID = 1 AND [ReviewedByID] IS NULL) OR ([ReviewedByID] = @Original_ReviewedByID)) AND ((@IsNull_FormName = 1 AND [FormName] IS NULL) OR ([FormName] = @Original_FormName)));
SELECT FamilyId, CreateDt, ReviewDt, ReviewedByID, FormName FROM Family WHERE (FamilyId = @FamilyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="ReviewDt" ColumnName="ReviewDt" DataSourceName="MCAP.dbo.Family" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@ReviewDt" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="ReviewDt" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="ReviewedByID" ColumnName="ReviewedByID" DataSourceName="MCAP.dbo.Family" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ReviewedByID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ReviewedByID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="FormName" ColumnName="FormName" DataSourceName="MCAP.dbo.Family" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@FormName" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="FormName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_FamilyId" ColumnName="FamilyId" DataSourceName="MCAP.dbo.Family" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_FamilyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FamilyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsNull_CreateDt" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IsNull_CreateDt" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="CreateDt" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Original_CreateDt" ColumnName="CreateDt" DataSourceName="MCAP.dbo.Family" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Original_CreateDt" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="CreateDt" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsNull_ReviewDt" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IsNull_ReviewDt" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReviewDt" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Original_ReviewDt" ColumnName="ReviewDt" DataSourceName="MCAP.dbo.Family" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@Original_ReviewDt" Precision="0" ProviderType="DateTime" Scale="0" Size="8" SourceColumn="ReviewDt" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsNull_ReviewedByID" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IsNull_ReviewedByID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReviewedByID" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Original_ReviewedByID" ColumnName="ReviewedByID" DataSourceName="MCAP.dbo.Family" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_ReviewedByID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ReviewedByID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="IsNull_FormName" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@IsNull_FormName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="FormName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Original_FormName" ColumnName="FormName" DataSourceName="MCAP.dbo.Family" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@Original_FormName" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="FormName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="FamilyId" ColumnName="FamilyId" DataSourceName="MCAP.dbo.Family" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@FamilyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FamilyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="FamilyId" DataSetColumn="FamilyId" />
              <Mapping SourceColumn="CreateDt" DataSetColumn="CreateDt" />
              <Mapping SourceColumn="ReviewDt" DataSetColumn="ReviewDt" />
              <Mapping SourceColumn="ReviewedByID" DataSetColumn="ReviewedByID" />
              <Mapping SourceColumn="FormName" DataSetColumn="FormName" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.Family" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="MarkFamilyAsReviewed" Modifier="Public" Name="MarkFamilyAsReviewed" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="MarkFamilyAsReviewed">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE    Family
SET              ReviewDt = GETDATE(), ReviewedByID = @UserId, FormName = @FormName
WHERE     (FamilyId = @FamilyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="UserId" ColumnName="ReviewedByID" DataSourceName="MCAP.dbo.Family" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ReviewedByID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="FormName" ColumnName="FormName" DataSourceName="MCAP.dbo.Family" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@FormName" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="FormName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="FamilyId" ColumnName="FamilyId" DataSourceName="MCAP.dbo.Family" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@FamilyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FamilyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE    Family
SET              ReviewDt = GETDATE(), ReviewedByID = @UserId
WHERE     (FamilyId = @FamilyId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="UserId" ColumnName="ReviewedByID" DataSourceName="MCAP.dbo.Family" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ReviewedByID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="FamilyId" ColumnName="FamilyId" DataSourceName="MCAP.dbo.Family" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@FamilyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FamilyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="MergeFamilies" Modifier="Public" Name="MergeFamilies" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="MergeFamilies">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE    vwCircular
SET              FamilyId = @NewFamilyId, FormName = @FormName
WHERE     (FamilyId = @OldFamilyId);  DELETE FROM Family WHERE FamilyId = @OldFamilyId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="NewFamilyId" ColumnName="FamilyId" DataSourceName="MCAP.dbo.vwCircular" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NewFamilyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FamilyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="FormName" ColumnName="FormName" DataSourceName="MCAP.dbo.vwCircular" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@FormName" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="FormName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="OldFamilyId" ColumnName="FamilyId" DataSourceName="MCAP.dbo.vwCircular" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@OldFamilyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FamilyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE vwCircular SET
FamilyId = @NewFamilyId
WHERE FamilyId = @OldFamilyId; DELETE FROM Family WHERE FamilyId = @OldFamilyId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="NewFamilyId" ColumnName="FamilyId" DataSourceName="MCAP.dbo.vwCircular" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@NewFamilyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FamilyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="OldFamilyId" ColumnName="FamilyId" DataSourceName="MCAP.dbo.vwCircular" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@OldFamilyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FamilyId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DisplayFamilyInformationTableAdapter" GeneratorDataComponentClassName="DisplayFamilyInformationTableAdapter" Name="DisplayFamilyInformation" UserDataComponentName="DisplayFamilyInformationTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event, (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket, (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd,V.AltMasterInd FROM Family AS F INNER JOIN ( SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById,AltMasterInd FROM vwCircular WHERE ( VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamilyByRange(@BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))) AS V ON F.FamilyId = V.FamilyId INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN Event AS E ON V.EventId = E.EventId INNER JOIN Media AS Med ON V.MediaId = Med.MediaID INNER JOIN Language AS L ON L.LanguageID = V.LanguageId INNER JOIN vwPriority AS P ON P.Priority = V.Priority INNER JOIN [User] AS I ON V.IndexedById = I.UserID INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) INNER JOIN (SELECT VehicleId, MIN(PageId) AS PageId FROM Page GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN Page AS PG ON PG.PageId = X.PageId INNER JOIN Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN (SELECT DISTINCT FlyerId, VehicleId FROM vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId WHERE (F.ReviewDt IS NULL) AND (F.FamilyId IS NOT NULL) AND (R.RetId = @RetId) GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd, V.FlashInd, V.NationalInd, V.FlashInd, v.VehicleId,v.AltMasterInd" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="GetTableFillNonReviewedByRetId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="GetTableFillNonReviewedByRetId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="GetTableFillNonReviewedByRetId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT FamilyId, CreateDt, ReviewDt, ReviewedByID, IsReviewed, VehicleId, RetId, MktId, BreakDt, StartDt, EndDt, ThemeId, EventId,
 Priority, ActualPageCount, Size, VehicleCreateDt, MediaID, Media, Retailer, Market, Theme, Event, MinMktId, FirstMarket, MaxMktId, 
 LastMarket, LanguageId, Language, CouponInd, IndexedBy, 
 CASE WHEN FirstFlyerId = SecondFlyerId THEN FirstFlyerId ELSE FirstFlyerId + ' (' + SecondFlyerId + ')' END AS FlyerId, 
 AdTypeId, AdDistId, DurEntryInd, ConEntryInd, CompareInd, LockInd,AltMasterInd FROM 
 (SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, 
 CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt,
  V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt,
   Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event, 
   (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket, 
   (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId, 
   LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, 
   MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, 
   MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, F.AdTypeId, F.AdDistId, 
   F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd,V.AltMasterInd
   FROM Family AS F INNER JOIN 
   (
   SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, 
   FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount,
    CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById,AltMasterInd
	FROM vwCircular WHERE (
	VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamilyByRange(@BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))) AS V ON F.FamilyId = V.FamilyId 
	INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL)) AS R ON V.RetId = R.RetId 
	INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL)) AS M ON V.MktId = M.MktId 
	INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId 
	INNER JOIN Event AS E ON V.EventId = E.EventId 
	INNER JOIN Media AS Med ON V.MediaId = Med.MediaID 
	INNER JOIN Language AS L ON L.LanguageID = V.LanguageId 
	INNER JOIN vwPriority AS P ON P.Priority = V.Priority 
	INNER JOIN [User] AS I ON V.IndexedById = I.UserID 
	INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) 
	INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) 
	INNER JOIN (SELECT VehicleId, MIN(PageId) AS PageId FROM Page GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId 
	INNER JOIN Page AS PG ON PG.PageId = X.PageId INNER JOIN Code AS C ON V.StatusID = C.CodeId 
	LEFT OUTER JOIN (SELECT DISTINCT FlyerId, VehicleId FROM vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId 
	WHERE (F.ReviewDt IS NULL) AND (F.FamilyId IS NOT NULL) AND (R.RetId = @RetId)
	GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, 
	V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), 
	V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.LanguageId, 
	L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, 
	F.LockInd, V.FlashInd, V.NationalInd, V.FlashInd, v.VehicleId,v.AltMasterInd) AS SubQ ORDER BY Market, CreateDt</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RetId" ColumnName="RetId" DataSourceName="SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event, (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket, (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd,V.AltMasterInd FROM Family AS F INNER JOIN ( SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById,AltMasterInd FROM vwCircular WHERE ( VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamilyByRange(@BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))) AS V ON F.FamilyId = V.FamilyId INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN Event AS E ON V.EventId = E.EventId INNER JOIN Media AS Med ON V.MediaId = Med.MediaID INNER JOIN Language AS L ON L.LanguageID = V.LanguageId INNER JOIN vwPriority AS P ON P.Priority = V.Priority INNER JOIN [User] AS I ON V.IndexedById = I.UserID INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) INNER JOIN (SELECT VehicleId, MIN(PageId) AS PageId FROM Page GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN Page AS PG ON PG.PageId = X.PageId INNER JOIN Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN (SELECT DISTINCT FlyerId, VehicleId FROM vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId WHERE (F.ReviewDt IS NULL) AND (F.FamilyId IS NOT NULL) AND (R.RetId = @RetId) GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd, V.FlashInd, V.NationalInd, V.FlashInd, v.VehicleId,v.AltMasterInd" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RetId" Precision="0" Scale="0" Size="4" SourceColumn="RetId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BreakDate" ColumnName="" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@BreakDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DayRange" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DayRange" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="VehicleId" DataSetColumn="VehicleId" />
              <Mapping SourceColumn="MktId" DataSetColumn="MktId" />
              <Mapping SourceColumn="ThemeId" DataSetColumn="ThemeId" />
              <Mapping SourceColumn="EventId" DataSetColumn="EventId" />
              <Mapping SourceColumn="CreateDt" DataSetColumn="CreateDt" />
              <Mapping SourceColumn="Retailer" DataSetColumn="Retailer" />
              <Mapping SourceColumn="Market" DataSetColumn="Market" />
              <Mapping SourceColumn="Media" DataSetColumn="Media" />
              <Mapping SourceColumn="Theme" DataSetColumn="Theme" />
              <Mapping SourceColumn="Event" DataSetColumn="Event" />
              <Mapping SourceColumn="BreakDt" DataSetColumn="BreakDt" />
              <Mapping SourceColumn="StartDt" DataSetColumn="StartDt" />
              <Mapping SourceColumn="EndDt" DataSetColumn="EndDt" />
              <Mapping SourceColumn="Priority" DataSetColumn="Priority" />
              <Mapping SourceColumn="VehicleCreateDt" DataSetColumn="VehicleCreateDt" />
              <Mapping SourceColumn="MinMktId" DataSetColumn="MinMktId" />
              <Mapping SourceColumn="FirstMarket" DataSetColumn="FirstMarket" />
              <Mapping SourceColumn="MaxMktId" DataSetColumn="MaxMktId" />
              <Mapping SourceColumn="LastMarket" DataSetColumn="LastMarket" />
              <Mapping SourceColumn="ReviewDt" DataSetColumn="ReviewDt" />
              <Mapping SourceColumn="ActualPageCount" DataSetColumn="ActualPageCount" />
              <Mapping SourceColumn="FamilyId" DataSetColumn="FamilyId" />
              <Mapping SourceColumn="ReviewedByID" DataSetColumn="ReviewedByID" />
              <Mapping SourceColumn="RetId" DataSetColumn="RetId" />
              <Mapping SourceColumn="MediaID" DataSetColumn="MediaID" />
              <Mapping SourceColumn="LanguageId" DataSetColumn="LanguageId" />
              <Mapping SourceColumn="Language" DataSetColumn="Language" />
              <Mapping SourceColumn="IsReviewed" DataSetColumn="IsReviewed" />
              <Mapping SourceColumn="CouponInd" DataSetColumn="CouponInd" />
              <Mapping SourceColumn="IndexedBy" DataSetColumn="IndexedBy" />
              <Mapping SourceColumn="Size" DataSetColumn="Size" />
              <Mapping SourceColumn="FlyerId" DataSetColumn="FlyerId" />
              <Mapping SourceColumn="AdTypeId" DataSetColumn="AdTypeId" />
              <Mapping SourceColumn="AdDistId" DataSetColumn="AdDistId" />
              <Mapping SourceColumn="AltMasterInd" DataSetColumn="AltMasterInd" />
              <Mapping SourceColumn="DurEntryInd" DataSetColumn="DurEntryInd" />
              <Mapping SourceColumn="ConEntryInd" DataSetColumn="ConEntryInd" />
              <Mapping SourceColumn="CompareInd" DataSetColumn="CompareInd" />
              <Mapping SourceColumn="LockInd" DataSetColumn="LockInd" />
              <Mapping SourceColumn="hpstatus" DataSetColumn="HPStatus" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event, (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket, (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, C.Descrip AS VehicleStatus, MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd FROM Family AS F INNER JOIN (SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, IndexDt, IndexedById, NationalInd FROM vwCircular WHERE (VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamily(@RetId, @MediaId, @BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))) AS V ON F.FamilyId = V.FamilyId INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN Language AS L ON L.LanguageID = V.LanguageId INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN Event AS E ON V.EventId = E.EventId INNER JOIN Media AS Med ON V.MediaId = Med.MediaID INNER JOIN vwPriority AS P ON P.Priority = V.Priority INNER JOIN [User] AS I ON V.IndexedById = I.UserID INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) INNER JOIN (SELECT VehicleId, MIN(PageId) AS PageId FROM Page GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN Page AS PG ON PG.PageId = X.PageId INNER JOIN Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN (SELECT DISTINCT FlyerId, VehicleId FROM vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy11" GeneratorSourceName="Fill" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT FamilyId, CreateDt, ReviewDt, ReviewedByID, IsReviewed, VehicleId, RetId, MktId, BreakDt, StartDt, EndDt, ThemeId, EventId, Priority, ActualPageCount, Size, VehicleCreateDt, MediaID, Media, Retailer, Market, Theme, Event, MinMktId, FirstMarket, MaxMktId, LastMarket, LanguageId, Language, CouponInd, IndexedBy, VehicleStatus, CASE WHEN FirstFlyerId = SecondFlyerId THEN FirstFlyerId ELSE CAST(FirstFlyerId + ' (' + SecondFlyerId + ')' AS nvarchar(25)) END AS FlyerId, AdTypeId, AdDistId, LockInd FROM (SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event, (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket, (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, C.Descrip AS VehicleStatus, MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd FROM Family AS F INNER JOIN (SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, IndexDt, IndexedById, NationalInd FROM vwCircular WHERE (VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamily(@RetId, @MediaId, @BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))) AS V ON F.FamilyId = V.FamilyId INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN Language AS L ON L.LanguageID = V.LanguageId INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN Event AS E ON V.EventId = E.EventId INNER JOIN Media AS Med ON V.MediaId = Med.MediaID INNER JOIN vwPriority AS P ON P.Priority = V.Priority INNER JOIN [User] AS I ON V.IndexedById = I.UserID INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) INNER JOIN (SELECT VehicleId, MIN(PageId) AS PageId FROM Page GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN Page AS PG ON PG.PageId = X.PageId INNER JOIN Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN (SELECT DISTINCT FlyerId, VehicleId FROM vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd) AS SubQ ORDER BY Market, CreateDt</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RetId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RetId" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MediaId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MediaId" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BreakDate" ColumnName="" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@BreakDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DayRange" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DayRange" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByPriority" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByPriority" GeneratorSourceName="FillByPriority" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="FillByPriority">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, 
                      V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeId) [Size], V.CreateDt AS VehicleCreateDt, Med.MediaID, 
                      Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event,
                          (SELECT     TOP (1) MktId AS MinMktId
                            FROM          Vehicle
                            WHERE      (FamilyId = F.FamilyId)
                            ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket,
                          (SELECT     TOP (1) MktId AS MaxMktId
                            FROM          Vehicle AS Vehicle_1
                            WHERE      (FamilyId = F.FamilyId)
                            ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, 
                      I.FName + ' ' + I.LName AS IndexedBy
FROM         Family AS F INNER JOIN
                          (SELECT     VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, 
                                                   CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, 
                                                   CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById
                            FROM          vwCircular
                            WHERE      (VehicleId IN
                                                       (SELECT     VehicleId
                                                         FROM          dbo.GetFirstVehicleIdForEachFamily(@RetId, @MediaId, @BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))) 
                      AS V ON F.FamilyId = V.FamilyId INNER JOIN
                          (SELECT     RetId, Descrip
                            FROM          Ret
                            WHERE      (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN
                          (SELECT     MktId, Descrip
                            FROM          Mkt
                            WHERE      (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN
                      Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN
                      Event AS E ON V.EventId = E.EventId INNER JOIN
                      Media AS Med ON V.MediaId = Med.MediaID INNER JOIN
                      Language AS L ON L.LanguageID = V.LanguageId INNER JOIN
                      [User] AS I ON V.IndexedById = I.UserID INNER JOIN
                      vwPriority AS P ON P.Priority = V.Priority INNER JOIN
                      Mkt AS FM ON FM.MktId =
                          (SELECT     TOP (1) MktId AS MinMktId
                            FROM          Vehicle
                            WHERE      (FamilyId = F.FamilyId)
                            ORDER BY CreateDt) INNER JOIN
                      Mkt AS LM ON LM.MktId =
                          (SELECT     TOP (1) MktId AS MaxMktId
                            FROM          Vehicle
                            WHERE      (FamilyId = F.FamilyId)
                            ORDER BY CreateDt DESC)
	INNER JOIN (SELECT VehicleId, MIN(PageId) PageId FROM Page GROUP BY VehicleId) X ON V.VehicleId=X.VehicleId
	INNER JOIN Page PG ON PG.PageId=X.PageId
WHERE     (V.Priority = @Priority)
ORDER BY Market, V.CreateDt</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Priority" ColumnName="Priority" DataSourceName="SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById FROM vwCircular WHERE (VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamily(@RetId, @MediaId, @BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Priority" Precision="0" Scale="0" Size="4" SourceColumn="Priority" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RetId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RetId" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="MediaId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MediaId" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BreakDate" ColumnName="" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@BreakDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DayRange" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DayRange" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillByVehicleId" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByVehicleId" GeneratorSourceName="FillByVehicleId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="FillByVehicleId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, 
                         V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, 
                         T.Descrip AS Theme, E.Descrip AS Event,
                             (SELECT        TOP (1) MktId AS MinMktId
                               FROM            Vehicle
                               WHERE        (FamilyId = F.FamilyId)
                               ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket,
                             (SELECT        TOP (1) MktId AS MaxMktId
                               FROM            Vehicle AS Vehicle_1
                               WHERE        (FamilyId = F.FamilyId)
                               ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, 
 C.Descrip AS VehicleStatus, 
 CASE WHEN V.FlashInd = 1 THEN 'Yes' ELSE 'No' END AS FlashStatus,
 CASE WHEN V.SPReviewStatusId = 68 THEN 'Yes' when V.SPReviewStatusId = 67 then 'Pending'  ELSE 'No' END AS  HpStatus,
                         CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END AS FlyerId, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd, V.AltMasterInd
FROM            Family AS F INNER JOIN
                             (SELECT        VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, 
                                                         FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById, SPReviewStatusId, EntryInd, 
                                                         ParentVehicleId, ReQCDt, ReQCedById, Subject, SentBy, SentFrom, DistDt, AltMasterInd
                               FROM            vwCircular
                               WHERE        (FamilyId =
                                                             (SELECT        FamilyId
                                                               FROM            vwCircular AS vwCircular_1
                                                               WHERE        (VehicleId = @VehicleId)))) AS V ON F.FamilyId = V.FamilyId INNER JOIN
                             (SELECT        RetId, Descrip
                               FROM            Ret
                               WHERE        (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN
                             (SELECT        MktId, Descrip
                               FROM            Mkt
                               WHERE        (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN
                         Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN
                         Event AS E ON V.EventId = E.EventId INNER JOIN
                         Media AS Med ON V.MediaId = Med.MediaID INNER JOIN
                         Language AS L ON L.LanguageID = V.LanguageId INNER JOIN
                         vwPriority AS P ON P.Priority = V.Priority INNER JOIN
                         [User] AS I ON V.IndexedById = I.UserID INNER JOIN
                         Mkt AS FM ON FM.MktId =
                             (SELECT        TOP (1) MktId AS MinMktId
                               FROM            Vehicle
                               WHERE        (FamilyId = F.FamilyId)
                               ORDER BY CreateDt) INNER JOIN
                         Mkt AS LM ON LM.MktId =
                             (SELECT        TOP (1) MktId AS MaxMktId
                               FROM            Vehicle
                               WHERE        (FamilyId = F.FamilyId)
                               ORDER BY CreateDt DESC) INNER JOIN
                             (SELECT        VehicleId, MIN(PageId) AS PageId
                               FROM            Page
                               GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN
                         Page AS PG ON PG.PageId = X.PageId INNER JOIN
                         Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN
                             (SELECT DISTINCT FlyerId, VehicleId
                               FROM            vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId
ORDER BY Market, V.VehicleId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="VehicleId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@VehicleId" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event, (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket, (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, C.Descrip AS VehicleStatus, MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, CASE WHEN V.FlashInd = 1 AND V.NationalInd = 1 THEN 'National' WHEN V.FlashInd = 1 THEN 'Flash' ELSE 'Regular' END AS FlashStatus, CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END AS FlyerId, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd FROM Family AS F INNER JOIN (SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById FROM vwCircular WHERE (VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamily(@RetId, @MediaId, @BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))) AS V ON F.FamilyId = V.FamilyId INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN Event AS E ON V.EventId = E.EventId INNER JOIN Media AS Med ON V.MediaId = Med.MediaID INNER JOIN Language AS L ON L.LanguageID = V.LanguageId INNER JOIN vwPriority AS P ON P.Priority = V.Priority INNER JOIN [User] AS I ON V.IndexedById = I.UserID INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) INNER JOIN (SELECT VehicleId, MIN(PageId) AS PageId FROM Page GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN Page AS PG ON PG.PageId = X.PageId INNER JOIN Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN (SELECT DISTINCT Flyerid, VehicleId FROM vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.FlashInd, V.NationalInd, VP.VehicleId, VP.Flyerid, V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillNonReviewed" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorGetMethodName="GetNonReviewedData" GeneratorSourceName="FillNonReviewed" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy3" UserSourceName="FillNonReviewed">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT FamilyId, CreateDt, ReviewDt, ReviewedByID, IsReviewed, VehicleId, RetId, MktId, BreakDt, StartDt, EndDt, ThemeId, EventId, Priority, ActualPageCount, Size, VehicleCreateDt, MediaID, Media, Retailer, Market, Theme, Event, MinMktId, FirstMarket, MaxMktId, LastMarket, LanguageId, Language, CouponInd, IndexedBy, VehicleStatus, CASE WHEN FirstFlyerId = SecondFlyerId THEN FirstFlyerId ELSE CAST(FirstFlyerId + ' (' + SecondFlyerId + ')' AS nvarchar(20)) END AS FlyerId, AdTypeId, AdDistId, LockInd FROM (SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event, (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket, (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, C.Descrip AS VehicleStatus, MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, CASE WHEN V.FlashInd = 1 AND V.NationalInd = 1 THEN 'National' WHEN V.FlashInd = 1 THEN 'Flash' ELSE 'Regular' END AS FlashStatus, CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END AS FlyerId, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd FROM Family AS F INNER JOIN (SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById FROM vwCircular WHERE (VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamily(@RetId, @MediaId, @BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))) AS V ON F.FamilyId = V.FamilyId INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN Event AS E ON V.EventId = E.EventId INNER JOIN Media AS Med ON V.MediaId = Med.MediaID INNER JOIN Language AS L ON L.LanguageID = V.LanguageId INNER JOIN vwPriority AS P ON P.Priority = V.Priority INNER JOIN [User] AS I ON V.IndexedById = I.UserID INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) INNER JOIN (SELECT VehicleId, MIN(PageId) AS PageId FROM Page GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN Page AS PG ON PG.PageId = X.PageId INNER JOIN Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN (SELECT DISTINCT Flyerid, VehicleId FROM vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.FlashInd, V.NationalInd, VP.VehicleId, VP.Flyerid, V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd) AS SubQ WHERE (ReviewDt IS NULL) ORDER BY Market, CreateDt</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="RetId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RetId" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MediaId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MediaId" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BreakDate" ColumnName="" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@BreakDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DayRange" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DayRange" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillNonReviewedByPriority" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorGetMethodName="GetNonReviewedDataByPriority" GeneratorSourceName="FillNonReviewedByPriority" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy4" UserSourceName="FillNonReviewedByPriority">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, 
                      V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeId) [Size], V.CreateDt AS VehicleCreateDt, Med.MediaID, 
                      Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event,
                          (SELECT     TOP (1) MktId AS MinMktId
                            FROM          Vehicle
                            WHERE      (FamilyId = F.FamilyId)
                            ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket,
                          (SELECT     TOP (1) MktId AS MaxMktId
                            FROM          Vehicle AS Vehicle_1
                            WHERE      (FamilyId = F.FamilyId)
                            ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, 
                      I.FName + ' ' + I.LName AS IndexedBy
FROM         Family AS F INNER JOIN
                          (SELECT     VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, 
                                                   CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, 
                                                   CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById
                            FROM          vwCircular
                            WHERE      (VehicleId IN
                                                       (SELECT     VehicleId
                                                         FROM          dbo.GetFirstVehicleIdForEachFamily(@RetId, @MediaId, @BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))) 
                      AS V ON F.FamilyId = V.FamilyId INNER JOIN
                          (SELECT     RetId, Descrip
                            FROM          Ret
                            WHERE      (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN
                          (SELECT     MktId, Descrip
                            FROM          Mkt
                            WHERE      (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN
                      Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN
                      Event AS E ON V.EventId = E.EventId INNER JOIN
                      Media AS Med ON V.MediaId = Med.MediaID INNER JOIN
                      Language AS L ON L.LanguageID = V.LanguageId INNER JOIN
                      vwPriority AS P ON P.Priority = V.Priority INNER JOIN
                      [User] AS I ON V.IndexedById = I.UserID INNER JOIN
                      Mkt AS FM ON FM.MktId =
                          (SELECT     TOP (1) MktId AS MinMktId
                            FROM          Vehicle
                            WHERE      (FamilyId = F.FamilyId)
                            ORDER BY CreateDt) INNER JOIN
                      Mkt AS LM ON LM.MktId =
                          (SELECT     TOP (1) MktId AS MaxMktId
                            FROM          Vehicle
                            WHERE      (FamilyId = F.FamilyId)
                            ORDER BY CreateDt DESC)
	INNER JOIN (SELECT VehicleId, MIN(PageId) PageId FROM Page GROUP BY VehicleId) X ON V.VehicleId=X.VehicleId
	INNER JOIN Page PG ON PG.PageId=X.PageId
WHERE     (F.ReviewDt IS NULL) AND (V.Priority = @Priority)
ORDER BY Market, V.CreateDt</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="Priority" ColumnName="Priority" DataSourceName="SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById FROM vwCircular WHERE (VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamily(@RetId, @MediaId, @BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Priority" Precision="0" Scale="0" Size="4" SourceColumn="Priority" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="RetId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RetId" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="MediaId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MediaId" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BreakDate" ColumnName="" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@BreakDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DayRange" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DayRange" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="GetImageFileName" Modifier="Public" Name="GetImageFileName" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy5" UserSourceName="GetImageFileName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT dbo.GetImageName(@VehicleId, @ReceivedOrder)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="VehicleId" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Int32" Direction="Input" ParameterName="@VehicleId" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ReceivedOrder" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Int32" Direction="Input" ParameterName="@ReceivedOrder" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAPDev.dbo.Ret" DbObjectType="Table" GenerateShortCommands="true" GeneratorSourceName="GetRetailerName" Modifier="Public" Name="GetRetailerName" QueryType="Scalar" ScalarCallRetval="System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy6" UserSourceName="GetRetailerName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT R.Descrip FROM Ret AS R INNER JOIN (SELECT RetId FROM vwCircular WHERE (VehicleId = @VehicleId)) AS V ON R.RetId = V.RetId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="VehicleId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@VehicleId" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID , CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed , V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt , V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeId) [Size] , V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media , R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme , E.Descrip AS [Event] , (SELECT TOP(1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId , FM.Descrip AS FirstMarket , (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId , LM.Descrip AS LastMarket, V.LanguageId, L.Descrip [Language], CouponInd , I.FName + ' ' + I.LName [IndexedBy] , C.Descrip AS VehicleStatus ,MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) FirstFlyerId ,MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId , CASE WHEN V.FlashInd = 1 AND V.NationalInd = 1 THEN 'National' WHEN V.FlashInd = 1 THEN 'Flash' ELSE 'Regular' END AS FlashStatus /*,CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END as FlyerId*/ , F.AdTypeId , F.AdDistId , F.DurEntryInd , F.ConEntryInd , F.CompareInd , F.LockInd FROM Family AS F INNER JOIN (SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt , EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId , PublicationId, FlashInd, CreateDt, CreatedById, ScanDt , ScannedById, QCDt, QCedById, FamilyId, CouponInd , CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences , StatusID, FormName, ActualPageCount, IndexDt, IndexedById, NationalInd FROM vwCircular WHERE (VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamilyByRange(@BreakDate, @DayRange ) AS GetFirstVehicleIdForEachFamily_1 ) ) ) AS V ON F.FamilyId = V.FamilyId INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL) ) AS R ON V.RetId = R.RetId INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL) ) AS M ON V.MktId = M.MktId INNER JOIN [Language] L ON L.LanguageId = V.LanguageId INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN [Event] AS E ON V.EventId = E.EventId INNER JOIN Media AS Med ON V.MediaId = Med.MediaID INNER JOIN vwPriority AS P ON P.Priority = V.Priority INNER JOIN [User] I ON V.IndexedById = I.UserId INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP(1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP(1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) INNER JOIN (SELECT VehicleId, MIN(PageId) PageId FROM Page GROUP BY VehicleId) X ON V.VehicleId=X.VehicleId INNER JOIN Page PG ON PG.PageId=X.PageId INNER JOIN Code C ON V.StatusID = C.CodeId LEFT JOIN (SELECT DISTINCT(Flyerid),VehicleId FROM vwVehicleFlyers_Concatenate) VP ON Vp.VehicleId = v.VehicleId WHERE (F.FamilyId IS NOT NULL) GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END , V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) , V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip,LM.Descrip, V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd,V.FlashInd,V.NationalInd,V.FlashInd,VP.VehicleId" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="GetTableFamilyData" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetTableFamilyData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy7" UserSourceName="GetTableFamilyData">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>
                      SELECT   distinct    (FamilyId), CreateDt, ReviewDt, ReviewedByID, IsReviewed, VehicleId, RetId, MktId, BreakDt, StartDt, EndDt, ThemeId,
                      EventId, Priority, ActualPageCount, Size,  VehicleCreateDt, MediaID, Media, Retailer,  Market,
                      Theme, Event, MinMktId, FirstMarket,
                      MaxMktId, LastMarket, LanguageId, Language, CouponInd, IndexedBy, VehicleStatus,
                      case when FirstFlyerId=SecondFlyerId then FirstFlyerId else FirstFlyerId + ' ('+SecondFlyerId + ')' end  as FlyerId,
                      AdTypeId, AdDistId, DurEntryInd, ConEntryInd, CompareInd, LockInd

                      FROM (
                      SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID
                      , CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed
                      , V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt
                      , V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeId) [Size]
                      , V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media
                      , R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme
                      , E.Descrip AS [Event]
                      , (SELECT TOP(1) MktId AS MinMktId
                      FROM Vehicle
                      WHERE (FamilyId = F.FamilyId)
                      ORDER BY CreateDt) AS MinMktId
                      , FM.Descrip AS FirstMarket
                      , (SELECT TOP (1) MktId AS MaxMktId
                      FROM Vehicle AS Vehicle_1
                      WHERE (FamilyId = F.FamilyId)
                      ORDER BY CreateDt DESC) AS MaxMktId
                      , LM.Descrip AS LastMarket, V.LanguageId, L.Descrip [Language], CouponInd
                      , I.FName + ' ' + I.LName [IndexedBy]
                      , C.Descrip as VehicleStatus
                      ,Min(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) FirstFlyerId
                      ,Max(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId
                      , CASE WHEN V.FlashInd = 1 AND V.NationalInd = 1 THEN 'National' WHEN V.FlashInd = 1 THEN 'Flash' ELSE 'Regular' END AS FlashStatus
                      --,CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END as FlyerId
                      , F.AdTypeId
                      , F.AdDistId
                      , F.DurEntryInd
                      , F.ConEntryInd
                      , F.CompareInd
                      , F.LockInd

                      FROM Family AS F
                      INNER JOIN (SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt
                      , EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId
                      , PublicationId, FlashInd, CreateDt, CreatedById, ScanDt
                      , ScannedById, QCDt, QCedById, FamilyId, CouponInd
                      , CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences
                      , StatusID, FormName, ActualPageCount, IndexDt, IndexedById, NationalInd
                      FROM vwCircular
                      WHERE (VehicleId IN
                      (SELECT VehicleId
                      FROM dbo.GetFirstVehicleIdForEachFamilyByRange(@BreakDate, @DayRange ) AS GetFirstVehicleIdForEachFamily_1
                      )
                      )
                      ) AS V ON F.FamilyId = V.FamilyId
                      INNER JOIN (SELECT RetId, Descrip
                      FROM Ret
                      WHERE (EndDt IS NULL)
                      ) AS R ON V.RetId = R.RetId
                      INNER JOIN (SELECT MktId, Descrip
                      FROM Mkt
                      WHERE (EndDt IS NULL)
                      ) AS M ON V.MktId = M.MktId
                      INNER JOIN [Language] L ON L.LanguageId = V.LanguageId
                      INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId
                      INNER JOIN [Event] AS E ON V.EventId = E.EventId
                      INNER JOIN Media AS Med ON V.MediaId = Med.MediaID
                      INNER JOIN vwPriority AS P ON P.Priority = V.Priority
                      INNER JOIN [User] I ON V.IndexedById = I.UserId
                      INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP(1) MktId AS MinMktId
                      FROM Vehicle
                      WHERE (FamilyId = F.FamilyId)
                      ORDER BY CreateDt)
                      INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP(1) MktId AS MaxMktId
                      FROM Vehicle
                      WHERE (FamilyId = F.FamilyId)
                      ORDER BY CreateDt DESC)
                      INNER JOIN (SELECT VehicleId, MIN(PageId) PageId FROM Page GROUP BY VehicleId) X ON V.VehicleId=X.VehicleId
                      INNER JOIN Page PG ON PG.PageId=X.PageId
                      INNER JOIN Code C ON V.StatusID = C.CodeId
                      LEFT JOIN (SELECT DISTINCT(Flyerid),VehicleId from vwVehicleFlyers_Concatenate) VP ON Vp.VehicleId = v.VehicleId
                      WHERE (F.FamilyId IS NOT NULL)
                      Group by  F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END , V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId,
                      V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) , V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip,
                      T.Descrip, E.Descrip, FM.Descrip,LM.Descrip,
                      V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip,
                      F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd,V.FlashInd,V.NationalInd,V.FlashInd,VP.VehicleId

                      ) as SubQ
                      order by createdt</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="BreakDate" ColumnName="" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@BreakDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DayRange" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DayRange" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID , CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed , V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt , V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeId) [Size] , V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media , R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme , E.Descrip AS [Event] , (SELECT TOP(1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId , FM.Descrip AS FirstMarket , (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId , LM.Descrip AS LastMarket, V.LanguageId, L.Descrip [Language], CouponInd , I.FName + ' ' + I.LName [IndexedBy] , C.Descrip AS VehicleStatus , CASE WHEN V.FlashInd = 1 AND V.NationalInd = 1 THEN 'National' WHEN V.FlashInd = 1 THEN 'Flash' ELSE 'Regular' END AS FlashStatus ,MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) FirstFlyerId ,MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId , F.AdTypeId , F.AdDistId , F.DurEntryInd , F.ConEntryInd , F.CompareInd , F.LockInd FROM Family AS F INNER JOIN (SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt , EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId , PublicationId, FlashInd, CreateDt, CreatedById, ScanDt , ScannedById, QCDt, QCedById, FamilyId, CouponInd , CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences , StatusID, FormName, ActualPageCount, IndexDt, IndexedById, NationalInd FROM vwCircular WHERE (VehicleId IN (SELECT (SELECT TOP 1 VehicleId FROM vwCircular V2 WHERE DATEDIFF(D, BreakDt, @BreakDate) &lt;= @DayRange AND DATEDIFF(D, BreakDt, @BreakDate) &gt;= -@DayRange AND V2.FamilyId=vwCircular.FamilyId ORDER BY CASE WHEN CreateSizedDt IS NOT NULL THEN 0 ELSE 1 END, CASE WHEN QCDt IS NOT NULL THEN 0 ELSE 1 END, CASE WHEN ScanDt IS NOT NULL THEN 0 ELSE 1 END, CASE WHEN IndexDt IS NOT NULL THEN 0 ELSE 1 END, CreateDt) AS VehicleId FROM vwCircular WHERE DATEDIFF(D, BreakDt, @BreakDate) &lt;= @DayRange AND DATEDIFF(D, BreakDt, @BreakDate) &gt;= -@DayRange AND FamilyId IS NOT NULL AND MediaId = @MediaId GROUP BY FamilyId ) ) ) AS V ON F.FamilyId = V.FamilyId INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL) ) AS R ON V.RetId = R.RetId INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL) ) AS M ON V.MktId = M.MktId INNER JOIN [Language] L ON L.LanguageId = V.LanguageId INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN [Event] AS E ON V.EventId = E.EventId INNER JOIN Media AS Med ON V.MediaId = Med.MediaID INNER JOIN vwPriority AS P ON P.Priority = V.Priority INNER JOIN [User] I ON V.IndexedById = I.UserId INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP(1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP(1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) INNER JOIN (SELECT VehicleId, MIN(PageId) PageId FROM Page GROUP BY VehicleId) X ON V.VehicleId=X.VehicleId INNER JOIN Page PG ON PG.PageId=X.PageId INNER JOIN Code C ON V.StatusID = C.CodeId LEFT JOIN (SELECT DISTINCT(Flyerid),VehicleId FROM vwVehicleFlyers_Concatenate) VP ON Vp.VehicleId = v.VehicleId WHERE (F.FamilyId IS NOT NULL) GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END , V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) , V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip,LM.Descrip, V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd,V.FlashInd,V.NationalInd,V.FlashInd,VP.VehicleId" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="GetTableFamilyDataByMediaId" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetTableFamilyDataByMediaId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy8" UserSourceName="GetTableFamilyDataByMediaId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT DISTINCT 
                         FamilyId, CreateDt, ReviewDt, ReviewedByID, IsReviewed, VehicleId, RetId, MktId, BreakDt, StartDt, EndDt, ThemeId, EventId, Priority, ActualPageCount, Size, VehicleCreateDt, MediaID, Media, Retailer, Market, 
                         Theme, Event, MinMktId, FirstMarket, MaxMktId, LastMarket, LanguageId, Language, CouponInd, IndexedBy, VehicleStatus, 
                         CASE WHEN FirstFlyerId = SecondFlyerId THEN FirstFlyerId ELSE FirstFlyerId + ' (' + SecondFlyerId + ')' END AS FlyerId, AdTypeId, AdDistId, DurEntryInd, ConEntryInd, CompareInd, LockInd
FROM            (SELECT        F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, 
                                                    V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, 
                                                    M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event,
                                                        (SELECT        TOP (1) MktId AS MinMktId
                                                          FROM            Vehicle
                                                          WHERE        (FamilyId = F.FamilyId)
                                                          ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket,
                                                        (SELECT        TOP (1) MktId AS MaxMktId
                                                          FROM            Vehicle AS Vehicle_1
                                                          WHERE        (FamilyId = F.FamilyId)
                                                          ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, C.Descrip AS VehicleStatus, 
                                                    CASE WHEN V.FlashInd = 1 AND V.NationalInd = 1 THEN 'National' WHEN V.FlashInd = 1 THEN 'Flash' ELSE 'Regular' END AS FlashStatus, 
                                                    MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, F.AdTypeId, 
                                                    F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd
                          FROM            Family AS F INNER JOIN
                                                        (SELECT        VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, 
                                                                                    QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, IndexDt, IndexedById, 
                                                                                    NationalInd
                                                          FROM            vwCircular
                                                          WHERE        (VehicleId IN
                                                                                        (SELECT        (SELECT        TOP (1) VehicleId
                                                                                                                     FROM            vwCircular AS V2
                                                                                                                     WHERE        (DATEDIFF(D, BreakDt, @BreakDate) &lt;= @DayRange) AND (DATEDIFF(D, BreakDt, @BreakDate) &gt;= - @DayRange) AND (FamilyId = vwCircular_1.FamilyId)
                                                                                                                     ORDER BY CASE WHEN CreateSizedDt IS NOT NULL THEN 0 ELSE 1 END, CASE WHEN QCDt IS NOT NULL THEN 0 ELSE 1 END, CASE WHEN ScanDt IS NOT NULL 
                                                                                                                                              THEN 0 ELSE 1 END, CASE WHEN IndexDt IS NOT NULL THEN 0 ELSE 1 END, CreateDt) AS VehicleId
                                                                                          FROM            vwCircular AS vwCircular_1
                                                                                          WHERE        (DATEDIFF(D, BreakDt, @BreakDate) &lt;= @DayRange) AND (DATEDIFF(D, BreakDt, @BreakDate) &gt;= - @DayRange) AND (FamilyId IS NOT NULL) AND 
                                                                                                                    (MediaId = @MediaId OR
                                                                                                                    @MediaId = - 2 AND MediaId IN (1, 2, 4, 5, 8, 14, 15, 13, 21, 22, 25, 26, 27))
                                                                                          GROUP BY FamilyId))) AS V ON F.FamilyId = V.FamilyId INNER JOIN
                                                        (SELECT        RetId, Descrip
                                                          FROM            Ret
                                                          WHERE        (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN
                                                        (SELECT        MktId, Descrip
                                                          FROM            Mkt
                                                          WHERE        (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN
                                                    Language AS L ON L.LanguageID = V.LanguageId INNER JOIN
                                                    Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN
                                                    Event AS E ON V.EventId = E.EventId INNER JOIN
                                                    Media AS Med ON V.MediaId = Med.MediaID INNER JOIN
                                                    vwPriority AS P ON P.Priority = V.Priority INNER JOIN
                                                    [User] AS I ON V.IndexedById = I.UserID INNER JOIN
                                                    Mkt AS FM ON FM.MktId =
                                                        (SELECT        TOP (1) MktId AS MinMktId
                                                          FROM            Vehicle
                                                          WHERE        (FamilyId = F.FamilyId)
                                                          ORDER BY CreateDt) INNER JOIN
                                                    Mkt AS LM ON LM.MktId =
                                                        (SELECT        TOP (1) MktId AS MaxMktId
                                                          FROM            Vehicle
                                                          WHERE        (FamilyId = F.FamilyId)
                                                          ORDER BY CreateDt DESC) INNER JOIN
                                                        (SELECT        VehicleId, MIN(PageId) AS PageId
                                                          FROM            Page
                                                          GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN
                                                    Page AS PG ON PG.PageId = X.PageId INNER JOIN
                                                    Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN
                                                        (SELECT DISTINCT FlyerId, VehicleId
                                                          FROM            vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId
                          WHERE        (F.FamilyId IS NOT NULL)
                          GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, 
                                                    V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.LanguageId, L.Descrip, 
                                                    V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd, V.FlashInd, V.NationalInd, V.FlashInd, VP.VehicleId) AS SubQ
ORDER BY CreateDt</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="BreakDate" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="DateTime" Direction="Input" ParameterName="@BreakDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DayRange" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@DayRange" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="MediaId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MediaId" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="GetTableFamilyDataByRetId" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetTableFamilyDataByRetId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy9" UserSourceName="GetTableFamilyDataByRetId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID
		, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed
		, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt
		, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeId) [Size]
		, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media
		, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme
		, E.Descrip AS [Event]
		, (SELECT TOP(1) MktId AS MinMktId 
			FROM Vehicle 
			WHERE (FamilyId = F.FamilyId) 
			ORDER BY CreateDt) AS MinMktId
		, FM.Descrip AS FirstMarket
		, (SELECT TOP (1) MktId AS MaxMktId 
			FROM Vehicle AS Vehicle_1 
			WHERE (FamilyId = F.FamilyId) 
			ORDER BY CreateDt DESC) AS MaxMktId
		, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip [Language], CouponInd
		, I.FName + ' ' + I.LName [IndexedBy]
	                   , C.Descrip as VehicleStatus
	                   , CASE WHEN V.FlashInd = 1 AND V.NationalInd = 1 THEN 'National' WHEN V.FlashInd = 1 THEN 'Flash' ELSE 'Regular' END AS FlashStatus
	                   ,CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END as FlyerId
                                      , F.AdTypeId
                                      , F.AdDistId
                                      , F.DurEntryInd
                                      , F.ConEntryInd
                                      , F.CompareInd
                                      , F.LockInd
FROM Family AS F 
	INNER JOIN (SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt
						, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId
						, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt
						, ScannedById, QCDt, QCedById, FamilyId, CouponInd
						, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences
						, StatusID, FormName, ActualPageCount, IndexDt, IndexedById, NationalInd
				FROM vwCircular
				WHERE (VehicleId IN 
						(SELECT  (select top 1 VehicleId FROM vwCircular V2
						 WHERE DATEDIFF(D, BreakDt, @BreakDate) &lt;= @DayRange
				         AND DATEDIFF(D, BreakDt, @BreakDate) &gt;= -@DayRange
				         and V2.FamilyId=vwCircular.FamilyId
				         order by case when CreateSizedDt is not null then 0 else 1 end,
					     case when QCDt is not null then 0 else 1 end,
					     case when ScanDt is not null then 0 else 1 end,
					     case when IndexDt is not null then 0 else 1 end,
					     CreateDt) as VehicleId
						 FROM vwCircular 
					     WHERE  DATEDIFF(D, BreakDt, @BreakDate) &lt;= @DayRange 
						 AND DATEDIFF(D, BreakDt, @BreakDate) &gt;= -@DayRange
                      and FamilyId is not null
                      and RetId = @RetId
                      GROUP BY FamilyId
                      )
                      )
                      ) AS V ON F.FamilyId = V.FamilyId
                      INNER JOIN (SELECT RetId, Descrip
                      FROM Ret
                      WHERE (EndDt IS NULL)
                      ) AS R ON V.RetId = R.RetId
                      INNER JOIN (SELECT MktId, Descrip
                      FROM Mkt
                      WHERE (EndDt IS NULL)
                      ) AS M ON V.MktId = M.MktId
                      INNER JOIN [Language] L ON L.LanguageId = V.LanguageId
                      INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId
                      INNER JOIN [Event] AS E ON V.EventId = E.EventId
                      INNER JOIN Media AS Med ON V.MediaId = Med.MediaID
                      INNER JOIN vwPriority AS P ON P.Priority = V.Priority
                      INNER JOIN [User] I ON V.IndexedById = I.UserId
                      INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP(1) MktId AS MinMktId
                      FROM Vehicle
                      WHERE (FamilyId = F.FamilyId)
                      ORDER BY CreateDt)
                      INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP(1) MktId AS MaxMktId
                      FROM Vehicle
                      WHERE (FamilyId = F.FamilyId)
                      ORDER BY CreateDt DESC)
                      INNER JOIN (SELECT VehicleId, MIN(PageId) PageId FROM Page GROUP BY VehicleId) X ON V.VehicleId=X.VehicleId
                      INNER JOIN Page PG ON PG.PageId=X.PageId
                      INNER JOIN Code C ON V.StatusID = C.CodeId
                      LEFT JOIN (SELECT DISTINCT(Flyerid),VehicleId from vwVehicleFlyers_Concatenate) VP ON Vp.VehicleId = v.VehicleId
                      WHERE (F.FamilyId IS NOT NULL)
                      ORDER BY M.Descrip, V.CreateDt
</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="BreakDate" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="DateTime" Direction="Input" ParameterName="@BreakDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DayRange" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@DayRange" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="RetId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@RetId" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event, (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket, (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, C.Descrip AS VehicleStatus, MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, CASE WHEN V.FlashInd = 1 AND V.NationalInd = 1 THEN 'National' WHEN V.FlashInd = 1 THEN 'Flash' ELSE 'Regular' END AS FlashStatus, CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END AS FlyerId, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd FROM Family AS F INNER JOIN (SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById FROM vwCircular WHERE (VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamilyByRange(@BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))) AS V ON F.FamilyId = V.FamilyId INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN Event AS E ON V.EventId = E.EventId INNER JOIN Media AS Med ON V.MediaId = Med.MediaID INNER JOIN Language AS L ON L.LanguageID = V.LanguageId INNER JOIN vwPriority AS P ON P.Priority = V.Priority INNER JOIN [User] AS I ON V.IndexedById = I.UserID INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) INNER JOIN (SELECT VehicleId, MIN(PageId) AS PageId FROM Page GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN Page AS PG ON PG.PageId = X.PageId INNER JOIN Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN (SELECT DISTINCT Flyerid, VehicleId FROM vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.FlashInd, V.NationalInd, VP.VehicleId, VP.Flyerid, V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="GetTableFillNonReviewed" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorSourceName="GetTableFillNonReviewed" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy10" UserSourceName="GetTableFillNonReviewed">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT FamilyId, CreateDt, ReviewDt, ReviewedByID, IsReviewed, VehicleId, RetId, MktId, BreakDt, StartDt, EndDt, ThemeId, EventId, Priority, ActualPageCount, Size, VehicleCreateDt, MediaID, Media, Retailer, Market, Theme, Event, MinMktId, FirstMarket, MaxMktId, LastMarket, LanguageId, Language, CouponInd, IndexedBy, VehicleStatus, CASE WHEN FirstFlyerId = SecondFlyerId THEN FirstFlyerId ELSE CAST(FirstFlyerId + ' (' + SecondFlyerId + ')' AS nvarchar(20)) END AS FlyerId, AdTypeId, AdDistId, LockInd FROM (SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event, (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket, (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, C.Descrip AS VehicleStatus, MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, CASE WHEN V.FlashInd = 1 AND V.NationalInd = 1 THEN 'National' WHEN V.FlashInd = 1 THEN 'Flash' ELSE 'Regular' END AS FlashStatus, CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END AS FlyerId, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd FROM Family AS F INNER JOIN (SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById FROM vwCircular WHERE (VehicleId IN (SELECT VehicleId FROM dbo.GetFirstVehicleIdForEachFamilyByRange(@BreakDate, @DayRange) AS GetFirstVehicleIdForEachFamily_1))) AS V ON F.FamilyId = V.FamilyId INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN Event AS E ON V.EventId = E.EventId INNER JOIN Media AS Med ON V.MediaId = Med.MediaID INNER JOIN Language AS L ON L.LanguageID = V.LanguageId INNER JOIN vwPriority AS P ON P.Priority = V.Priority INNER JOIN [User] AS I ON V.IndexedById = I.UserID INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) INNER JOIN (SELECT VehicleId, MIN(PageId) AS PageId FROM Page GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN Page AS PG ON PG.PageId = X.PageId INNER JOIN Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN (SELECT DISTINCT Flyerid, VehicleId FROM vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.FlashInd, V.NationalInd, VP.VehicleId, VP.Flyerid, V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd) AS SubQ WHERE (ReviewDt IS NULL) AND (FamilyId IS NOT NULL) ORDER BY Market, CreateDt</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="BreakDate" ColumnName="" DataSourceName="" DataTypeServer="datetime" DbType="DateTime" Direction="Input" ParameterName="@BreakDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DayRange" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@DayRange" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="SELECT F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event, (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket, (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle AS Vehicle_1 WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, C.Descrip AS VehicleStatus, CASE WHEN V.FlashInd = 1 AND V.NationalInd = 1 THEN 'National' WHEN V.FlashInd = 1 THEN 'Flash' ELSE 'Regular' END AS FlashStatus, MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd FROM Family AS F INNER JOIN (SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, IndexedById FROM vwCircular WHERE (VehicleId IN (SELECT (SELECT TOP (1) VehicleId FROM vwCircular AS V2 WHERE (DATEDIFF(D, BreakDt, @BreakDate) &lt;= @DayRange) AND (DATEDIFF(D, BreakDt, @BreakDate) &gt;= - @DayRange) AND (FamilyId = vwCircular_1.FamilyId) ORDER BY CASE WHEN CreateSizedDt IS NOT NULL THEN 0 ELSE 1 END, CASE WHEN QCDt IS NOT NULL THEN 0 ELSE 1 END, CASE WHEN ScanDt IS NOT NULL THEN 0 ELSE 1 END, CASE WHEN IndexDt IS NOT NULL THEN 0 ELSE 1 END, CreateDt) AS VehicleId FROM vwCircular AS vwCircular_1 WHERE (DATEDIFF(D, BreakDt, @BreakDate) &lt;= @DayRange) AND (DATEDIFF(D, BreakDt, @BreakDate) &gt;= - @DayRange) AND (FamilyId IS NOT NULL) AND (MediaId = @mediaId) GROUP BY FamilyId))) AS V ON F.FamilyId = V.FamilyId INNER JOIN (SELECT RetId, Descrip FROM Ret WHERE (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN (SELECT MktId, Descrip FROM Mkt WHERE (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN Event AS E ON V.EventId = E.EventId INNER JOIN Media AS Med ON V.MediaId = Med.MediaID INNER JOIN Language AS L ON L.LanguageID = V.LanguageId INNER JOIN vwPriority AS P ON P.Priority = V.Priority INNER JOIN [User] AS I ON V.IndexedById = I.UserID INNER JOIN Mkt AS FM ON FM.MktId = (SELECT TOP (1) MktId AS MinMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt) INNER JOIN Mkt AS LM ON LM.MktId = (SELECT TOP (1) MktId AS MaxMktId FROM Vehicle WHERE (FamilyId = F.FamilyId) ORDER BY CreateDt DESC) INNER JOIN (SELECT VehicleId, MIN(PageId) AS PageId FROM Page GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN Page AS PG ON PG.PageId = X.PageId INNER JOIN Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN (SELECT DISTINCT Flyerid, VehicleId FROM vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId WHERE (F.ReviewDt IS NULL) AND (F.FamilyId IS NOT NULL) GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.LanguageId, L.Descrip, V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd, V.FlashInd, V.NationalInd, V.FlashInd, VP.VehicleId" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="GetTableFillNonReviewedByMediaId" GenerateMethods="Fill" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy9" GeneratorSourceName="GetTableFillNonReviewedByMediaId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy11" UserSourceName="GetTableFillNonReviewedByMediaId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        FamilyId, CreateDt, ReviewDt, ReviewedByID, IsReviewed, VehicleId, RetId, MktId, BreakDt, StartDt, EndDt, ThemeId, EventId, Priority, ActualPageCount, Size, VehicleCreateDt, MediaID, Media, Retailer, Market, 
                         Theme, Event, MinMktId, FirstMarket, MaxMktId, LastMarket, LanguageId, Language, CouponInd, IndexedBy, VehicleStatus, 
                         CASE WHEN FirstFlyerId = SecondFlyerId THEN FirstFlyerId ELSE FirstFlyerId + ' (' + SecondFlyerId + ')' END AS FlyerId, AdTypeId, AdDistId, LockInd
FROM            (SELECT        F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END AS IsReviewed, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, 
                                                    V.ThemeId, V.EventId, V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID) AS Size, V.CreateDt AS VehicleCreateDt, Med.MediaID, Med.Descrip AS Media, R.Descrip AS Retailer, 
                                                    M.Descrip AS Market, T.Descrip AS Theme, E.Descrip AS Event,
                                                        (SELECT        TOP (1) MktId AS MinMktId
                                                          FROM            Vehicle
                                                          WHERE        (FamilyId = F.FamilyId)
                                                          ORDER BY CreateDt) AS MinMktId, FM.Descrip AS FirstMarket,
                                                        (SELECT        TOP (1) MktId AS MaxMktId
                                                          FROM            Vehicle AS Vehicle_1
                                                          WHERE        (FamilyId = F.FamilyId)
                                                          ORDER BY CreateDt DESC) AS MaxMktId, LM.Descrip AS LastMarket, V.LanguageId, L.Descrip AS Language, V.CouponInd, I.FName + ' ' + I.LName AS IndexedBy, C.Descrip AS VehicleStatus, 
                                                    CASE WHEN V.FlashInd = 1 AND V.NationalInd = 1 THEN 'National' WHEN V.FlashInd = 1 THEN 'Flash' ELSE 'Regular' END AS FlashStatus, 
                                                    MIN(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS FirstFlyerId, MAX(CASE WHEN V.VehicleId = vp.VehicleId THEN vp.FlyerId ELSE '' END) AS SecondFlyerId, F.AdTypeId, 
                                                    F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd
                          FROM            Family AS F INNER JOIN
                                                        (SELECT        VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, TypeId, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, 
                                                                                    QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID, FormName, ActualPageCount, NationalInd, IndexDt, 
                                                                                    IndexedById
                                                          FROM            vwCircular
                                                          WHERE        (VehicleId IN
                                                                                        (SELECT        (SELECT        TOP (1) VehicleId
                                                                                                                     FROM            vwCircular AS V2
                                                                                                                     WHERE        (DATEDIFF(D, BreakDt, @BreakDate) &lt;= @DayRange) AND (DATEDIFF(D, BreakDt, @BreakDate) &gt;= - @DayRange) AND (FamilyId = vwCircular_1.FamilyId)
                                                                                                                     ORDER BY CASE WHEN CreateSizedDt IS NOT NULL THEN 0 ELSE 1 END, CASE WHEN QCDt IS NOT NULL THEN 0 ELSE 1 END, CASE WHEN ScanDt IS NOT NULL 
                                                                                                                                              THEN 0 ELSE 1 END, CASE WHEN IndexDt IS NOT NULL THEN 0 ELSE 1 END, CreateDt) AS VehicleId
                                                                                          FROM            vwCircular AS vwCircular_1
                                                                                          WHERE        (DATEDIFF(D, BreakDt, @BreakDate) &lt;= @DayRange) AND (DATEDIFF(D, BreakDt, @BreakDate) &gt;= - @DayRange) AND (FamilyId IS NOT NULL) AND 
                                                                                                                    (MediaId = @MediaId OR
                                                                                                                    @MediaId = - 2 AND MediaId IN (1, 2, 4, 5, 8, 14, 15, 13, 21, 22, 25, 26, 27))
                                                                                          GROUP BY FamilyId))) AS V ON F.FamilyId = V.FamilyId INNER JOIN
                                                        (SELECT        RetId, Descrip
                                                          FROM            Ret
                                                          WHERE        (EndDt IS NULL)) AS R ON V.RetId = R.RetId INNER JOIN
                                                        (SELECT        MktId, Descrip
                                                          FROM            Mkt
                                                          WHERE        (EndDt IS NULL)) AS M ON V.MktId = M.MktId INNER JOIN
                                                    Theme AS T ON V.ThemeId = T.ThemeId INNER JOIN
                                                    Event AS E ON V.EventId = E.EventId INNER JOIN
                                                    Media AS Med ON V.MediaId = Med.MediaID INNER JOIN
                                                    Language AS L ON L.LanguageID = V.LanguageId INNER JOIN
                                                    vwPriority AS P ON P.Priority = V.Priority INNER JOIN
                                                    [User] AS I ON V.IndexedById = I.UserID INNER JOIN
                                                    Mkt AS FM ON FM.MktId =
                                                        (SELECT        TOP (1) MktId AS MinMktId
                                                          FROM            Vehicle
                                                          WHERE        (FamilyId = F.FamilyId)
                                                          ORDER BY CreateDt) INNER JOIN
                                                    Mkt AS LM ON LM.MktId =
                                                        (SELECT        TOP (1) MktId AS MaxMktId
                                                          FROM            Vehicle
                                                          WHERE        (FamilyId = F.FamilyId)
                                                          ORDER BY CreateDt DESC) INNER JOIN
                                                        (SELECT        VehicleId, MIN(PageId) AS PageId
                                                          FROM            Page
                                                          GROUP BY VehicleId) AS X ON V.VehicleId = X.VehicleId INNER JOIN
                                                    Page AS PG ON PG.PageId = X.PageId INNER JOIN
                                                    Code AS C ON V.StatusID = C.CodeId LEFT OUTER JOIN
                                                        (SELECT DISTINCT FlyerId, VehicleId
                                                          FROM            vwVehicleFlyers_Concatenate) AS VP ON VP.VehicleId = V.VehicleId
                          WHERE        (F.ReviewDt IS NULL) AND (F.FamilyId IS NOT NULL)
                          GROUP BY F.FamilyId, V.CreateDt, F.ReviewDt, F.ReviewedByID, CASE WHEN F.ReviewDt IS NULL THEN 'No' ELSE 'Yes' END, V.VehicleId, V.RetId, V.MktId, V.BreakDt, V.StartDt, V.EndDt, V.ThemeId, V.EventId, 
                                                    V.Priority, V.ActualPageCount, dbo.GetSizeText(PG.SizeID), V.CreateDt, Med.MediaID, Med.Descrip, R.Descrip, M.Descrip, T.Descrip, E.Descrip, FM.Descrip, LM.Descrip, V.LanguageId, L.Descrip, 
                                                    V.CouponInd, I.FName + ' ' + I.LName, C.Descrip, F.AdTypeId, F.AdDistId, F.DurEntryInd, F.ConEntryInd, F.CompareInd, F.LockInd, V.FlashInd, V.NationalInd, V.FlashInd, VP.VehicleId) AS SubQ
ORDER BY Market, CreateDt</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="BreakDate" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="DateTime" Direction="Input" ParameterName="@BreakDate" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="DayRange" ColumnName="" DataSourceName="" DataTypeServer="unknown" DbType="Decimal" Direction="Input" ParameterName="@DayRange" Precision="0" Scale="0" Size="0" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="MediaId" ColumnName="" DataSourceName="" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MediaId" Precision="0" Scale="0" Size="4" SourceColumn="" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vwCircularTableAdapter" GeneratorDataComponentClassName="vwCircularTableAdapter" Name="vwCircular" UserDataComponentName="vwCircularTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.vwCircular" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="Fill" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT VehicleId, EnvelopeId, RetId, MktId, BreakDt, StartDt, EndDt, LanguageId, EventId, ThemeId, MediaId, PublicationId, FlashInd, CreateDt, CreatedById, ScanDt, ScannedById, QCDt, QCedById, FamilyId, CouponInd, CreateSizedDt, Priority, CheckInPageCount, CheckInOccurrences, StatusID FROM dbo.vwCircular</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="VehicleId" DataSetColumn="VehicleId" />
              <Mapping SourceColumn="EnvelopeId" DataSetColumn="EnvelopeId" />
              <Mapping SourceColumn="RetId" DataSetColumn="RetId" />
              <Mapping SourceColumn="MktId" DataSetColumn="MktId" />
              <Mapping SourceColumn="BreakDt" DataSetColumn="BreakDt" />
              <Mapping SourceColumn="StartDt" DataSetColumn="StartDt" />
              <Mapping SourceColumn="EndDt" DataSetColumn="EndDt" />
              <Mapping SourceColumn="LanguageId" DataSetColumn="LanguageId" />
              <Mapping SourceColumn="EventId" DataSetColumn="EventId" />
              <Mapping SourceColumn="ThemeId" DataSetColumn="ThemeId" />
              <Mapping SourceColumn="MediaId" DataSetColumn="MediaId" />
              <Mapping SourceColumn="PublicationId" DataSetColumn="PublicationId" />
              <Mapping SourceColumn="FlashInd" DataSetColumn="FlashInd" />
              <Mapping SourceColumn="CreateDt" DataSetColumn="CreateDt" />
              <Mapping SourceColumn="CreatedById" DataSetColumn="CreatedById" />
              <Mapping SourceColumn="ScanDt" DataSetColumn="ScanDt" />
              <Mapping SourceColumn="ScannedById" DataSetColumn="ScannedById" />
              <Mapping SourceColumn="QCDt" DataSetColumn="QCDt" />
              <Mapping SourceColumn="QCedById" DataSetColumn="QCedById" />
              <Mapping SourceColumn="FamilyId" DataSetColumn="FamilyId" />
              <Mapping SourceColumn="CouponInd" DataSetColumn="CouponInd" />
              <Mapping SourceColumn="CreateSizedDt" DataSetColumn="CreateSizedDt" />
              <Mapping SourceColumn="Priority" DataSetColumn="Priority" />
              <Mapping SourceColumn="CheckInPageCount" DataSetColumn="CheckInPageCount" />
              <Mapping SourceColumn="StatusID" DataSetColumn="StatusID" />
              <Mapping SourceColumn="CheckInOccurrences" DataSetColumn="CheckInOccurrences" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="AreVehicleImagesTransferred" Modifier="Public" Name="AreVehicleImagesTransferred" QueryType="Scalar" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="AreVehicleImagesTransferred">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*)
FROM VEHICLE V 
	INNER JOIN [User] U ON V.ScannedById = U.UserId
WHERE U.LocationId &lt;&gt; @LocationId AND V.FTPDt IS NULL AND V.VehicleId = @VehicleId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="LocationId" ColumnName="LocationId" DataSourceName="MCAP.dbo.[User]" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@LocationId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="LocationId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="VehicleId" ColumnName="VehicleId" DataSourceName="MCAP.dbo.Vehicle" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@VehicleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="VehicleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy1" GeneratorSourceName="AreVehiclePagesScanned" Modifier="Public" Name="AreVehiclePagesScanned" QueryType="Scalar" ScalarCallRetval="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="AreVehiclePagesScanned">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT COUNT(*) FROM vwCircular WHERE VehicleId=@VehicleId AND ScanDt IS NOT NULL;</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="VehicleId" ColumnName="VehicleId" DataSourceName="MCAP.dbo.vwCircular" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@VehicleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="VehicleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.vwCircular" DbObjectType="View" GenerateShortCommands="true" GeneratorSourceName="SetFamilyId" Modifier="Public" Name="SetFamilyId" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="SetFamilyId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE    vwCircular
SET              FamilyId = @FamilyId, FormName = @FormName
WHERE     (VehicleId = @VehicleId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="FamilyId" ColumnName="FamilyId" DataSourceName="MCAP.dbo.vwCircular" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@FamilyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FamilyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="FormName" ColumnName="FormName" DataSourceName="MCAP.dbo.vwCircular" DataTypeServer="varchar(100)" DbType="AnsiString" Direction="Input" ParameterName="@FormName" Precision="0" ProviderType="VarChar" Scale="0" Size="100" SourceColumn="FormName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="VehicleId" ColumnName="VehicleId" DataSourceName="MCAP.dbo.vwCircular" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@VehicleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="VehicleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE vwCircular SET
	FamilyId = @FamilyId
WHERE VehicleId=@VehicleId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="FamilyId" ColumnName="FamilyId" DataSourceName="MCAP.dbo.vwCircular" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@FamilyId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="FamilyId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="VehicleId" ColumnName="VehicleId" DataSourceName="MCAP.dbo.vwCircular" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@VehicleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="VehicleId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MediaTableAdapter" GeneratorDataComponentClassName="MediaTableAdapter" Name="Media" UserDataComponentName="MediaTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.Media" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     MediaID, Descrip
FROM         Media
ORDER BY Descrip</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MediaID" DataSetColumn="MediaID" />
              <Mapping SourceColumn="Descrip" DataSetColumn="Descrip" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="RetTableAdapter" GeneratorDataComponentClassName="RetTableAdapter" Name="Ret" UserDataComponentName="RetTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.Ret" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     RetId, Descrip, TradeClassId
FROM         Ret
WHERE     (EndDt IS NULL)
ORDER BY Descrip</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="RetId" DataSetColumn="RetId" />
              <Mapping SourceColumn="Descrip" DataSetColumn="Descrip" />
              <Mapping SourceColumn="TradeClassId" DataSetColumn="TradeClassId" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.Ret" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByTradeclassId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByTradeclassId" GeneratorSourceName="FillByTradeclassId" GetMethodModifier="Public" GetMethodName="GetDataByTradeclassId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByTradeclassId" UserSourceName="FillByTradeclassId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     RetId, Descrip, TradeClassId
FROM         Ret
WHERE     (EndDt IS NULL) AND (TradeClassId = @TradeclassId)
ORDER BY Descrip</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="TradeclassId" ColumnName="TradeClassId" DataSourceName="MCAP.dbo.Ret" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TradeclassId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TradeClassId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TradeClassTableAdapter" GeneratorDataComponentClassName="TradeClassTableAdapter" Name="TradeClass" UserDataComponentName="TradeClassTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.TradeClass" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     TradeClassId, Descrip
FROM         TradeClass
ORDER BY Descrip</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TradeClassId" DataSetColumn="TradeClassId" />
              <Mapping SourceColumn="Descrip" DataSetColumn="Descrip" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="vwPriorityTableAdapter" GeneratorDataComponentClassName="vwPriorityTableAdapter" Name="vwPriority" UserDataComponentName="vwPriorityTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.vwPriority" DbObjectType="View" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT     Priority
FROM         vwPriority
ORDER BY Priority</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Priority" DataSetColumn="Priority" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PageTableAdapter" GeneratorDataComponentClassName="PageTableAdapter" Name="Page" UserDataComponentName="PageTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MCAPConnectionString (MySettings)" DbObjectName="MCAP.dbo.Page" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByVehicleId" GenerateMethods="Fill" GenerateShortCommands="false" GeneratorSourceName="FillByVehicleId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="FillByVehicleId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT VehicleId, PageId, ISNULL(ImageName, REPLICATE('0', 3 - LEN(CAST(ReceivedOrder AS VARCHAR(3)))) 
											+ CAST(ReceivedOrder AS VARCHAR(3))) ImageName
		, PageTypeId, ReceivedOrder, PageName, PixelHieght, PixelWidth, SizeId, dbo.GetSizeText(SizeID) [Size]
FROM Page
WHERE     (VehicleId = @VehicleId)
ORDER BY ReceivedOrder</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="VehicleId" ColumnName="VehicleId" DataSourceName="MCAP.dbo.Page" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@VehicleId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="VehicleId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="VehicleId" DataSetColumn="VehicleId" />
              <Mapping SourceColumn="PageId" DataSetColumn="PageId" />
              <Mapping SourceColumn="ImageName" DataSetColumn="ImageName" />
              <Mapping SourceColumn="PageTypeId" DataSetColumn="PageTypeId" />
              <Mapping SourceColumn="ReceivedOrder" DataSetColumn="ReceivedOrder" />
              <Mapping SourceColumn="PageName" DataSetColumn="PageName" />
              <Mapping SourceColumn="PixelHieght" DataSetColumn="PixelHieght" />
              <Mapping SourceColumn="PixelWidth" DataSetColumn="PixelWidth" />
              <Mapping SourceColumn="SizeId" DataSetColumn="SizeId" />
              <Mapping SourceColumn="Size" DataSetColumn="Size" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="FamilyDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="FamilyDataSet" msprop:Generator_UserDSName="FamilyDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Family" msprop:Generator_UserTableName="Family" msprop:Generator_RowEvArgName="FamilyRowChangeEvent" msprop:Generator_TableVarName="tableFamily" msprop:Generator_TablePropName="Family" msprop:Generator_RowDeletingName="FamilyRowDeleting" msprop:Generator_RowChangingName="FamilyRowChanging" msprop:Generator_RowDeletedName="FamilyRowDeleted" msprop:Generator_RowEvHandlerName="FamilyRowChangeEventHandler" msprop:Generator_TableClassName="FamilyDataTable" msprop:Generator_RowChangedName="FamilyRowChanged" msprop:Generator_RowClassName="FamilyRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="FamilyId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnFamilyId" msprop:Generator_ColumnPropNameInRow="FamilyId" msprop:Generator_ColumnPropNameInTable="FamilyIdColumn" msprop:Generator_UserColumnName="FamilyId" type="xs:int" />
              <xs:element name="CreateDt" msprop:Generator_ColumnVarNameInTable="columnCreateDt" msprop:Generator_ColumnPropNameInRow="CreateDt" msprop:Generator_ColumnPropNameInTable="CreateDtColumn" msprop:Generator_UserColumnName="CreateDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="ReviewDt" msprop:Generator_ColumnVarNameInTable="columnReviewDt" msprop:Generator_ColumnPropNameInRow="ReviewDt" msprop:Generator_ColumnPropNameInTable="ReviewDtColumn" msprop:Generator_UserColumnName="ReviewDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="ReviewedByID" msprop:Generator_ColumnVarNameInTable="columnReviewedByID" msprop:Generator_ColumnPropNameInRow="ReviewedByID" msprop:Generator_ColumnPropNameInTable="ReviewedByIDColumn" msprop:Generator_UserColumnName="ReviewedByID" type="xs:int" minOccurs="0" />
              <xs:element name="FormName" msprop:Generator_ColumnVarNameInTable="columnFormName" msprop:Generator_ColumnPropNameInRow="FormName" msprop:Generator_ColumnPropNameInTable="FormNameColumn" msprop:Generator_UserColumnName="FormName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DisplayFamilyInformation" msprop:Generator_UserTableName="DisplayFamilyInformation" msprop:Generator_RowEvArgName="DisplayFamilyInformationRowChangeEvent" msprop:Generator_TableVarName="tableDisplayFamilyInformation" msprop:Generator_TablePropName="DisplayFamilyInformation" msprop:Generator_RowDeletingName="DisplayFamilyInformationRowDeleting" msprop:Generator_RowChangingName="DisplayFamilyInformationRowChanging" msprop:Generator_RowDeletedName="DisplayFamilyInformationRowDeleted" msprop:Generator_RowEvHandlerName="DisplayFamilyInformationRowChangeEventHandler" msprop:Generator_TableClassName="DisplayFamilyInformationDataTable" msprop:Generator_RowChangedName="DisplayFamilyInformationRowChanged" msprop:Generator_RowClassName="DisplayFamilyInformationRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="VehicleId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnVehicleId" msprop:Generator_ColumnPropNameInRow="VehicleId" msprop:Generator_ColumnPropNameInTable="VehicleIdColumn" msprop:Generator_UserColumnName="VehicleId" type="xs:int" />
              <xs:element name="MktId" msprop:Generator_ColumnVarNameInTable="columnMktId" msprop:Generator_ColumnPropNameInRow="MktId" msprop:Generator_ColumnPropNameInTable="MktIdColumn" msprop:Generator_UserColumnName="MktId" type="xs:int" minOccurs="0" />
              <xs:element name="ThemeId" msprop:Generator_ColumnVarNameInTable="columnThemeId" msprop:Generator_ColumnPropNameInRow="ThemeId" msprop:Generator_ColumnPropNameInTable="ThemeIdColumn" msprop:Generator_UserColumnName="ThemeId" type="xs:int" minOccurs="0" />
              <xs:element name="EventId" msprop:Generator_ColumnVarNameInTable="columnEventId" msprop:Generator_ColumnPropNameInRow="EventId" msprop:Generator_ColumnPropNameInTable="EventIdColumn" msprop:Generator_UserColumnName="EventId" type="xs:int" minOccurs="0" />
              <xs:element name="CreateDt" msprop:Generator_ColumnVarNameInTable="columnCreateDt" msprop:Generator_ColumnPropNameInRow="CreateDt" msprop:Generator_ColumnPropNameInTable="CreateDtColumn" msprop:Generator_UserColumnName="CreateDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Retailer" msprop:Generator_ColumnVarNameInTable="columnRetailer" msprop:Generator_ColumnPropNameInRow="Retailer" msprop:Generator_ColumnPropNameInTable="RetailerColumn" msprop:Generator_UserColumnName="Retailer" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Market" msprop:Generator_ColumnVarNameInTable="columnMarket" msprop:Generator_ColumnPropNameInRow="Market" msprop:Generator_ColumnPropNameInTable="MarketColumn" msprop:Generator_UserColumnName="Market" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Media" msprop:Generator_ColumnVarNameInTable="columnMedia" msprop:Generator_ColumnPropNameInRow="Media" msprop:Generator_ColumnPropNameInTable="MediaColumn" msprop:Generator_UserColumnName="Media" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Theme" msprop:Generator_ColumnVarNameInTable="columnTheme" msprop:Generator_ColumnPropNameInRow="Theme" msprop:Generator_ColumnPropNameInTable="ThemeColumn" msprop:Generator_UserColumnName="Theme" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Event" msprop:Generator_ColumnVarNameInTable="columnEvent" msprop:Generator_ColumnPropNameInRow="_Event" msprop:Generator_ColumnPropNameInTable="EventColumn" msprop:Generator_UserColumnName="Event" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BreakDt" msprop:Generator_ColumnVarNameInTable="columnBreakDt" msprop:Generator_ColumnPropNameInRow="BreakDt" msprop:Generator_ColumnPropNameInTable="BreakDtColumn" msprop:Generator_UserColumnName="BreakDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="StartDt" msprop:Generator_ColumnVarNameInTable="columnStartDt" msprop:Generator_ColumnPropNameInRow="StartDt" msprop:Generator_ColumnPropNameInTable="StartDtColumn" msprop:Generator_UserColumnName="StartDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="EndDt" msprop:Generator_ColumnVarNameInTable="columnEndDt" msprop:Generator_ColumnPropNameInRow="EndDt" msprop:Generator_ColumnPropNameInTable="EndDtColumn" msprop:Generator_UserColumnName="EndDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Priority" msprop:Generator_ColumnVarNameInTable="columnPriority" msprop:Generator_ColumnPropNameInRow="Priority" msprop:Generator_ColumnPropNameInTable="PriorityColumn" msprop:Generator_UserColumnName="Priority" type="xs:int" minOccurs="0" />
              <xs:element name="VehicleCreateDt" msprop:Generator_ColumnVarNameInTable="columnVehicleCreateDt" msprop:Generator_ColumnPropNameInRow="VehicleCreateDt" msprop:Generator_ColumnPropNameInTable="VehicleCreateDtColumn" msprop:Generator_UserColumnName="VehicleCreateDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="MinMktId" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnMinMktId" msprop:Generator_ColumnPropNameInRow="MinMktId" msprop:Generator_ColumnPropNameInTable="MinMktIdColumn" msprop:Generator_UserColumnName="MinMktId" type="xs:int" minOccurs="0" />
              <xs:element name="FirstMarket" msprop:Generator_ColumnVarNameInTable="columnFirstMarket" msprop:Generator_ColumnPropNameInRow="FirstMarket" msprop:Generator_ColumnPropNameInTable="FirstMarketColumn" msprop:Generator_UserColumnName="FirstMarket" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MaxMktId" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnMaxMktId" msprop:Generator_ColumnPropNameInRow="MaxMktId" msprop:Generator_ColumnPropNameInTable="MaxMktIdColumn" msprop:Generator_UserColumnName="MaxMktId" type="xs:int" minOccurs="0" />
              <xs:element name="LastMarket" msprop:Generator_ColumnVarNameInTable="columnLastMarket" msprop:Generator_ColumnPropNameInRow="LastMarket" msprop:Generator_ColumnPropNameInTable="LastMarketColumn" msprop:Generator_UserColumnName="LastMarket" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ReviewDt" msprop:Generator_ColumnVarNameInTable="columnReviewDt" msprop:Generator_ColumnPropNameInRow="ReviewDt" msprop:Generator_ColumnPropNameInTable="ReviewDtColumn" msprop:Generator_UserColumnName="ReviewDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="ActualPageCount" msprop:Generator_ColumnVarNameInTable="columnActualPageCount" msprop:Generator_ColumnPropNameInRow="ActualPageCount" msprop:Generator_ColumnPropNameInTable="ActualPageCountColumn" msprop:Generator_UserColumnName="ActualPageCount" type="xs:int" minOccurs="0" />
              <xs:element name="FamilyId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnFamilyId" msprop:Generator_ColumnPropNameInRow="FamilyId" msprop:Generator_ColumnPropNameInTable="FamilyIdColumn" msprop:Generator_UserColumnName="FamilyId" type="xs:int" />
              <xs:element name="ReviewedByID" msprop:Generator_ColumnVarNameInTable="columnReviewedByID" msprop:Generator_ColumnPropNameInRow="ReviewedByID" msprop:Generator_ColumnPropNameInTable="ReviewedByIDColumn" msprop:Generator_UserColumnName="ReviewedByID" type="xs:int" minOccurs="0" />
              <xs:element name="RetId" msprop:Generator_ColumnVarNameInTable="columnRetId" msprop:Generator_ColumnPropNameInRow="RetId" msprop:Generator_ColumnPropNameInTable="RetIdColumn" msprop:Generator_UserColumnName="RetId" type="xs:int" minOccurs="0" />
              <xs:element name="MediaID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnMediaID" msprop:Generator_ColumnPropNameInRow="MediaID" msprop:Generator_ColumnPropNameInTable="MediaIDColumn" msprop:Generator_UserColumnName="MediaID" type="xs:int" />
              <xs:element name="LanguageId" msprop:Generator_ColumnVarNameInTable="columnLanguageId" msprop:Generator_ColumnPropNameInRow="LanguageId" msprop:Generator_ColumnPropNameInTable="LanguageIdColumn" msprop:Generator_UserColumnName="LanguageId" type="xs:int" minOccurs="0" />
              <xs:element name="Language" msprop:Generator_ColumnVarNameInTable="columnLanguage" msprop:Generator_ColumnPropNameInRow="Language" msprop:Generator_ColumnPropNameInTable="LanguageColumn" msprop:Generator_UserColumnName="Language" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsReviewed" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnIsReviewed" msprop:Generator_ColumnPropNameInRow="IsReviewed" msprop:Generator_ColumnPropNameInTable="IsReviewedColumn" msprop:Generator_UserColumnName="IsReviewed" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="3" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="CouponInd" msprop:Generator_ColumnVarNameInTable="columnCouponInd" msprop:Generator_ColumnPropNameInRow="CouponInd" msprop:Generator_ColumnPropNameInTable="CouponIndColumn" msprop:Generator_UserColumnName="CouponInd" type="xs:unsignedByte" minOccurs="0" />
              <xs:element name="IndexedBy" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnIndexedBy" msprop:Generator_ColumnPropNameInRow="IndexedBy" msprop:Generator_ColumnPropNameInTable="IndexedByColumn" msprop:Generator_UserColumnName="IndexedBy" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="101" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Size" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnSize" msprop:Generator_ColumnPropNameInRow="Size" msprop:Generator_ColumnPropNameInTable="SizeColumn" msprop:Generator_UserColumnName="Size" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="FlyerId" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnFlyerId" msprop:Generator_ColumnPropNameInRow="FlyerId" msprop:Generator_ColumnPropNameInTable="FlyerIdColumn" msprop:Generator_UserColumnName="FlyerId" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="30" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="AdTypeId" msprop:Generator_ColumnVarNameInTable="columnAdTypeId" msprop:Generator_ColumnPropNameInRow="AdTypeId" msprop:Generator_ColumnPropNameInTable="AdTypeIdColumn" msprop:Generator_UserColumnName="AdTypeId" type="xs:int" minOccurs="0" />
              <xs:element name="AdDistId" msprop:Generator_ColumnVarNameInTable="columnAdDistId" msprop:Generator_ColumnPropNameInRow="AdDistId" msprop:Generator_ColumnPropNameInTable="AdDistIdColumn" msprop:Generator_UserColumnName="AdDistId" type="xs:int" minOccurs="0" />
              <xs:element name="AltMasterInd" msdata:Caption="LockInd" msprop:Generator_ColumnVarNameInTable="columnAltMasterInd" msprop:Generator_ColumnPropNameInRow="AltMasterInd" msprop:Generator_ColumnPropNameInTable="AltMasterIndColumn" msprop:Generator_UserColumnName="AltMasterInd" type="xs:unsignedByte" minOccurs="0" />
              <xs:element name="DurEntryInd" msprop:Generator_ColumnVarNameInTable="columnDurEntryInd" msprop:Generator_ColumnPropNameInRow="DurEntryInd" msprop:Generator_ColumnPropNameInTable="DurEntryIndColumn" msprop:Generator_UserColumnName="DurEntryInd" type="xs:unsignedByte" minOccurs="0" />
              <xs:element name="ConEntryInd" msprop:Generator_ColumnVarNameInTable="columnConEntryInd" msprop:Generator_ColumnPropNameInRow="ConEntryInd" msprop:Generator_ColumnPropNameInTable="ConEntryIndColumn" msprop:Generator_UserColumnName="ConEntryInd" type="xs:unsignedByte" minOccurs="0" />
              <xs:element name="CompareInd" msprop:Generator_ColumnVarNameInTable="columnCompareInd" msprop:Generator_ColumnPropNameInRow="CompareInd" msprop:Generator_ColumnPropNameInTable="CompareIndColumn" msprop:Generator_UserColumnName="CompareInd" type="xs:unsignedByte" minOccurs="0" />
              <xs:element name="HPStatus" msprop:Generator_ColumnVarNameInTable="columnHPStatus" msprop:Generator_ColumnPropNameInRow="HPStatus" msprop:Generator_ColumnPropNameInTable="HPStatusColumn" msprop:Generator_UserColumnName="HPStatus" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LockInd" msprop:Generator_ColumnVarNameInTable="columnLockInd" msprop:Generator_ColumnPropNameInRow="LockInd" msprop:Generator_ColumnPropNameInTable="LockIndColumn" msprop:Generator_UserColumnName="LockInd" type="xs:unsignedByte" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="vwCircular" msprop:Generator_UserTableName="vwCircular" msprop:Generator_RowEvArgName="vwCircularRowChangeEvent" msprop:Generator_TableVarName="tablevwCircular" msprop:Generator_TablePropName="vwCircular" msprop:Generator_RowDeletingName="vwCircularRowDeleting" msprop:Generator_RowChangingName="vwCircularRowChanging" msprop:Generator_RowDeletedName="vwCircularRowDeleted" msprop:Generator_RowEvHandlerName="vwCircularRowChangeEventHandler" msprop:Generator_TableClassName="vwCircularDataTable" msprop:Generator_RowChangedName="vwCircularRowChanged" msprop:Generator_RowClassName="vwCircularRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="VehicleId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnVehicleId" msprop:Generator_ColumnPropNameInRow="VehicleId" msprop:Generator_ColumnPropNameInTable="VehicleIdColumn" msprop:Generator_UserColumnName="VehicleId" type="xs:int" />
              <xs:element name="EnvelopeId" msprop:Generator_ColumnVarNameInTable="columnEnvelopeId" msprop:Generator_ColumnPropNameInRow="EnvelopeId" msprop:Generator_ColumnPropNameInTable="EnvelopeIdColumn" msprop:Generator_UserColumnName="EnvelopeId" type="xs:int" minOccurs="0" />
              <xs:element name="RetId" msprop:Generator_ColumnVarNameInTable="columnRetId" msprop:Generator_ColumnPropNameInRow="RetId" msprop:Generator_ColumnPropNameInTable="RetIdColumn" msprop:Generator_UserColumnName="RetId" type="xs:int" minOccurs="0" />
              <xs:element name="MktId" msprop:Generator_ColumnVarNameInTable="columnMktId" msprop:Generator_ColumnPropNameInRow="MktId" msprop:Generator_ColumnPropNameInTable="MktIdColumn" msprop:Generator_UserColumnName="MktId" type="xs:int" minOccurs="0" />
              <xs:element name="BreakDt" msprop:Generator_ColumnVarNameInTable="columnBreakDt" msprop:Generator_ColumnPropNameInRow="BreakDt" msprop:Generator_ColumnPropNameInTable="BreakDtColumn" msprop:Generator_UserColumnName="BreakDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="StartDt" msprop:Generator_ColumnVarNameInTable="columnStartDt" msprop:Generator_ColumnPropNameInRow="StartDt" msprop:Generator_ColumnPropNameInTable="StartDtColumn" msprop:Generator_UserColumnName="StartDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="EndDt" msprop:Generator_ColumnVarNameInTable="columnEndDt" msprop:Generator_ColumnPropNameInRow="EndDt" msprop:Generator_ColumnPropNameInTable="EndDtColumn" msprop:Generator_UserColumnName="EndDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="LanguageId" msprop:Generator_ColumnVarNameInTable="columnLanguageId" msprop:Generator_ColumnPropNameInRow="LanguageId" msprop:Generator_ColumnPropNameInTable="LanguageIdColumn" msprop:Generator_UserColumnName="LanguageId" type="xs:int" minOccurs="0" />
              <xs:element name="EventId" msprop:Generator_ColumnVarNameInTable="columnEventId" msprop:Generator_ColumnPropNameInRow="EventId" msprop:Generator_ColumnPropNameInTable="EventIdColumn" msprop:Generator_UserColumnName="EventId" type="xs:int" minOccurs="0" />
              <xs:element name="ThemeId" msprop:Generator_ColumnVarNameInTable="columnThemeId" msprop:Generator_ColumnPropNameInRow="ThemeId" msprop:Generator_ColumnPropNameInTable="ThemeIdColumn" msprop:Generator_UserColumnName="ThemeId" type="xs:int" minOccurs="0" />
              <xs:element name="MediaId" msprop:Generator_ColumnVarNameInTable="columnMediaId" msprop:Generator_ColumnPropNameInRow="MediaId" msprop:Generator_ColumnPropNameInTable="MediaIdColumn" msprop:Generator_UserColumnName="MediaId" type="xs:int" minOccurs="0" />
              <xs:element name="PublicationId" msprop:Generator_ColumnVarNameInTable="columnPublicationId" msprop:Generator_ColumnPropNameInRow="PublicationId" msprop:Generator_ColumnPropNameInTable="PublicationIdColumn" msprop:Generator_UserColumnName="PublicationId" type="xs:int" minOccurs="0" />
              <xs:element name="FlashInd" msprop:Generator_ColumnVarNameInTable="columnFlashInd" msprop:Generator_ColumnPropNameInRow="FlashInd" msprop:Generator_ColumnPropNameInTable="FlashIndColumn" msprop:Generator_UserColumnName="FlashInd" type="xs:unsignedByte" minOccurs="0" />
              <xs:element name="CreateDt" msprop:Generator_ColumnVarNameInTable="columnCreateDt" msprop:Generator_ColumnPropNameInRow="CreateDt" msprop:Generator_ColumnPropNameInTable="CreateDtColumn" msprop:Generator_UserColumnName="CreateDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="CreatedById" msprop:Generator_ColumnVarNameInTable="columnCreatedById" msprop:Generator_ColumnPropNameInRow="CreatedById" msprop:Generator_ColumnPropNameInTable="CreatedByIdColumn" msprop:Generator_UserColumnName="CreatedById" type="xs:int" minOccurs="0" />
              <xs:element name="ScanDt" msprop:Generator_ColumnVarNameInTable="columnScanDt" msprop:Generator_ColumnPropNameInRow="ScanDt" msprop:Generator_ColumnPropNameInTable="ScanDtColumn" msprop:Generator_UserColumnName="ScanDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="ScannedById" msprop:Generator_ColumnVarNameInTable="columnScannedById" msprop:Generator_ColumnPropNameInRow="ScannedById" msprop:Generator_ColumnPropNameInTable="ScannedByIdColumn" msprop:Generator_UserColumnName="ScannedById" type="xs:int" minOccurs="0" />
              <xs:element name="QCDt" msprop:Generator_ColumnVarNameInTable="columnQCDt" msprop:Generator_ColumnPropNameInRow="QCDt" msprop:Generator_ColumnPropNameInTable="QCDtColumn" msprop:Generator_UserColumnName="QCDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="QCedById" msprop:Generator_ColumnVarNameInTable="columnQCedById" msprop:Generator_ColumnPropNameInRow="QCedById" msprop:Generator_ColumnPropNameInTable="QCedByIdColumn" msprop:Generator_UserColumnName="QCedById" type="xs:int" minOccurs="0" />
              <xs:element name="FamilyId" msprop:Generator_ColumnVarNameInTable="columnFamilyId" msprop:Generator_ColumnPropNameInRow="FamilyId" msprop:Generator_ColumnPropNameInTable="FamilyIdColumn" msprop:Generator_UserColumnName="FamilyId" type="xs:int" minOccurs="0" />
              <xs:element name="CouponInd" msprop:Generator_ColumnVarNameInTable="columnCouponInd" msprop:Generator_ColumnPropNameInRow="CouponInd" msprop:Generator_ColumnPropNameInTable="CouponIndColumn" msprop:Generator_UserColumnName="CouponInd" type="xs:unsignedByte" minOccurs="0" />
              <xs:element name="CreateSizedDt" msprop:Generator_ColumnVarNameInTable="columnCreateSizedDt" msprop:Generator_ColumnPropNameInRow="CreateSizedDt" msprop:Generator_ColumnPropNameInTable="CreateSizedDtColumn" msprop:Generator_UserColumnName="CreateSizedDt" type="xs:dateTime" minOccurs="0" />
              <xs:element name="Priority" msprop:Generator_ColumnVarNameInTable="columnPriority" msprop:Generator_ColumnPropNameInRow="Priority" msprop:Generator_ColumnPropNameInTable="PriorityColumn" msprop:Generator_UserColumnName="Priority" type="xs:int" minOccurs="0" />
              <xs:element name="CheckInPageCount" msprop:Generator_ColumnVarNameInTable="columnCheckInPageCount" msprop:Generator_ColumnPropNameInRow="CheckInPageCount" msprop:Generator_ColumnPropNameInTable="CheckInPageCountColumn" msprop:Generator_UserColumnName="CheckInPageCount" type="xs:int" minOccurs="0" />
              <xs:element name="StatusID" msprop:Generator_ColumnVarNameInTable="columnStatusID" msprop:Generator_ColumnPropNameInRow="StatusID" msprop:Generator_ColumnPropNameInTable="StatusIDColumn" msprop:Generator_UserColumnName="StatusID" type="xs:int" minOccurs="0" />
              <xs:element name="CheckInOccurrences" msprop:Generator_ColumnVarNameInTable="columnCheckInOccurrences" msprop:Generator_ColumnPropNameInRow="CheckInOccurrences" msprop:Generator_ColumnPropNameInTable="CheckInOccurrencesColumn" msprop:Generator_UserColumnName="CheckInOccurrences" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Media" msprop:Generator_UserTableName="Media" msprop:Generator_RowEvArgName="MediaRowChangeEvent" msprop:Generator_TableVarName="tableMedia" msprop:Generator_TablePropName="Media" msprop:Generator_RowDeletingName="MediaRowDeleting" msprop:Generator_RowChangingName="MediaRowChanging" msprop:Generator_RowDeletedName="MediaRowDeleted" msprop:Generator_RowEvHandlerName="MediaRowChangeEventHandler" msprop:Generator_TableClassName="MediaDataTable" msprop:Generator_RowChangedName="MediaRowChanged" msprop:Generator_RowClassName="MediaRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MediaID" msdata:ReadOnly="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnMediaID" msprop:Generator_ColumnPropNameInRow="MediaID" msprop:Generator_ColumnPropNameInTable="MediaIDColumn" msprop:Generator_UserColumnName="MediaID" type="xs:int" minOccurs="0" />
              <xs:element name="Descrip" msprop:Generator_ColumnVarNameInTable="columnDescrip" msprop:Generator_ColumnPropNameInRow="Descrip" msprop:Generator_ColumnPropNameInTable="DescripColumn" msprop:Generator_UserColumnName="Descrip" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Ret" msprop:Generator_UserTableName="Ret" msprop:Generator_RowEvArgName="RetRowChangeEvent" msprop:Generator_TableVarName="tableRet" msprop:Generator_TablePropName="Ret" msprop:Generator_RowDeletingName="RetRowDeleting" msprop:Generator_RowChangingName="RetRowChanging" msprop:Generator_RowDeletedName="RetRowDeleted" msprop:Generator_RowEvHandlerName="RetRowChangeEventHandler" msprop:Generator_TableClassName="RetDataTable" msprop:Generator_RowChangedName="RetRowChanged" msprop:Generator_RowClassName="RetRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="RetId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnRetId" msprop:Generator_ColumnPropNameInRow="RetId" msprop:Generator_ColumnPropNameInTable="RetIdColumn" msprop:Generator_UserColumnName="RetId" type="xs:int" />
              <xs:element name="Descrip" msprop:Generator_ColumnVarNameInTable="columnDescrip" msprop:Generator_ColumnPropNameInRow="Descrip" msprop:Generator_ColumnPropNameInTable="DescripColumn" msprop:Generator_UserColumnName="Descrip" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TradeClassId" msprop:Generator_ColumnVarNameInTable="columnTradeClassId" msprop:Generator_ColumnPropNameInRow="TradeClassId" msprop:Generator_ColumnPropNameInTable="TradeClassIdColumn" msprop:Generator_UserColumnName="TradeClassId" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TradeClass" msprop:Generator_UserTableName="TradeClass" msprop:Generator_RowEvArgName="TradeClassRowChangeEvent" msprop:Generator_TableVarName="tableTradeClass" msprop:Generator_TablePropName="TradeClass" msprop:Generator_RowDeletingName="TradeClassRowDeleting" msprop:Generator_RowChangingName="TradeClassRowChanging" msprop:Generator_RowDeletedName="TradeClassRowDeleted" msprop:Generator_RowEvHandlerName="TradeClassRowChangeEventHandler" msprop:Generator_TableClassName="TradeClassDataTable" msprop:Generator_RowChangedName="TradeClassRowChanged" msprop:Generator_RowClassName="TradeClassRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TradeClassId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnTradeClassId" msprop:Generator_ColumnPropNameInRow="TradeClassId" msprop:Generator_ColumnPropNameInTable="TradeClassIdColumn" msprop:Generator_UserColumnName="TradeClassId" type="xs:int" />
              <xs:element name="Descrip" msprop:Generator_ColumnVarNameInTable="columnDescrip" msprop:Generator_ColumnPropNameInRow="Descrip" msprop:Generator_ColumnPropNameInTable="DescripColumn" msprop:Generator_UserColumnName="Descrip" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="vwPriority" msprop:Generator_UserTableName="vwPriority" msprop:Generator_RowEvArgName="vwPriorityRowChangeEvent" msprop:Generator_TableVarName="tablevwPriority" msprop:Generator_TablePropName="vwPriority" msprop:Generator_RowDeletingName="vwPriorityRowDeleting" msprop:Generator_RowChangingName="vwPriorityRowChanging" msprop:Generator_RowDeletedName="vwPriorityRowDeleted" msprop:Generator_RowEvHandlerName="vwPriorityRowChangeEventHandler" msprop:Generator_TableClassName="vwPriorityDataTable" msprop:Generator_RowChangedName="vwPriorityRowChanged" msprop:Generator_RowClassName="vwPriorityRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Priority" msprop:Generator_ColumnVarNameInTable="columnPriority" msprop:Generator_ColumnPropNameInRow="Priority" msprop:Generator_ColumnPropNameInTable="PriorityColumn" msprop:Generator_UserColumnName="Priority" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Page" msprop:Generator_UserTableName="Page" msprop:Generator_RowEvArgName="PageRowChangeEvent" msprop:Generator_TableVarName="tablePage" msprop:Generator_TablePropName="Page" msprop:Generator_RowDeletingName="PageRowDeleting" msprop:Generator_RowChangingName="PageRowChanging" msprop:Generator_RowDeletedName="PageRowDeleted" msprop:Generator_RowEvHandlerName="PageRowChangeEventHandler" msprop:Generator_TableClassName="PageDataTable" msprop:Generator_RowChangedName="PageRowChanged" msprop:Generator_RowClassName="PageRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="VehicleId" msprop:Generator_ColumnVarNameInTable="columnVehicleId" msprop:Generator_ColumnPropNameInRow="VehicleId" msprop:Generator_ColumnPropNameInTable="VehicleIdColumn" msprop:Generator_UserColumnName="VehicleId" type="xs:int" minOccurs="0" />
              <xs:element name="PageId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnPageId" msprop:Generator_ColumnPropNameInRow="PageId" msprop:Generator_ColumnPropNameInTable="PageIdColumn" msprop:Generator_UserColumnName="PageId" type="xs:int" />
              <xs:element name="ImageName" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnImageName" msprop:Generator_ColumnPropNameInRow="ImageName" msprop:Generator_ColumnPropNameInTable="ImageNameColumn" msprop:Generator_UserColumnName="ImageName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PageTypeId" msprop:Generator_ColumnVarNameInTable="columnPageTypeId" msprop:Generator_ColumnPropNameInRow="PageTypeId" msprop:Generator_ColumnPropNameInTable="PageTypeIdColumn" msprop:Generator_UserColumnName="PageTypeId" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="1" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ReceivedOrder" msprop:Generator_ColumnVarNameInTable="columnReceivedOrder" msprop:Generator_ColumnPropNameInRow="ReceivedOrder" msprop:Generator_ColumnPropNameInTable="ReceivedOrderColumn" msprop:Generator_UserColumnName="ReceivedOrder" type="xs:int" minOccurs="0" />
              <xs:element name="PageName" msprop:Generator_ColumnVarNameInTable="columnPageName" msprop:Generator_ColumnPropNameInRow="PageName" msprop:Generator_ColumnPropNameInTable="PageNameColumn" msprop:Generator_UserColumnName="PageName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PixelHieght" msprop:Generator_ColumnVarNameInTable="columnPixelHieght" msprop:Generator_ColumnPropNameInRow="PixelHieght" msprop:Generator_ColumnPropNameInTable="PixelHieghtColumn" msprop:Generator_UserColumnName="PixelHieght" type="xs:int" minOccurs="0" />
              <xs:element name="PixelWidth" msprop:Generator_ColumnVarNameInTable="columnPixelWidth" msprop:Generator_ColumnPropNameInRow="PixelWidth" msprop:Generator_ColumnPropNameInTable="PixelWidthColumn" msprop:Generator_UserColumnName="PixelWidth" type="xs:int" minOccurs="0" />
              <xs:element name="SizeId" msprop:Generator_ColumnVarNameInTable="columnSizeId" msprop:Generator_ColumnPropNameInRow="SizeId" msprop:Generator_ColumnPropNameInTable="SizeIdColumn" msprop:Generator_UserColumnName="SizeId" type="xs:int" minOccurs="0" />
              <xs:element name="Size" msdata:ReadOnly="true" msprop:Generator_ColumnVarNameInTable="columnSize" msprop:Generator_ColumnPropNameInRow="Size" msprop:Generator_ColumnPropNameInTable="SizeColumn" msprop:Generator_UserColumnName="Size" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="15" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Family" />
      <xs:field xpath="mstns:FamilyId" />
    </xs:unique>
    <xs:unique name="DisplayFamilyInformation_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DisplayFamilyInformation" />
      <xs:field xpath="mstns:FamilyId" />
      <xs:field xpath="mstns:VehicleId" />
      <xs:field xpath="mstns:MediaID" />
    </xs:unique>
    <xs:unique name="vwCircular_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:vwCircular" />
      <xs:field xpath="mstns:VehicleId" />
    </xs:unique>
    <xs:unique name="Ret_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Ret" />
      <xs:field xpath="mstns:RetId" />
    </xs:unique>
    <xs:unique name="TradeClass_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TradeClass" />
      <xs:field xpath="mstns:TradeClassId" />
    </xs:unique>
    <xs:unique name="Page_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Page" />
      <xs:field xpath="mstns:PageId" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="Family_vwCircular" msdata:parent="Family" msdata:child="vwCircular" msdata:parentkey="FamilyId" msdata:childkey="FamilyId" msprop:Generator_UserChildTable="vwCircular" msprop:Generator_ChildPropName="GetvwCircularRows" msprop:Generator_UserRelationName="Family_vwCircular" msprop:Generator_ParentPropName="FamilyRow" msprop:Generator_RelationVarName="relationFamily_vwCircular" msprop:Generator_UserParentTable="Family" />
      <msdata:Relationship name="FK_Ret_TradeClass" msdata:parent="TradeClass" msdata:child="Ret" msdata:parentkey="TradeClassId" msdata:childkey="TradeClassId" msprop:Generator_UserChildTable="Ret" msprop:Generator_ChildPropName="GetRetRows" msprop:Generator_UserRelationName="FK_Ret_TradeClass" msprop:Generator_ParentPropName="TradeClassRow" msprop:Generator_RelationVarName="relationFK_Ret_TradeClass" msprop:Generator_UserParentTable="TradeClass" />
      <msdata:Relationship name="Ret_vwCircular" msdata:parent="Ret" msdata:child="vwCircular" msdata:parentkey="RetId" msdata:childkey="RetId" msprop:Generator_UserChildTable="vwCircular" msprop:Generator_ChildPropName="GetvwCircularRows" msprop:Generator_UserRelationName="Ret_vwCircular" msprop:Generator_ParentPropName="RetRow" msprop:Generator_RelationVarName="relationRet_vwCircular" msprop:Generator_UserParentTable="Ret" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>